{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SparkFun RTK Products This is the firmware, settings, and hardware documentation for the SparkFun RTK line of products: SparkFun RTK Surveyor (GPS-18443) SparkFun RTK Express (GPS-18442) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Facet (GPS-19029) Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hookup Guide Hookup Guide Hookup Guide Hookup Guide Hookup Guide","title":"SparkFun RTK Products"},{"location":"#sparkfun-rtk-products","text":"This is the firmware, settings, and hardware documentation for the SparkFun RTK line of products: SparkFun RTK Surveyor (GPS-18443) SparkFun RTK Express (GPS-18442) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Facet (GPS-19029) Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hookup Guide Hookup Guide Hookup Guide Hookup Guide Hookup Guide","title":"SparkFun RTK Products"},{"location":"accuracy_verification/","text":"Accuracy Verification Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Facet in the field You\u2019ve got an incredibly powerful GNSS receiver in your hands. How do you verify that you can get really accurate location readings? It's a bit of work but it's a lot of fun and you'll learn a tremendous amount about surveying along the way. This is, admittedly, a very US-centric tutorial. We hope that it will provide some of the tools and basic guidance to be replicated in other countries. If you have additional sources for GPS/GNSS surveyed monuments in your own country, consider adding them to this document! This is a replication and confirmation of the procedure done by RTKLibExplorer in 2018 . We modified it to demonstrate a similar process but using u-blox hardware and with a few updates. The process goes like this: Find a local monument Covert the coordinates Take measurements Calculate differences Get Used to RTK RTK Fix Mode Before we can consider doing anything in the field, we need to get really comfortable using the RTK product. Verify you can get your device into RTK Fix mode. This includes setting up a permanent base and/or using a service like Skylark to provide the correction data to the RTK product. Before planning a trip to the field get used to using the RTK product in Rover mode with NTRIP corrections being passed over Bluetooth to your device. Locate GPS Monument A common metal surveyor's mark Locate a GPS monument. These are the little metal caps, placed by surveyors, embedded into the sidewalk and roads around populated areas. While monuments are fairly common, we need a monument whose location is precisely known. Boulder has a large number of monuments Thankfully, in the USA the National Geodetic Survey has an incredible database of public monuments. Enter your location into the NGS Data Explorer to find the nearest monument. Boulder's GPS monuments While the Data Explorer will show many marks, turn off all but the GPS marks. These were surveyed with extreme precision and have published coordinates. Convert Monument Location Monument near SparkFun Find a GPS monument that is easiest for you to get to, click on it, and open the datasheet. You'll see a large amount of text and data for that specific location. Position in both NAD83 and ECEF My respect for the surveying industry grows daily, but that doesn't mean they are free from competing and confusing standards. What you need to know is that the SparkFun RTK product line outputs coordinates in the WGS84 coordinate system by default and can output ECEF as well. Most of the coordinates by the NGS are NAD83 which has about a 1.5-meter difference from the WGS84 coordinate system. No big deal for general mapping but it'll throw a wrench in your testing if you're not careful. The SparkFun example monument is at: Latitude: 40 05 14.86880 (NAD83 in 2012) Longitude: -105 09 01.68689 (NAD83 in 2012) Elliptical Height: 1613.737 meters (NAD83 in 2012) Convert NAD83 to Today So we know the NAD83 Lat/Long of our monument, right? Not quite. Example plate movement map The earth is not static and the tectonic plates have this annoying habit of moving . Note that the coordinates from our datasheet are from 6/27/2012. Ten years of movement can affect millimeter measurements. Plate tectonic time machine Thankfully the NGS has a tool called Horizontal Time-Dependent Positioning . This allows both the conversion between coordinate systems and adjusting a given location to a given start and end time. Use the tool to convert the NAD83 coordinates of your monument from the time they were taken (June 27, 2012, in our example) to WGS84(G2139) coordinates on today's date. If you convert the location for your monument on a Tuesday and visit it 5 days later, the coordinates should still be perfectly fine. This tool is needed both for the coordinate change (NAD83 to WGS84) and for long (months or years) periods between when the monument was surveyed. Monument converted to WGS84 corrected to 2022 Once we enter all the pertinent data, we receive a nice output showing us our modern-day WGS84 coordinates! Also, note the X/Y/Z ECEF coordinates. The SparkFun example monument is at: Latitude: 40 05 14.88667 (WGS84 in 2022) Longitude: -105 09 01.74023 (WGS84 in 2022) Elliptical Height: 1612.873 meters (WGS84 in 2022) And in ECEF (this will be handy in a minute): X: -1277423.441 m (ECEF in 2022) Y: -4717810.159 m (ECEF in 2022) Z: 4086459.331 m (ECEF in 2022) Convert from HH:MM:SS to Decimal Conversion to Decimal The NGS coordinates are in the hour/minute/second format (ie, 40 05 14.86880). We need decimal format when we're in the field viewing locations in SW Maps. We recommend the LatLong.net converter, but there are many options. Make sure the tools, converters, and calculators you use maintain 8 decimal places. The SparkFun example monument is at: Latitude: 40.08746852 (WGS84 in 2022) Longitude: -105.15048340 (WGS84 in 2022) Elliptical Height: 1613.737 meters (WGS84 in 2022) These are the coordinates we hope to see using SW Maps once we get out into the field. Write down your monument coordinates so that you have some idea of how close your unit is to the ideal in real-time. Field Trip! Cheap tripod above the monument Not a bad view! You will need to decide how cheap you want your setup to be. I went too cheap; my tripod doesn\u2019t have a hook on the bottom so the string with a bolt (I didn\u2019t even have a plumb bob) to center above the marker was not central to the Facet. The height measurement from the mark to the ARP (bottom of the Facet) was done with a tape measure, in other words, not very accurate. But it works ! Find the monument and locate your Facet (or RTK Surveyor, Express, Express Plus, Facet L-Band, etc) over the monument. Using a tape measure or other tool, measure the distance from the top of the monument to the bottom of the Facet. In this example, it was 45 \u00be\u201d or 1162mm. Obviously, millimeters matter here but don't let 'perfection' be the enemy of 'done'. L-Band Facet ARP Locate the ARP of your given RTK product ( 53mm for units using the TOP106 Antenna, 61mm for Facet, 69mm for Facet L-Band). Add your ARP to the height above the monument you measured previously. In this example 1416 + 69 = 1.485m. Enter that total height into SW Maps as the \u2018Instrument Height\u2019. This will allow the software to subtract the antenna location height from the current 3D location to gain the location of the point where the plumb bob (or bolt) below your apparatus is located. With your instrument height determined, connect to the RTK product, begin sending RTCM corrections (either over NTRIP or radio link) and enter RTK Fix. Record Readings SW Maps screenshot of monument location We can see the approximate location of the monument in the above location. Screenshot of a point in time Note the 8 decimal places on the Lat/Long. Screenshots are an easy way to record lat/long/alt but SW Maps (and other GIS software) allows the averaging of a position. Choose your own adventure. For our example, we took screenshots/snapshots of the location. Some surveyors hold a position for multiple minutes to get a point; we can do the same in under a second. Comparison of three RTK correction sources Off the shelf, we regularly see 300 down to 150mm horizontal positional accuracy using any RTK product with a good L1/L2 antenna. This is shown in the picture above as the circle with 'No Corrections'. With corrections turned on, the benefit of an RTK fix is obvious. The two surveyed points overlap each other so closely they are nearly indistinguishable. The SparkFun base station is documented here and has a location accuracy of approximately 8.4mm. Using a base station is more accurate (as we will see) but L-Band corrections will also get you incredibly similar accuracy with a lot less hassle. Why doesn\u2019t it match the image? Actual location vs image Your location bubble may not fall directly over the pixels representing the monument. Why? Imagine you are a satellite 50 miles above the earth\u2019s surface. Now take a photo that is many megapixels. Now align all those pixels within a few millimeters of reality. Google maps (and all terrestrial imagery as an industry) does an incredible job of aligning the surface imagery but it is not perfect, and it is certainly not millimeter accurate. Do not assume the google maps image is where your monument actually exists. Spreadsheet Party We\u2019ve established the monument\u2019s location, we\u2019ve captured the location of the RTK Facet, and they are different, but by how much? Calculating the difference between Lat/Long coordinates is not trivial. We\u2019ve found converting to the ECEF coordinate system is the easiest way to calculate the difference between GPS coordinates. Convert LLA to ECEF Enter your lat, long, and altitude coordinates into an LLA to ECEF converter. We found the Sysense calculator to work very well. How do we know it\u2019s accurate? Take the original coordinates from the NGS Datasheet, and use the calculator to convert them to ECEF. They are identical. ECEF difference between monument and readings Feel free to look at and make a copy of the SparkFun example spreadsheet. ECEF is a wonderfully simplistic frame of reference; the comparison between two points is simply X/Y/Z in meters. We can use the Pythagorean theorem to calculate the 3D variance. In our example, it is 52mm using corrections from a fixed base, and 189mm for an L-Band corrected base. 52mm off a professional mark is a clear indicator we are very close to the limit of our equipment. The sheer amount of geoscience, coordinate math, and relativistic physics that very smart people have contributed to enable any part of this experiment is awe-inspiring. It gave me great satisfaction and reassurance that our base at SparkFun HQ is set up well, and that, in the hands of a professional, the RTK product line is quite capable of providing very accurate readings. How do I get 14mm?! Use the best equipment. Our mechanical setup was rickety and cheap. Use a surveyor\u2019s bipod setup, with a bubble level, and a prism pole to accurately level the RTK receiver and measure the distance to the monument. Use an antenna that is NGS calibrated to obtain accurate ARPs. The SparkFun TOP106 antenna has been calibrated and we are in the process of calibrating the RTK Facet and RTK Facet L-Band. Use an accurate base. A temporary or \u2018survey-in\u2019 base will not be accurate. The base needs 24 hours of logging with a PPP analysis . Be within 10km of your base. A baseline that is more than 10km will introduce inaccuracies to the RTK fix readings. Correction services are not as accurate as a fixed base. While services such as Skylark and PointPerfect are convenient , they use models to estimate the overall isotropic disturbance. A local, fixed base will outperform a correction service. Take an average of points. All the points taken in this example were single snapshots. Average a few seconds' worth of readings. This was a lot of fun and a good excuse to get outdoors. We hope you enjoy finding some new points in your world.","title":"Accuracy Verification"},{"location":"accuracy_verification/#accuracy-verification","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Facet in the field You\u2019ve got an incredibly powerful GNSS receiver in your hands. How do you verify that you can get really accurate location readings? It's a bit of work but it's a lot of fun and you'll learn a tremendous amount about surveying along the way. This is, admittedly, a very US-centric tutorial. We hope that it will provide some of the tools and basic guidance to be replicated in other countries. If you have additional sources for GPS/GNSS surveyed monuments in your own country, consider adding them to this document! This is a replication and confirmation of the procedure done by RTKLibExplorer in 2018 . We modified it to demonstrate a similar process but using u-blox hardware and with a few updates. The process goes like this: Find a local monument Covert the coordinates Take measurements Calculate differences","title":"Accuracy Verification"},{"location":"accuracy_verification/#get-used-to-rtk","text":"RTK Fix Mode Before we can consider doing anything in the field, we need to get really comfortable using the RTK product. Verify you can get your device into RTK Fix mode. This includes setting up a permanent base and/or using a service like Skylark to provide the correction data to the RTK product. Before planning a trip to the field get used to using the RTK product in Rover mode with NTRIP corrections being passed over Bluetooth to your device.","title":"Get Used to RTK"},{"location":"accuracy_verification/#locate-gps-monument","text":"A common metal surveyor's mark Locate a GPS monument. These are the little metal caps, placed by surveyors, embedded into the sidewalk and roads around populated areas. While monuments are fairly common, we need a monument whose location is precisely known. Boulder has a large number of monuments Thankfully, in the USA the National Geodetic Survey has an incredible database of public monuments. Enter your location into the NGS Data Explorer to find the nearest monument. Boulder's GPS monuments While the Data Explorer will show many marks, turn off all but the GPS marks. These were surveyed with extreme precision and have published coordinates.","title":"Locate GPS Monument"},{"location":"accuracy_verification/#convert-monument-location","text":"Monument near SparkFun Find a GPS monument that is easiest for you to get to, click on it, and open the datasheet. You'll see a large amount of text and data for that specific location. Position in both NAD83 and ECEF My respect for the surveying industry grows daily, but that doesn't mean they are free from competing and confusing standards. What you need to know is that the SparkFun RTK product line outputs coordinates in the WGS84 coordinate system by default and can output ECEF as well. Most of the coordinates by the NGS are NAD83 which has about a 1.5-meter difference from the WGS84 coordinate system. No big deal for general mapping but it'll throw a wrench in your testing if you're not careful. The SparkFun example monument is at: Latitude: 40 05 14.86880 (NAD83 in 2012) Longitude: -105 09 01.68689 (NAD83 in 2012) Elliptical Height: 1613.737 meters (NAD83 in 2012)","title":"Convert Monument Location"},{"location":"accuracy_verification/#convert-nad83-to-today","text":"So we know the NAD83 Lat/Long of our monument, right? Not quite. Example plate movement map The earth is not static and the tectonic plates have this annoying habit of moving . Note that the coordinates from our datasheet are from 6/27/2012. Ten years of movement can affect millimeter measurements. Plate tectonic time machine Thankfully the NGS has a tool called Horizontal Time-Dependent Positioning . This allows both the conversion between coordinate systems and adjusting a given location to a given start and end time. Use the tool to convert the NAD83 coordinates of your monument from the time they were taken (June 27, 2012, in our example) to WGS84(G2139) coordinates on today's date. If you convert the location for your monument on a Tuesday and visit it 5 days later, the coordinates should still be perfectly fine. This tool is needed both for the coordinate change (NAD83 to WGS84) and for long (months or years) periods between when the monument was surveyed. Monument converted to WGS84 corrected to 2022 Once we enter all the pertinent data, we receive a nice output showing us our modern-day WGS84 coordinates! Also, note the X/Y/Z ECEF coordinates. The SparkFun example monument is at: Latitude: 40 05 14.88667 (WGS84 in 2022) Longitude: -105 09 01.74023 (WGS84 in 2022) Elliptical Height: 1612.873 meters (WGS84 in 2022) And in ECEF (this will be handy in a minute): X: -1277423.441 m (ECEF in 2022) Y: -4717810.159 m (ECEF in 2022) Z: 4086459.331 m (ECEF in 2022)","title":"Convert NAD83 to Today"},{"location":"accuracy_verification/#convert-from-hhmmss-to-decimal","text":"Conversion to Decimal The NGS coordinates are in the hour/minute/second format (ie, 40 05 14.86880). We need decimal format when we're in the field viewing locations in SW Maps. We recommend the LatLong.net converter, but there are many options. Make sure the tools, converters, and calculators you use maintain 8 decimal places. The SparkFun example monument is at: Latitude: 40.08746852 (WGS84 in 2022) Longitude: -105.15048340 (WGS84 in 2022) Elliptical Height: 1613.737 meters (WGS84 in 2022) These are the coordinates we hope to see using SW Maps once we get out into the field. Write down your monument coordinates so that you have some idea of how close your unit is to the ideal in real-time.","title":"Convert from HH:MM:SS to Decimal"},{"location":"accuracy_verification/#field-trip","text":"Cheap tripod above the monument Not a bad view! You will need to decide how cheap you want your setup to be. I went too cheap; my tripod doesn\u2019t have a hook on the bottom so the string with a bolt (I didn\u2019t even have a plumb bob) to center above the marker was not central to the Facet. The height measurement from the mark to the ARP (bottom of the Facet) was done with a tape measure, in other words, not very accurate. But it works ! Find the monument and locate your Facet (or RTK Surveyor, Express, Express Plus, Facet L-Band, etc) over the monument. Using a tape measure or other tool, measure the distance from the top of the monument to the bottom of the Facet. In this example, it was 45 \u00be\u201d or 1162mm. Obviously, millimeters matter here but don't let 'perfection' be the enemy of 'done'. L-Band Facet ARP Locate the ARP of your given RTK product ( 53mm for units using the TOP106 Antenna, 61mm for Facet, 69mm for Facet L-Band). Add your ARP to the height above the monument you measured previously. In this example 1416 + 69 = 1.485m. Enter that total height into SW Maps as the \u2018Instrument Height\u2019. This will allow the software to subtract the antenna location height from the current 3D location to gain the location of the point where the plumb bob (or bolt) below your apparatus is located. With your instrument height determined, connect to the RTK product, begin sending RTCM corrections (either over NTRIP or radio link) and enter RTK Fix.","title":"Field Trip!"},{"location":"accuracy_verification/#record-readings","text":"SW Maps screenshot of monument location We can see the approximate location of the monument in the above location. Screenshot of a point in time Note the 8 decimal places on the Lat/Long. Screenshots are an easy way to record lat/long/alt but SW Maps (and other GIS software) allows the averaging of a position. Choose your own adventure. For our example, we took screenshots/snapshots of the location. Some surveyors hold a position for multiple minutes to get a point; we can do the same in under a second. Comparison of three RTK correction sources Off the shelf, we regularly see 300 down to 150mm horizontal positional accuracy using any RTK product with a good L1/L2 antenna. This is shown in the picture above as the circle with 'No Corrections'. With corrections turned on, the benefit of an RTK fix is obvious. The two surveyed points overlap each other so closely they are nearly indistinguishable. The SparkFun base station is documented here and has a location accuracy of approximately 8.4mm. Using a base station is more accurate (as we will see) but L-Band corrections will also get you incredibly similar accuracy with a lot less hassle.","title":"Record Readings"},{"location":"accuracy_verification/#why-doesnt-it-match-the-image","text":"Actual location vs image Your location bubble may not fall directly over the pixels representing the monument. Why? Imagine you are a satellite 50 miles above the earth\u2019s surface. Now take a photo that is many megapixels. Now align all those pixels within a few millimeters of reality. Google maps (and all terrestrial imagery as an industry) does an incredible job of aligning the surface imagery but it is not perfect, and it is certainly not millimeter accurate. Do not assume the google maps image is where your monument actually exists.","title":"Why doesn\u2019t it match the image?"},{"location":"accuracy_verification/#spreadsheet-party","text":"We\u2019ve established the monument\u2019s location, we\u2019ve captured the location of the RTK Facet, and they are different, but by how much? Calculating the difference between Lat/Long coordinates is not trivial. We\u2019ve found converting to the ECEF coordinate system is the easiest way to calculate the difference between GPS coordinates. Convert LLA to ECEF Enter your lat, long, and altitude coordinates into an LLA to ECEF converter. We found the Sysense calculator to work very well. How do we know it\u2019s accurate? Take the original coordinates from the NGS Datasheet, and use the calculator to convert them to ECEF. They are identical. ECEF difference between monument and readings Feel free to look at and make a copy of the SparkFun example spreadsheet. ECEF is a wonderfully simplistic frame of reference; the comparison between two points is simply X/Y/Z in meters. We can use the Pythagorean theorem to calculate the 3D variance. In our example, it is 52mm using corrections from a fixed base, and 189mm for an L-Band corrected base. 52mm off a professional mark is a clear indicator we are very close to the limit of our equipment. The sheer amount of geoscience, coordinate math, and relativistic physics that very smart people have contributed to enable any part of this experiment is awe-inspiring. It gave me great satisfaction and reassurance that our base at SparkFun HQ is set up well, and that, in the hands of a professional, the RTK product line is quite capable of providing very accurate readings.","title":"Spreadsheet Party"},{"location":"accuracy_verification/#how-do-i-get-14mm","text":"Use the best equipment. Our mechanical setup was rickety and cheap. Use a surveyor\u2019s bipod setup, with a bubble level, and a prism pole to accurately level the RTK receiver and measure the distance to the monument. Use an antenna that is NGS calibrated to obtain accurate ARPs. The SparkFun TOP106 antenna has been calibrated and we are in the process of calibrating the RTK Facet and RTK Facet L-Band. Use an accurate base. A temporary or \u2018survey-in\u2019 base will not be accurate. The base needs 24 hours of logging with a PPP analysis . Be within 10km of your base. A baseline that is more than 10km will introduce inaccuracies to the RTK fix readings. Correction services are not as accurate as a fixed base. While services such as Skylark and PointPerfect are convenient , they use models to estimate the overall isotropic disturbance. A local, fixed base will outperform a correction service. Take an average of points. All the points taken in this example were single snapshots. Average a few seconds' worth of readings. This was a lot of fun and a good excuse to get outdoors. We hope you enjoy finding some new points in your world.","title":"How do I get 14mm?!"},{"location":"configure_base/","text":"Base Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: In addition to providing accurate local location fixes, the SparkFun RTK devices can also serve as a correction source, also called a Base . The Base doesn't move and 'knows' where it is so it can calculate the discrepancies between the signals it is receiving and what it should be receiving. Said differently, the 'Base' is told where it is, and that it's not moving. If the GPS signals say otherwise, the Base knows there was a disturbance in the Force ionosphere. These differences are the correction values passed to the Rover so that the Rover can have millimeter-level accuracy. There are two types of bases: Surveyed and Fixed . A surveyed base is often a temporary base set up in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. We have a variety of tutorials that go into depth on these subjects but all you need to know is that the RTK Facet supports both Survey-In and Fixed Base techniques. Note: The RTK Express Plus does not support Base mode. The Express Press contains an internal IMU and additional algorithms to support high-precision location fixes using dead reckoning. Note: The RTK Facet L-Band is designed to use corrections provided via u-blox's PointPerfect system therefore, a Base/Rover setup is not needed. However, if the service is not available the RTK Facet L-Band can still be used in a traditional Base/Rover setup. Here we\u2019ll describe how to assemble a Rover and Base. Please see the following tutorials for more information: What is GPS RTK? Getting Started with u-center for u-blox Setting up a Rover Base RTK System SparkFun RTK Facet (GPS-19029) The Base Menu allows the user to select between Survey-In or Fixed Base setups. Controlling the type of Base from WiFi AP Config Base Menu Options Mode In Survey-In mode, the minimum observation time and Mean 3D Standard Deviation can be set. The defaults are 60 seconds and 5 meters as directed by u-blox. The device will wait for the position accuracy to be better than 1 meter before a Survey-In is started. Don't be fooled; setting the observation time to 4 hours or an initial positional accuracy of 0.3m is not going to significantly improve the accuracy of the survey - use PPP instead. In Fixed mode, the coordinates of the antenna need to be sent. These can be entered in ECEF or Geographic coordinates. Whenever a user enters Base mode by pressing the SETUP button the GNSS receiver will immediately go into Base mode with these coordinates and immediately begin outputting RTCM correction data. RTK Facet in Survey-In Mode Once the device has been configured, pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained. RTK Facet in Fixed Transmit Mode Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second. During this phase, the ZED-F9P is outputting the RTCM corrections out of the RADIO port. Attaching an external serial radio to this port will allow the Base to send corrections to any Rover. The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base. NTRIP Server NTRIP is where the real fun begins. The Base needs a method for getting the correction data to the Rover. This can be done using radios but that's limited to a few kilometers at best. If you've got WiFi reception, use the internet! Enabling NTRIP will present a handful of new options seen below: Configuring NTRIP Server settings via WiFi Config AP Settings for the NTRIP Server This is a powerful feature of the RTK line of products. The RTK device can be configured to transmit its RTCM directly over WiFi to the user's mount point. This eliminates the need for a radio link. Once the NTRIP server is enabled you will need a handful of credentials: Local WiFi SSID and password A casting service such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password RTK Facet in Transmit Mode with NTRIP Enabled NTRIP Server Connected! If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second. Every second a few hundred bytes, up to ~2k, will be transmitted to your mount point. Note: During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to view detailed location information using the System Report command. L-Band Assisted Base The RTK Facet L-Band can be set up as a relay: the L-Band device can be located in a good reception area, and then transmit very accurate corrections to a rover via Radio or internet link. To set up an assisted base, set up an RTK Facet L-Band unit with a clear view of the sky, and let it obtain RTK Fix from a fixed position in Rover mode. Once an RTK fix is achieved, change the device to temporary Base mode. The device will take 60 seconds of positional readings, at which point the fixed position will be set using RTK fixed coordinates. The RTK Facet L-Band will then output very accurate RTCM corrections that can be relayed to a rover that is in a less optimal reception setting.","title":"Base Menu"},{"location":"configure_base/#base-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: In addition to providing accurate local location fixes, the SparkFun RTK devices can also serve as a correction source, also called a Base . The Base doesn't move and 'knows' where it is so it can calculate the discrepancies between the signals it is receiving and what it should be receiving. Said differently, the 'Base' is told where it is, and that it's not moving. If the GPS signals say otherwise, the Base knows there was a disturbance in the Force ionosphere. These differences are the correction values passed to the Rover so that the Rover can have millimeter-level accuracy. There are two types of bases: Surveyed and Fixed . A surveyed base is often a temporary base set up in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. We have a variety of tutorials that go into depth on these subjects but all you need to know is that the RTK Facet supports both Survey-In and Fixed Base techniques. Note: The RTK Express Plus does not support Base mode. The Express Press contains an internal IMU and additional algorithms to support high-precision location fixes using dead reckoning. Note: The RTK Facet L-Band is designed to use corrections provided via u-blox's PointPerfect system therefore, a Base/Rover setup is not needed. However, if the service is not available the RTK Facet L-Band can still be used in a traditional Base/Rover setup. Here we\u2019ll describe how to assemble a Rover and Base. Please see the following tutorials for more information: What is GPS RTK? Getting Started with u-center for u-blox Setting up a Rover Base RTK System SparkFun RTK Facet (GPS-19029) The Base Menu allows the user to select between Survey-In or Fixed Base setups. Controlling the type of Base from WiFi AP Config Base Menu Options","title":"Base Menu"},{"location":"configure_base/#mode","text":"In Survey-In mode, the minimum observation time and Mean 3D Standard Deviation can be set. The defaults are 60 seconds and 5 meters as directed by u-blox. The device will wait for the position accuracy to be better than 1 meter before a Survey-In is started. Don't be fooled; setting the observation time to 4 hours or an initial positional accuracy of 0.3m is not going to significantly improve the accuracy of the survey - use PPP instead. In Fixed mode, the coordinates of the antenna need to be sent. These can be entered in ECEF or Geographic coordinates. Whenever a user enters Base mode by pressing the SETUP button the GNSS receiver will immediately go into Base mode with these coordinates and immediately begin outputting RTCM correction data. RTK Facet in Survey-In Mode Once the device has been configured, pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained. RTK Facet in Fixed Transmit Mode Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second. During this phase, the ZED-F9P is outputting the RTCM corrections out of the RADIO port. Attaching an external serial radio to this port will allow the Base to send corrections to any Rover. The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base.","title":"Mode"},{"location":"configure_base/#ntrip-server","text":"NTRIP is where the real fun begins. The Base needs a method for getting the correction data to the Rover. This can be done using radios but that's limited to a few kilometers at best. If you've got WiFi reception, use the internet! Enabling NTRIP will present a handful of new options seen below: Configuring NTRIP Server settings via WiFi Config AP Settings for the NTRIP Server This is a powerful feature of the RTK line of products. The RTK device can be configured to transmit its RTCM directly over WiFi to the user's mount point. This eliminates the need for a radio link. Once the NTRIP server is enabled you will need a handful of credentials: Local WiFi SSID and password A casting service such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password RTK Facet in Transmit Mode with NTRIP Enabled NTRIP Server Connected! If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second. Every second a few hundred bytes, up to ~2k, will be transmitted to your mount point. Note: During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to view detailed location information using the System Report command.","title":"NTRIP Server"},{"location":"configure_base/#l-band-assisted-base","text":"The RTK Facet L-Band can be set up as a relay: the L-Band device can be located in a good reception area, and then transmit very accurate corrections to a rover via Radio or internet link. To set up an assisted base, set up an RTK Facet L-Band unit with a clear view of the sky, and let it obtain RTK Fix from a fixed position in Rover mode. Once an RTK fix is achieved, change the device to temporary Base mode. The device will take 60 seconds of positional readings, at which point the fixed position will be set using RTK fixed coordinates. The RTK Facet L-Band will then output very accurate RTCM corrections that can be relayed to a rover that is in a less optimal reception setting.","title":"L-Band Assisted Base"},{"location":"configure_data_logging/","text":"Data Logging Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: WiFi Interface Because of the nature of these controls, the AP config page is different than the terminal menu. System Config Menu on WiFi AP Config Page Log to SD If a microSD card is detected, all messages will be logged. Max Log Time Once the max log time is achieved, logging will cease. This is useful for limiting long-term, overnight, static surveys to a certain length of time. Default: 1440 minutes (24 hours). Limit: 1 to 2880 minutes. Max Log Length Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached. Enable Factory Defaults Factory Defaults will erase any user settings and reset the internal receiver to stock settings. Any logs on SD are maintained. To prevent accidental reset the checkbox must first be checked before the button is pressed. SD Card Various stats for the SD card are shown. Update Firmware New firmware may be uploaded via WiFi to the unit. See Updating Firmware from the SD Card for more information. Reset Counter A counter is displayed indicating the number of non-power-on-resets since the last power on. Serial Interface RTK Facet Data Logging Configuration Menu From the Main Menu, pressing 5 will enter the Logging Menu. This menu will report the status of the microSD card. While you can enable logging, you cannot begin logging until a microSD card is inserted. Any FAT16 or FAT32 formatted microSD card up to 32GB will work. We regularly use the SparkX brand 1GB cards but note that these log files can get very large (>500MB) so plan accordingly. Option 1 will enable/disable logging. If logging is enabled, all messages from the ZED-F9P will be recorded to microSD. A log file is created at power on with the format SFE_[DeviceName]_YYMMDD_HHMMSS.txt based on current GPS data/time. The [DeviceName] is Surveyor, Express, etc. Option 2 allows a user to set the max logging time. This is convenient to determine the location of a fixed antenna or a receiver on a repeatable landmark. Set the RTK Facet to log RAWX data for 10 hours, convert to RINEX, run through an observation processing station and you\u2019ll get the corrected position with <10mm accuracy. Please see the How to Build a DIY GNSS Reference Station tutorial for more information. Option 3 allows a user to set the max logging length in minutes. Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached. Note: If you are wanting to log RAWX sentences to create RINEX files useful for post-processing the position of the receiver please see the GNSS Configuration Menu. For more information on how to use a RAWX GNSS log to get a higher accuracy base location please see the How to Build a DIY GNSS Reference Station tutorial.","title":"Data Logging Menu"},{"location":"configure_data_logging/#data-logging-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band:","title":"Data Logging Menu"},{"location":"configure_data_logging/#wifi-interface","text":"Because of the nature of these controls, the AP config page is different than the terminal menu. System Config Menu on WiFi AP Config Page","title":"WiFi Interface"},{"location":"configure_data_logging/#log-to-sd","text":"If a microSD card is detected, all messages will be logged.","title":"Log to SD"},{"location":"configure_data_logging/#max-log-time","text":"Once the max log time is achieved, logging will cease. This is useful for limiting long-term, overnight, static surveys to a certain length of time. Default: 1440 minutes (24 hours). Limit: 1 to 2880 minutes.","title":"Max Log Time"},{"location":"configure_data_logging/#max-log-length","text":"Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached.","title":"Max Log Length"},{"location":"configure_data_logging/#enable-factory-defaults","text":"Factory Defaults will erase any user settings and reset the internal receiver to stock settings. Any logs on SD are maintained. To prevent accidental reset the checkbox must first be checked before the button is pressed.","title":"Enable Factory Defaults"},{"location":"configure_data_logging/#sd-card","text":"Various stats for the SD card are shown.","title":"SD Card"},{"location":"configure_data_logging/#update-firmware","text":"New firmware may be uploaded via WiFi to the unit. See Updating Firmware from the SD Card for more information.","title":"Update Firmware"},{"location":"configure_data_logging/#reset-counter","text":"A counter is displayed indicating the number of non-power-on-resets since the last power on.","title":"Reset Counter"},{"location":"configure_data_logging/#serial-interface","text":"RTK Facet Data Logging Configuration Menu From the Main Menu, pressing 5 will enter the Logging Menu. This menu will report the status of the microSD card. While you can enable logging, you cannot begin logging until a microSD card is inserted. Any FAT16 or FAT32 formatted microSD card up to 32GB will work. We regularly use the SparkX brand 1GB cards but note that these log files can get very large (>500MB) so plan accordingly. Option 1 will enable/disable logging. If logging is enabled, all messages from the ZED-F9P will be recorded to microSD. A log file is created at power on with the format SFE_[DeviceName]_YYMMDD_HHMMSS.txt based on current GPS data/time. The [DeviceName] is Surveyor, Express, etc. Option 2 allows a user to set the max logging time. This is convenient to determine the location of a fixed antenna or a receiver on a repeatable landmark. Set the RTK Facet to log RAWX data for 10 hours, convert to RINEX, run through an observation processing station and you\u2019ll get the corrected position with <10mm accuracy. Please see the How to Build a DIY GNSS Reference Station tutorial for more information. Option 3 allows a user to set the max logging length in minutes. Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached. Note: If you are wanting to log RAWX sentences to create RINEX files useful for post-processing the position of the receiver please see the GNSS Configuration Menu. For more information on how to use a RAWX GNSS log to get a higher accuracy base location please see the How to Build a DIY GNSS Reference Station tutorial.","title":"Serial Interface"},{"location":"configure_gnss/","text":"GNSS Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The ZED-F9P is immensely configurable. The RTK device will, by default, put the ZED-F9P into the most common configuration for rover/base RTK for use with SW Maps and other GIS applications. The GNSS Configuration menu allows a user to change the report rate, dynamic model, and select which constellations should be used for fix calculations. The most common settings on the RTK Device WiFi AP Config From the main menu, pressing 1 will bring up the GNSS configuration menu. GNSS menu showing measurement rates and dynamic model Measurement Frequency Measurement Frequency can be set by either Hz or by seconds between measurements. Some users need many measurements per second; RTK devices support up to 20Hz with RTK enabled. Some users are doing very long static surveys that require many seconds between measurements; the ZED-F9P supports up to 8255 seconds (137 minutes) between readings. Note: When in Base mode, the measurement frequency is set to 1Hz. This is because RTK transmission does not benefit from faster updates, nor does logging of RAWX for PPP. Dynamic Model The Dynamic Model can be changed but it is recommended to leave it as Portable . For more information, please refer to the ZED-F9P Integration Manual . Constellations Menu Enable or disable the constellations used for fixes The ZED-F9P is capable of tracking 184 channels across four constellations and two bands (L1/L2) including GPS (USA), Galileo (EU), BeiDou (China), and GLONASS (Russia). SBAS (satellite-based augmentation system) is also supported. By default, all constellations are used. Some users may want to study, log, or monitor a subset. Disabling a constellation will cause the ZED to ignore those signals when calculating a location fix. NTRIP Client NTRIP Client enabled showing settings The SparkFun RTK devices can obtain their correction data over a few different methods. For detailed information see Correction Sources . Bluetooth - This is the most common. An app running on a tablet or phone has an NTRIP client built into it. Once the phone is connected over Bluetooth SPP, the RTCM is sent from the phone to the RTK device. Radio - A base RTK unit and a rover have serial radios plugged into the RADIO port. RTCM data generated by the base station is set over the radio to the rover. WiFi - The rover uses WiFi to be an NTRIP Client and connect to an NTRIP Caster. By enabling NTRIP Client, the RTK device will disable Bluetooth and instead use WiFi to connect to the caster of your choice. This is helpful in situations where a 'headless' system (no phone or tablet) is needed and the rover will be near a WiFi access point. Once the NTRIP Client is enabled you will need a handful of credentials: Local WiFi SSID and password (WPA2) A casting service and port such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password With these credentials set, the RTK device will attempt to connect to WiFi, then connect to your caster of choice, and then begin downloading the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be downloaded from the mount point you've entered. Remember, the rover must be in WiFi range to connect in this mode. Rover with Active NTRIP Client Connection Once the device connects to WiFi, it will attempt to connect to the user's chosen NTRIP Caster. If WiFi or the NTRIP connection fails, the rover will return to normal operation.","title":"GNSS Menu"},{"location":"configure_gnss/#gnss-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The ZED-F9P is immensely configurable. The RTK device will, by default, put the ZED-F9P into the most common configuration for rover/base RTK for use with SW Maps and other GIS applications. The GNSS Configuration menu allows a user to change the report rate, dynamic model, and select which constellations should be used for fix calculations. The most common settings on the RTK Device WiFi AP Config From the main menu, pressing 1 will bring up the GNSS configuration menu. GNSS menu showing measurement rates and dynamic model","title":"GNSS Menu"},{"location":"configure_gnss/#measurement-frequency","text":"Measurement Frequency can be set by either Hz or by seconds between measurements. Some users need many measurements per second; RTK devices support up to 20Hz with RTK enabled. Some users are doing very long static surveys that require many seconds between measurements; the ZED-F9P supports up to 8255 seconds (137 minutes) between readings. Note: When in Base mode, the measurement frequency is set to 1Hz. This is because RTK transmission does not benefit from faster updates, nor does logging of RAWX for PPP.","title":"Measurement Frequency"},{"location":"configure_gnss/#dynamic-model","text":"The Dynamic Model can be changed but it is recommended to leave it as Portable . For more information, please refer to the ZED-F9P Integration Manual .","title":"Dynamic Model"},{"location":"configure_gnss/#constellations-menu","text":"Enable or disable the constellations used for fixes The ZED-F9P is capable of tracking 184 channels across four constellations and two bands (L1/L2) including GPS (USA), Galileo (EU), BeiDou (China), and GLONASS (Russia). SBAS (satellite-based augmentation system) is also supported. By default, all constellations are used. Some users may want to study, log, or monitor a subset. Disabling a constellation will cause the ZED to ignore those signals when calculating a location fix.","title":"Constellations Menu"},{"location":"configure_gnss/#ntrip-client","text":"NTRIP Client enabled showing settings The SparkFun RTK devices can obtain their correction data over a few different methods. For detailed information see Correction Sources . Bluetooth - This is the most common. An app running on a tablet or phone has an NTRIP client built into it. Once the phone is connected over Bluetooth SPP, the RTCM is sent from the phone to the RTK device. Radio - A base RTK unit and a rover have serial radios plugged into the RADIO port. RTCM data generated by the base station is set over the radio to the rover. WiFi - The rover uses WiFi to be an NTRIP Client and connect to an NTRIP Caster. By enabling NTRIP Client, the RTK device will disable Bluetooth and instead use WiFi to connect to the caster of your choice. This is helpful in situations where a 'headless' system (no phone or tablet) is needed and the rover will be near a WiFi access point. Once the NTRIP Client is enabled you will need a handful of credentials: Local WiFi SSID and password (WPA2) A casting service and port such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password With these credentials set, the RTK device will attempt to connect to WiFi, then connect to your caster of choice, and then begin downloading the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be downloaded from the mount point you've entered. Remember, the rover must be in WiFi range to connect in this mode. Rover with Active NTRIP Client Connection Once the device connects to WiFi, it will attempt to connect to the user's chosen NTRIP Caster. If WiFi or the NTRIP connection fails, the rover will return to normal operation.","title":"NTRIP Client"},{"location":"configure_messages/","text":"Messages Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Message rate configuration from WiFi AP Config The messages configuration menu From this menu, a user can control the output of various NMEA, RTCM, RXM, and other messages. Any enabled message will be broadcast over Bluetooth and recorded to SD (if available). Because of the large number of configurations possible, we provide a few common settings: Reset to Surveying Defaults (NMEAx5) Reset to PPP Logging Defaults (NMEAx5 + RXMx2) Turn off all messages (serial command only) Turn on all messages (serial command only) Reset to Surveying Defaults (NMEAx5) This will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC These five NMEA sentences are commonly used with SW Maps for general surveying. Reset to PPP Logging Defaults (NMEAx5 + RXMx2) This will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). You can read more about PPP here . Individual Messages Configuring the NMEA messages There are a large number of messages supported (listed below). Each message sub-menu will present the user with the ability to set the message report rate. Each message rate input controls which messages are disabled (0) and how often the message is reported (1 = one message reported per 1 fix, 5 = one report every 5 fixes). The message rate range is 0 to 20. Note: The message report rate is the number of fixes between message reports. In the image above, with GSV set to 4, the NMEA GSV message will be produced once every 4 fixes. Because the device defaults to a 4Hz fix rate, the GSV message will appear once per second. The following 67 messages are supported for Bluetooth output and logging: \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RMC \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NAV-CLOCK \u2022 NAV-DOP \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SIG \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-TXBUF \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1 Turn off all messages This will turn off all messages. This is handy for advanced users who need to start from a blank slate. This setting is only available over serial configuration. Turn on all messages This will turn on all messages. This is a setting used for firmware testing and should not be needed in normal use. This setting is only available over serial configuration. ESF Messages The ZED-F9R module, found only on the Express Plus, supports additional External Sensor Fusion messages. These messages show the raw accelerometer and gyroscope values of the internal IMU. These messages can consume up to 34,000 bytes of bandwidth. Please see here for more information.","title":"Messages Menu"},{"location":"configure_messages/#messages-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Message rate configuration from WiFi AP Config The messages configuration menu From this menu, a user can control the output of various NMEA, RTCM, RXM, and other messages. Any enabled message will be broadcast over Bluetooth and recorded to SD (if available). Because of the large number of configurations possible, we provide a few common settings: Reset to Surveying Defaults (NMEAx5) Reset to PPP Logging Defaults (NMEAx5 + RXMx2) Turn off all messages (serial command only) Turn on all messages (serial command only)","title":"Messages Menu"},{"location":"configure_messages/#reset-to-surveying-defaults-nmeax5","text":"This will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC These five NMEA sentences are commonly used with SW Maps for general surveying.","title":"Reset to Surveying Defaults (NMEAx5)"},{"location":"configure_messages/#reset-to-ppp-logging-defaults-nmeax5-rxmx2","text":"This will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). You can read more about PPP here .","title":"Reset to PPP Logging Defaults (NMEAx5 + RXMx2)"},{"location":"configure_messages/#individual-messages","text":"Configuring the NMEA messages There are a large number of messages supported (listed below). Each message sub-menu will present the user with the ability to set the message report rate. Each message rate input controls which messages are disabled (0) and how often the message is reported (1 = one message reported per 1 fix, 5 = one report every 5 fixes). The message rate range is 0 to 20. Note: The message report rate is the number of fixes between message reports. In the image above, with GSV set to 4, the NMEA GSV message will be produced once every 4 fixes. Because the device defaults to a 4Hz fix rate, the GSV message will appear once per second. The following 67 messages are supported for Bluetooth output and logging: \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RMC \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NAV-CLOCK \u2022 NAV-DOP \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SIG \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-TXBUF \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1","title":"Individual Messages"},{"location":"configure_messages/#turn-off-all-messages","text":"This will turn off all messages. This is handy for advanced users who need to start from a blank slate. This setting is only available over serial configuration.","title":"Turn off all messages"},{"location":"configure_messages/#turn-on-all-messages","text":"This will turn on all messages. This is a setting used for firmware testing and should not be needed in normal use. This setting is only available over serial configuration.","title":"Turn on all messages"},{"location":"configure_messages/#esf-messages","text":"The ZED-F9R module, found only on the Express Plus, supports additional External Sensor Fusion messages. These messages show the raw accelerometer and gyroscope values of the internal IMU. These messages can consume up to 34,000 bytes of bandwidth. Please see here for more information.","title":"ESF Messages"},{"location":"configure_pointperfect/","text":"PointPerfect Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Note: This section only applies to RTK Facet L-Band products. Regular RTK Facet, Surveyor, Express, and Express Plus products do not have L-Band antennas or receivers built-in. Configuring PointPerfect settings over WiFi Configuring PointPerfect settings over serial RTK Facet L-Band products are equipped with a special antenna and extra receiver to decrypt the L-Band corrections using the PointPerfect service from u-blox. The PointPerfect sub-menu allows a user to enter their 'Home' WiFi settings. This WiFi SSID and password are used to regularly obtain the needed decryption keys from u-blox. This is normally your home WiFi or other accessible WiFi. PointPerfect L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. If the keys fully expire, the device will continue to receive the L-Band signal but will be unable to decrypt the signal, disabling high precision GNSS. The RTK Facet L-Band will continue to have extraordinary accuracy (we've seen better than 0.15m HPA) but not the centimeter-level accuracy that comes with RTK. Note: The RTK Facet L-Band is capable of receiving RTCM corrections over traditional means including NTRIP data over Bluetooth or a serial radio. But the real point of L-Band and PointPerfect is that you can be anywhere , without cellular or radio cover, and still enjoy millimeter accuracy. Display showing 14 days until keys expire The unit will display various messages to aid the user in obtaining keys as needed. Three pronged satellite dish indicating L-Band reception Upon successful reception and decryption of PointPerfect corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution. PointPerfect Menu showing Home WiFi credentials In addition to allowing the entry of WiFi credentials, the PointPerfect Menu will display the Device ID. This is needed when a SparkFun RTK Facet L-Band product needs to be added to the PointPerfect system. This is normally taken care of when you purchase the L-Band unit with PointPerfect service added, but for customers who did not purchase the service and want to add it at a later date, this Device ID is what customer service needs. The Days until keys expire inform the user how many days the unit has until it needs to connect to WiFi to obtain new keys. Option '1' disables the use of PointPerfect corrections. Option '2' or '3' enables the entry of WiFi credentials used for obtaining new keys from the PointPerfect API. Option '4' disables the automatic attempts at WiFi connections when key expiry is less than 28 days. Option '5' will trigger an immediate attempt to connect over WiFi and update the keys. Option 'k' will bring up the Manual Key Entry menu. Manual Key Entry Menu Because of the length and complexity of the keys, we do not recommend you manually enter them. This menu is most helpful for displaying the current keys. Option '1' will allow a user to enter their Device Profile Token. This is the token that is used to provision a device on a PointPerfect account. By default, users may use the SparkFun token but must pay SparkFun for the annual service fee. If an organization would like to administer its own devices, the token can be changed here.","title":"PointPerfect Menu"},{"location":"configure_pointperfect/#pointperfect-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Note: This section only applies to RTK Facet L-Band products. Regular RTK Facet, Surveyor, Express, and Express Plus products do not have L-Band antennas or receivers built-in. Configuring PointPerfect settings over WiFi Configuring PointPerfect settings over serial RTK Facet L-Band products are equipped with a special antenna and extra receiver to decrypt the L-Band corrections using the PointPerfect service from u-blox. The PointPerfect sub-menu allows a user to enter their 'Home' WiFi settings. This WiFi SSID and password are used to regularly obtain the needed decryption keys from u-blox. This is normally your home WiFi or other accessible WiFi. PointPerfect L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. If the keys fully expire, the device will continue to receive the L-Band signal but will be unable to decrypt the signal, disabling high precision GNSS. The RTK Facet L-Band will continue to have extraordinary accuracy (we've seen better than 0.15m HPA) but not the centimeter-level accuracy that comes with RTK. Note: The RTK Facet L-Band is capable of receiving RTCM corrections over traditional means including NTRIP data over Bluetooth or a serial radio. But the real point of L-Band and PointPerfect is that you can be anywhere , without cellular or radio cover, and still enjoy millimeter accuracy. Display showing 14 days until keys expire The unit will display various messages to aid the user in obtaining keys as needed. Three pronged satellite dish indicating L-Band reception Upon successful reception and decryption of PointPerfect corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution. PointPerfect Menu showing Home WiFi credentials In addition to allowing the entry of WiFi credentials, the PointPerfect Menu will display the Device ID. This is needed when a SparkFun RTK Facet L-Band product needs to be added to the PointPerfect system. This is normally taken care of when you purchase the L-Band unit with PointPerfect service added, but for customers who did not purchase the service and want to add it at a later date, this Device ID is what customer service needs. The Days until keys expire inform the user how many days the unit has until it needs to connect to WiFi to obtain new keys. Option '1' disables the use of PointPerfect corrections. Option '2' or '3' enables the entry of WiFi credentials used for obtaining new keys from the PointPerfect API. Option '4' disables the automatic attempts at WiFi connections when key expiry is less than 28 days. Option '5' will trigger an immediate attempt to connect over WiFi and update the keys. Option 'k' will bring up the Manual Key Entry menu. Manual Key Entry Menu Because of the length and complexity of the keys, we do not recommend you manually enter them. This menu is most helpful for displaying the current keys. Option '1' will allow a user to enter their Device Profile Token. This is the token that is used to provision a device on a PointPerfect account. By default, users may use the SparkFun token but must pay SparkFun for the annual service fee. If an organization would like to administer its own devices, the token can be changed here.","title":"PointPerfect Menu"},{"location":"configure_ports/","text":"Ports Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Setting the baud rates of the two available external ports Baud rate configuration of Radio and Data ports Radio Port By default, the Radio port is set to 57600bps to match the Serial Telemetry Radios that are recommended to be used with the RTK Facet (it is a plug-and-play solution). This can be set from 4800bps to 921600bps. Mux Channel The Data port on the RTK Facet, Express, and Express Plus is very flexible. Internally the Data connector is connected to a digital mux allowing one of four software-selectable setups. By default, the Data port will be connected to the UART1 of the ZED-F9P and output any messages via serial. NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. This pin can be configured as an extremely accurate time base. The pulse length and time between pulses are configurable down to 1us. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P Integration Manual for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC-capable GPIO on the ESP32. The RX pin operates as an ADC-capable input on the ESP32. This is useful for custom applications. Configuring the External Pulse and External Events over WiFi Port menu showing mux data port connections Data Port By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. The 460800bps baud rate was chosen to support applications where a large number of messages are enabled and a large amount of data is being sent. If you need to decrease the baud rate to 115200bps or other, be sure to monitor the MON-COMM message within u-center for buffer overruns. A baud rate of 115200bps and the NMEA+RXM default configuration at 4Hz will cause buffer overruns. Monitoring the COM ports on the ZED-F9P If you must run the data port at lower than 460800bps, and you need to enable a large number of messages and/or increase the fix frequency beyond 4Hz, be sure to verify that UART1 usage stays below 99%. The image above shows the UART1 becoming overwhelmed because the ZED cannot transmit at 115200bps fast enough. Most applications do not need to plug anything into the Data port. Most users will get their NMEA position data over Bluetooth. However, this port can be useful for sending position data to an embedded microcontroller or single-board computer. The pinout is 3.3V / TX / RX / GND. 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. Surveyor Data Port By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. Note: The Data port does not output NMEA by default. The unit must be opened and the Serial NMEA Connection switch must be moved to 'Ext Connector'. See Hardware Overview - Advanced Features for the location of the switch.","title":"Ports Menu"},{"location":"configure_ports/#ports-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Setting the baud rates of the two available external ports Baud rate configuration of Radio and Data ports","title":"Ports Menu"},{"location":"configure_ports/#radio-port","text":"By default, the Radio port is set to 57600bps to match the Serial Telemetry Radios that are recommended to be used with the RTK Facet (it is a plug-and-play solution). This can be set from 4800bps to 921600bps.","title":"Radio Port"},{"location":"configure_ports/#mux-channel","text":"The Data port on the RTK Facet, Express, and Express Plus is very flexible. Internally the Data connector is connected to a digital mux allowing one of four software-selectable setups. By default, the Data port will be connected to the UART1 of the ZED-F9P and output any messages via serial. NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. This pin can be configured as an extremely accurate time base. The pulse length and time between pulses are configurable down to 1us. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P Integration Manual for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC-capable GPIO on the ESP32. The RX pin operates as an ADC-capable input on the ESP32. This is useful for custom applications. Configuring the External Pulse and External Events over WiFi Port menu showing mux data port connections","title":"Mux Channel"},{"location":"configure_ports/#data-port","text":"By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. The 460800bps baud rate was chosen to support applications where a large number of messages are enabled and a large amount of data is being sent. If you need to decrease the baud rate to 115200bps or other, be sure to monitor the MON-COMM message within u-center for buffer overruns. A baud rate of 115200bps and the NMEA+RXM default configuration at 4Hz will cause buffer overruns. Monitoring the COM ports on the ZED-F9P If you must run the data port at lower than 460800bps, and you need to enable a large number of messages and/or increase the fix frequency beyond 4Hz, be sure to verify that UART1 usage stays below 99%. The image above shows the UART1 becoming overwhelmed because the ZED cannot transmit at 115200bps fast enough. Most applications do not need to plug anything into the Data port. Most users will get their NMEA position data over Bluetooth. However, this port can be useful for sending position data to an embedded microcontroller or single-board computer. The pinout is 3.3V / TX / RX / GND. 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data Port"},{"location":"configure_ports/#surveyor-data-port","text":"By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. Note: The Data port does not output NMEA by default. The unit must be opened and the Serial NMEA Connection switch must be moved to 'Ext Connector'. See Hardware Overview - Advanced Features for the location of the switch.","title":"Surveyor Data Port"},{"location":"configure_profiles/","text":"Profiles Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: User Profiles Menu Profiles are a very powerful feature. A profile is a complete copy of all the settings on the RTK product. Switching profiles changes all the settings in one step. This is handy for creating a complex setup for surveying, and a different setup for an NTRIP-enabled base station. Rather than changing the variety of parameters, a user can simply switch profiles. Multiple Profiles on Menu If more than one profile is defined, the profiles will be displayed and selectable by using the Power/Setup on the Facet or Setup on the Express and Express Plus. Profiles can be named up to 50 characters; only the first 7 characters will be shown on the menu. Surveyor Profiles Because the Surveyor does not have a display, profiles are not available. The Base/Rover switch allows simple pre-set configurations to be toggled.","title":"Profiles Menu"},{"location":"configure_profiles/#profiles-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: User Profiles Menu Profiles are a very powerful feature. A profile is a complete copy of all the settings on the RTK product. Switching profiles changes all the settings in one step. This is handy for creating a complex setup for surveying, and a different setup for an NTRIP-enabled base station. Rather than changing the variety of parameters, a user can simply switch profiles. Multiple Profiles on Menu If more than one profile is defined, the profiles will be displayed and selectable by using the Power/Setup on the Facet or Setup on the Express and Express Plus. Profiles can be named up to 50 characters; only the first 7 characters will be shown on the menu.","title":"Profiles Menu"},{"location":"configure_profiles/#surveyor-profiles","text":"Because the Surveyor does not have a display, profiles are not available. The Base/Rover switch allows simple pre-set configurations to be toggled.","title":"Surveyor Profiles"},{"location":"configure_ucenter/","text":"Configuring with u-center Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The ZED-F9P module can be configured independently using the u-center software from u-blox by connecting a USB cable to the Config u-blox USB connector. Settings can be saved to the module between power cycles. For more information please see SparkFun\u2019s Getting Started with u-center by u-blox . However, because the ESP32 does considerable configuration of the ZED-F9P at power on it is not recommended to modify the settings of the ZED-F9P using u-center. Nothing will break but your changes will likely be overwritten at the next power cycle.","title":"Configuring with u-center"},{"location":"configure_ucenter/#configuring-with-u-center","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The ZED-F9P module can be configured independently using the u-center software from u-blox by connecting a USB cable to the Config u-blox USB connector. Settings can be saved to the module between power cycles. For more information please see SparkFun\u2019s Getting Started with u-center by u-blox . However, because the ESP32 does considerable configuration of the ZED-F9P at power on it is not recommended to modify the settings of the ZED-F9P using u-center. Nothing will break but your changes will likely be overwritten at the next power cycle.","title":"Configuring with u-center"},{"location":"configure_with_serial/","text":"Configure with Serial Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: To configure an RTK device using serial attach a USB C cable to the device. The device can be on or off. RTK Surveyor / Express / Express+ The SparkFun RTK Surveyor has a variety of connectors Connect the USB cable to the connector labeled Config ESP32 . Once connected a COM port will enumerate. Open the Device Manager in Windows and look under the Ports branch to see what COM port the device is assigned to. RTK Facet Connect the USB cable to the USB connector. There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK device is done over the USB-Serial CH340 COM port via the serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P is done over the USB Serial Device port using u-center . It\u2019s not necessary for normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Terminal Window Open a terminal window at 115200bps; you should see various status messages every second. Press any key to open the configuration menu. Not sure how to use a terminal? Check out our Serial Terminal Basics](https://learn.sparkfun.com/tutorials/terminal-basics) tutorial. Main Menu Pressing any button will display the Main menu. The Main menu will display the current firmware version and the Bluetooth broadcast name. Note: When powered on, the RTK device will broadcast itself as either [Platform] Rover-XXXX or [Platform] Base-XXXX depending on which state it is in. The Platform is 'Facet', 'Express', 'Surveyor', etc. The menus will timeout after 15 seconds of inactivity, so if you do not press a key the device will exit the menu and return to reporting status messages after 15 seconds.","title":"Configure with Serial"},{"location":"configure_with_serial/#configure-with-serial","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: To configure an RTK device using serial attach a USB C cable to the device. The device can be on or off.","title":"Configure with Serial"},{"location":"configure_with_serial/#rtk-surveyor-express-express","text":"The SparkFun RTK Surveyor has a variety of connectors Connect the USB cable to the connector labeled Config ESP32 . Once connected a COM port will enumerate. Open the Device Manager in Windows and look under the Ports branch to see what COM port the device is assigned to.","title":"RTK Surveyor / Express / Express+"},{"location":"configure_with_serial/#rtk-facet","text":"Connect the USB cable to the USB connector. There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK device is done over the USB-Serial CH340 COM port via the serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P is done over the USB Serial Device port using u-center . It\u2019s not necessary for normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"RTK Facet"},{"location":"configure_with_serial/#terminal-window","text":"Open a terminal window at 115200bps; you should see various status messages every second. Press any key to open the configuration menu. Not sure how to use a terminal? Check out our Serial Terminal Basics](https://learn.sparkfun.com/tutorials/terminal-basics) tutorial. Main Menu Pressing any button will display the Main menu. The Main menu will display the current firmware version and the Bluetooth broadcast name. Note: When powered on, the RTK device will broadcast itself as either [Platform] Rover-XXXX or [Platform] Base-XXXX depending on which state it is in. The Platform is 'Facet', 'Express', 'Surveyor', etc. The menus will timeout after 15 seconds of inactivity, so if you do not press a key the device will exit the menu and return to reporting status messages after 15 seconds.","title":"Terminal Window"},{"location":"configure_with_settings_file/","text":"Configure with Settings File Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: SparkFun RTK Settings File All system configuration can also be done by editing the SFE_[Platform]_Settings_0.txt file (example shown above) where [Platform] is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). This file is created when a microSD card is installed. The settings are clear text but there are no safety guards against setting illegal states. It is not recommended to use this method unless You Know What You're Doing\u00ae.","title":"Configure with Settings File"},{"location":"configure_with_settings_file/#configure-with-settings-file","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: SparkFun RTK Settings File All system configuration can also be done by editing the SFE_[Platform]_Settings_0.txt file (example shown above) where [Platform] is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). This file is created when a microSD card is installed. The settings are clear text but there are no safety guards against setting illegal states. It is not recommended to use this method unless You Know What You're Doing\u00ae.","title":"Configure with Settings File"},{"location":"configure_with_wifi/","text":"Configure with WiFi Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Starting with firmware v1.7, WiFi-based configuration is supported. For more information about updating the firmware on your device, please see Updating RTK Firmware . The RTK device will present a webpage that is viewable from either a desktop/laptop with WiFi or a cell phone. For advanced configurations, a desktop is recommended. For quick in-field changes, a cell phone works great. Desktop vs Phone display size configuration RTK Express / Express Plus / Facet To get into WiFi configuration follow these steps: Power on the RTK Express, Express Plus, or Facet. Once the device has started press the Setup button repeatedly until the Config menu is highlighted. The display will blink a WiFi icon indicating it is waiting for incoming connections. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. Device ready for cellphone configuration RTK Surveyor To get into WiFi configuration follow these steps: Power the RTK Surveyor on in Rover mode. Once the device has started the Bluetooth status LED should be blinking at 1Hz. Now toggle the SETUP switch from Base and back to Rover within 1 second. If successful, the Bluetooth status LED will begin fading in/out. The device is now broadcasting as a WiFi access point. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. Connecting to WiFi Network The WiFi network RTK Config as seen from a cellphone Note: Upon connecting, your phone may warn you that this WiFi network has no internet. That's ok. Stay connected to the network and open a browser. If you still have problems turn off Mobile Data so that the phone does not default to cellular for internet connectivity and instead connects to the RTK Device. Connected to the RTK WiFi Setup Page Clicking on the category 'carrot' will open or close that section. Clicking on an \u2018i\u2019 will give you a brief description of the options within that section. This unit has firmware version 1.8 and a ZED-F9P receiver Please note that the firmware for the RTK device and the firmware for the ZED receiver is shown at the top of the page. This can be helpful when troubleshooting or requesting new features. Saving and Exit Once settings are input, please press \u2018Save Configuration\u2019. This will validate any settings, show any errors that need adjustment, and send the settings to the unit. The page will remain active until the user presses \u2018Exit to Rover Mode\u2019 at which point the unit will exit WiFi configuration and return to standard Rover mode.","title":"Configure with WiFi"},{"location":"configure_with_wifi/#configure-with-wifi","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Starting with firmware v1.7, WiFi-based configuration is supported. For more information about updating the firmware on your device, please see Updating RTK Firmware . The RTK device will present a webpage that is viewable from either a desktop/laptop with WiFi or a cell phone. For advanced configurations, a desktop is recommended. For quick in-field changes, a cell phone works great. Desktop vs Phone display size configuration","title":"Configure with WiFi"},{"location":"configure_with_wifi/#rtk-express-express-plus-facet","text":"To get into WiFi configuration follow these steps: Power on the RTK Express, Express Plus, or Facet. Once the device has started press the Setup button repeatedly until the Config menu is highlighted. The display will blink a WiFi icon indicating it is waiting for incoming connections. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. Device ready for cellphone configuration","title":"RTK Express / Express Plus / Facet"},{"location":"configure_with_wifi/#rtk-surveyor","text":"To get into WiFi configuration follow these steps: Power the RTK Surveyor on in Rover mode. Once the device has started the Bluetooth status LED should be blinking at 1Hz. Now toggle the SETUP switch from Base and back to Rover within 1 second. If successful, the Bluetooth status LED will begin fading in/out. The device is now broadcasting as a WiFi access point. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar.","title":"RTK Surveyor"},{"location":"configure_with_wifi/#connecting-to-wifi-network","text":"The WiFi network RTK Config as seen from a cellphone Note: Upon connecting, your phone may warn you that this WiFi network has no internet. That's ok. Stay connected to the network and open a browser. If you still have problems turn off Mobile Data so that the phone does not default to cellular for internet connectivity and instead connects to the RTK Device. Connected to the RTK WiFi Setup Page Clicking on the category 'carrot' will open or close that section. Clicking on an \u2018i\u2019 will give you a brief description of the options within that section. This unit has firmware version 1.8 and a ZED-F9P receiver Please note that the firmware for the RTK device and the firmware for the ZED receiver is shown at the top of the page. This can be helpful when troubleshooting or requesting new features.","title":"Connecting to WiFi Network"},{"location":"configure_with_wifi/#saving-and-exit","text":"Once settings are input, please press \u2018Save Configuration\u2019. This will validate any settings, show any errors that need adjustment, and send the settings to the unit. The page will remain active until the user presses \u2018Exit to Rover Mode\u2019 at which point the unit will exit WiFi configuration and return to standard Rover mode.","title":"Saving and Exit"},{"location":"connecting_bluetooth/","text":"Connecting Bluetooth Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: SparkFun RTK products transmit full NMEA sentences over Bluetooth serial port profile (SPP) at 4Hz and 115200bps. This means that nearly any GIS application that can receive NMEA data over a serial port (almost all do) can be used with the RTK Express. As long as your device can open a serial port over Bluetooth (also known as SPP) your device can retrieve industry-standard NMEA positional data. The following steps show how to connect an external tablet, or cell phone to the RTK device so that any serial port-based GIS application can be used. Android Pairing with the 'Express Rover-5556' over Bluetooth Open Android's system settings and find the 'Bluetooth' or 'Connected devices' options. Scan for devices and pair with the device in the list that matches the Bluetooth MAC address on your RTK device. When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps. Bluetooth MAC address B022 is shown in the upper left corner Note: B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range. Windows Open settings and navigate to Bluetooth. Click Add device . Adding Bluetooth Device Click Bluetooth 'Mice, Keyboards, ...' Viewing available Bluetooth Devices Click on the RTK device. When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps. Bluetooth MAC address B022 is shown in the upper left corner Note: B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range. Bluetooth Connection Success The device will begin pairing. After a few seconds, Windows should report that you are ready to go. Bluetooth COM ports The device is now paired and a series of COM ports will be added under 'Device Manager'. NMEA received over the Bluetooth COM port If necessary, you can open a terminal connection to one of the COM ports. Because the Bluetooth driver creates multiple COM ports, it's impossible to tell which is the serial stream so it's easiest to just try each port until you see a stream of NMEA sentences (shown above). You're all set! Be sure to close out the terminal window so that other software can use that COM port.","title":"Connecting Bluetooth"},{"location":"connecting_bluetooth/#connecting-bluetooth","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: SparkFun RTK products transmit full NMEA sentences over Bluetooth serial port profile (SPP) at 4Hz and 115200bps. This means that nearly any GIS application that can receive NMEA data over a serial port (almost all do) can be used with the RTK Express. As long as your device can open a serial port over Bluetooth (also known as SPP) your device can retrieve industry-standard NMEA positional data. The following steps show how to connect an external tablet, or cell phone to the RTK device so that any serial port-based GIS application can be used.","title":"Connecting Bluetooth"},{"location":"connecting_bluetooth/#android","text":"Pairing with the 'Express Rover-5556' over Bluetooth Open Android's system settings and find the 'Bluetooth' or 'Connected devices' options. Scan for devices and pair with the device in the list that matches the Bluetooth MAC address on your RTK device. When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps. Bluetooth MAC address B022 is shown in the upper left corner Note: B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range.","title":"Android"},{"location":"connecting_bluetooth/#windows","text":"Open settings and navigate to Bluetooth. Click Add device . Adding Bluetooth Device Click Bluetooth 'Mice, Keyboards, ...' Viewing available Bluetooth Devices Click on the RTK device. When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps. Bluetooth MAC address B022 is shown in the upper left corner Note: B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range. Bluetooth Connection Success The device will begin pairing. After a few seconds, Windows should report that you are ready to go. Bluetooth COM ports The device is now paired and a series of COM ports will be added under 'Device Manager'. NMEA received over the Bluetooth COM port If necessary, you can open a terminal connection to one of the COM ports. Because the Bluetooth driver creates multiple COM ports, it's impossible to tell which is the serial stream so it's easiest to just try each port until you see a stream of NMEA sentences (shown above). You're all set! Be sure to close out the terminal window so that other software can use that COM port.","title":"Windows"},{"location":"contribute/","text":"Fix That Typo! All of this documentation can be modified by you! Please help us make it better. Does something not make sense? If a section is confusing please open an issue and let us know. These pages are contained in the docs folder of the SparkFun RTK Firmware repository. Fork this repo, make changes to the markdown, then create a pull request with your changes, and enjoy making the words worlds world a better place.","title":"Fix That Typo!"},{"location":"contribute/#fix-that-typo","text":"All of this documentation can be modified by you! Please help us make it better. Does something not make sense? If a section is confusing please open an issue and let us know. These pages are contained in the docs folder of the SparkFun RTK Firmware repository. Fork this repo, make changes to the markdown, then create a pull request with your changes, and enjoy making the words worlds world a better place.","title":"Fix That Typo!"},{"location":"correction_sources/","text":"Correction Sources Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: To achieve an RTK Fix, SparkFun RTK products must be provided with a correction source. This correction data, sometimes called RTCM (see What is RTCM? ), can be produced from a variety of sources. Note: The RTK Facet L-Band is capable of receiving RTCM corrections from a terrestrial source but because it has a built-in L-Band receiver, we recommend using the satellite-based corrections. Permanent Base An L1/L2 GNSS antenna permanently affixed to a cinder block A permanent base is a user-owned and operated base station. See Creating a Permanent Base for more information. A permanent base has the benefit of being the most accurate, with relatively low cost, but requires at least 24 hours of initial logging and some mechanical setup time (attaching the antenna, connecting a device to the internet, etc). Temporary Base Temporary RTK Express Base setup with serial radio A temporary or mobile base setup is handy when you are in the field too far away from a correction source, or if your measurements do not require absolute accuracy. To set up a temporary base, a 2nd RTK device is mounted to a tripod and it is configured to complete a survey-in (aka, locate itself). It will then begin broadcasting RTCM correction data. This data (~1000 bytes a second) is sent over a data link to one or multiple rovers that can then obtain RTK Fix. Any tripod with a \u00bc\u201d camera thread will work. The Amazon Basics tripod works well enough but is a bit lightweight and rickety. For RTK products with an external antenna (ie, RTK Surveyor, RTK Express, RTK Express Plus) a cell phone holder is clamped to the tripod and the RTK device is held in the clamp. The \u00bc\u201d camera thread is adapted to \u215d\u201d 11-TPI and an L1/L2 antenna is attached. A Male TNC to Male SMA adapter connects the antenna to the RTK device. Any of the RTK Products (excluding the RTK Express Plus) can be set up to operate in Base mode. Once the base has been set up with a clear view of the sky, turn on the RTK device. On the RTK Surveyor, toggle the Setup switch to BASE . The device will then enter either 'Fixed' or 'Survey-In' type Base mode depending on the system configuration. If the type has been set to Survey-In, the red BASE LED will blink while a survey-in is active. Once complete, the LED will turn solid red and begin transmitting RTCM out the RADIO port. RTK device in Survey-In Mode On the RTK Facet, RTK Facet L-Band, and RTK Express press the SETUP button until Base is illuminated then stop pressing the Setup button. The device will then enter either 'Fixed' or 'Survey-In' type Base mode depending on the system configuration. If the type has been set to Survey-In, the display will show the Survey-In screen. Note: Base mode is not possible on the RTK Express Plus. Once the survey is complete the device will begin producing RTCM correction data. If you are using a serial radio, you can verify this by viewing the LEDs on the radio (a small red LED will blink when serial data is received from the RTK Express). RTK devices are designed to follow the u-blox recommended survey-in of 60 seconds and a mean 3D standard deviation of 5m of all fixes. If a survey fails to achieve these requirements it will auto-restart after 10 minutes. More expensive surveyor bases have a \u215d\u201d 11-TPI thread but the top of the surveyor base will often interfere with the antenna\u2019s TNC connector. If you chose to use a surveyor\u2019s \u2018stick\u2019 (often called a Prism Pole) be sure to obtain an extension to raise the antenna at least an inch. If you\u2019re shopping for a cell phone clamp be sure to get one that is compatible with the diameter of your tripod and has a knob to increase clamp pressure. Our tripod is 18mm in diameter and we\u2019ve had a good experience with this clamp . Your mileage may vary. Note: A mobile base station works well for quick trips to the field. However, the survey-in method is not recommended for the highest accuracy measurements because the positional accuracy of the base will directly translate to the accuracy of the rover. Said differently, if your base's calculated position is off by 100cm, so will every reading your rover makes. For many applications, such as surveying, this is acceptable since the Surveyor may only be concerned with measuring the lengths of property lines or features. If you\u2019re looking for maximum accuracy consider installing a permanent static base with a fixed antenna . We were able to pinpoint the antenna on the top of SparkFun with an incredible accuracy +/-2mm of accuracy using PPP! Skylark Skylark Coverage Area A company called SwiftNav offers a service called Skylark . As of writing, for $49 per month, you will get corrections covering North America, Europe, and the Asia Pacific. This is a very simple method for obtaining NTRIP corrections. Upon creating an account, you'll be issued NTRIP credentials that can immediately be used with Lefebure, SW Maps, or any GIS app that supports NTRIP. Entering credentials into SW maps The most difficult part of using Skylark for corrections is entering the auto-generated NTRIP Password. While we understand security is important, it's not trivial manually entering these types of credentials into a GIS application. SW Maps showing Positional Accuracy One downside is that with a 'regional' provider such as Skylark the distance to the correction station may be larger than 10km. While we've always gotten an RTK fix, we often see horizontal positional accuracy of ~30mm instead of the 14mm when using our fixed GNSS reference station. Your mileage may vary. UNAVCO UNAVCO is a US-based governmental organization that runs a network of publicly available NTRIP sources . If you're lucky there's a station within 10km (6 miles) of you. PointPerfect PointPerfect is a correction service run by u-blox. The service runs about $44 per month and covers the contiguous USA and Europe. Unfortunately, it does not have NTRIP access at the time of writing. Instead, they use an API and encrypted packets in a format called SPARTN. SparkFun uses the PointPerfect service to provide satellite-based corrections to the RTK Facet L-Band . This service works very well for the RTK Facet L-Band, but because no 3rd party GIS software is known to exist that can communicate with PointPerfect, we don't currently recommend using PointPerfect with SW Maps, Lefebure, Field Genius, SurvPC, Survey Master, etc. Other Sources There are a large number of networks run throughout the world. Be sure to dig a bit to find a local correction source near you. Many US states operate their own CORS (continuously operating reference station) networks for the benefit of the state's Department of Transportation and/or Agriculture. For example, WISCORS covers the state of Wisconsin, free of charge. EUREF Permanent GNSS Network RTK2go offers a list and map (click 'View all' from the list) of stations using their public casting service. While none of these stations have been verified as accurate, it can be a decent starting point to do a 'quick' test of your system.","title":"Correction Sources"},{"location":"correction_sources/#correction-sources","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: To achieve an RTK Fix, SparkFun RTK products must be provided with a correction source. This correction data, sometimes called RTCM (see What is RTCM? ), can be produced from a variety of sources. Note: The RTK Facet L-Band is capable of receiving RTCM corrections from a terrestrial source but because it has a built-in L-Band receiver, we recommend using the satellite-based corrections.","title":"Correction Sources"},{"location":"correction_sources/#permanent-base","text":"An L1/L2 GNSS antenna permanently affixed to a cinder block A permanent base is a user-owned and operated base station. See Creating a Permanent Base for more information. A permanent base has the benefit of being the most accurate, with relatively low cost, but requires at least 24 hours of initial logging and some mechanical setup time (attaching the antenna, connecting a device to the internet, etc).","title":"Permanent Base"},{"location":"correction_sources/#temporary-base","text":"Temporary RTK Express Base setup with serial radio A temporary or mobile base setup is handy when you are in the field too far away from a correction source, or if your measurements do not require absolute accuracy. To set up a temporary base, a 2nd RTK device is mounted to a tripod and it is configured to complete a survey-in (aka, locate itself). It will then begin broadcasting RTCM correction data. This data (~1000 bytes a second) is sent over a data link to one or multiple rovers that can then obtain RTK Fix. Any tripod with a \u00bc\u201d camera thread will work. The Amazon Basics tripod works well enough but is a bit lightweight and rickety. For RTK products with an external antenna (ie, RTK Surveyor, RTK Express, RTK Express Plus) a cell phone holder is clamped to the tripod and the RTK device is held in the clamp. The \u00bc\u201d camera thread is adapted to \u215d\u201d 11-TPI and an L1/L2 antenna is attached. A Male TNC to Male SMA adapter connects the antenna to the RTK device. Any of the RTK Products (excluding the RTK Express Plus) can be set up to operate in Base mode. Once the base has been set up with a clear view of the sky, turn on the RTK device. On the RTK Surveyor, toggle the Setup switch to BASE . The device will then enter either 'Fixed' or 'Survey-In' type Base mode depending on the system configuration. If the type has been set to Survey-In, the red BASE LED will blink while a survey-in is active. Once complete, the LED will turn solid red and begin transmitting RTCM out the RADIO port. RTK device in Survey-In Mode On the RTK Facet, RTK Facet L-Band, and RTK Express press the SETUP button until Base is illuminated then stop pressing the Setup button. The device will then enter either 'Fixed' or 'Survey-In' type Base mode depending on the system configuration. If the type has been set to Survey-In, the display will show the Survey-In screen. Note: Base mode is not possible on the RTK Express Plus. Once the survey is complete the device will begin producing RTCM correction data. If you are using a serial radio, you can verify this by viewing the LEDs on the radio (a small red LED will blink when serial data is received from the RTK Express). RTK devices are designed to follow the u-blox recommended survey-in of 60 seconds and a mean 3D standard deviation of 5m of all fixes. If a survey fails to achieve these requirements it will auto-restart after 10 minutes. More expensive surveyor bases have a \u215d\u201d 11-TPI thread but the top of the surveyor base will often interfere with the antenna\u2019s TNC connector. If you chose to use a surveyor\u2019s \u2018stick\u2019 (often called a Prism Pole) be sure to obtain an extension to raise the antenna at least an inch. If you\u2019re shopping for a cell phone clamp be sure to get one that is compatible with the diameter of your tripod and has a knob to increase clamp pressure. Our tripod is 18mm in diameter and we\u2019ve had a good experience with this clamp . Your mileage may vary. Note: A mobile base station works well for quick trips to the field. However, the survey-in method is not recommended for the highest accuracy measurements because the positional accuracy of the base will directly translate to the accuracy of the rover. Said differently, if your base's calculated position is off by 100cm, so will every reading your rover makes. For many applications, such as surveying, this is acceptable since the Surveyor may only be concerned with measuring the lengths of property lines or features. If you\u2019re looking for maximum accuracy consider installing a permanent static base with a fixed antenna . We were able to pinpoint the antenna on the top of SparkFun with an incredible accuracy +/-2mm of accuracy using PPP!","title":"Temporary Base"},{"location":"correction_sources/#skylark","text":"Skylark Coverage Area A company called SwiftNav offers a service called Skylark . As of writing, for $49 per month, you will get corrections covering North America, Europe, and the Asia Pacific. This is a very simple method for obtaining NTRIP corrections. Upon creating an account, you'll be issued NTRIP credentials that can immediately be used with Lefebure, SW Maps, or any GIS app that supports NTRIP. Entering credentials into SW maps The most difficult part of using Skylark for corrections is entering the auto-generated NTRIP Password. While we understand security is important, it's not trivial manually entering these types of credentials into a GIS application. SW Maps showing Positional Accuracy One downside is that with a 'regional' provider such as Skylark the distance to the correction station may be larger than 10km. While we've always gotten an RTK fix, we often see horizontal positional accuracy of ~30mm instead of the 14mm when using our fixed GNSS reference station. Your mileage may vary.","title":"Skylark"},{"location":"correction_sources/#unavco","text":"UNAVCO is a US-based governmental organization that runs a network of publicly available NTRIP sources . If you're lucky there's a station within 10km (6 miles) of you.","title":"UNAVCO"},{"location":"correction_sources/#pointperfect","text":"PointPerfect is a correction service run by u-blox. The service runs about $44 per month and covers the contiguous USA and Europe. Unfortunately, it does not have NTRIP access at the time of writing. Instead, they use an API and encrypted packets in a format called SPARTN. SparkFun uses the PointPerfect service to provide satellite-based corrections to the RTK Facet L-Band . This service works very well for the RTK Facet L-Band, but because no 3rd party GIS software is known to exist that can communicate with PointPerfect, we don't currently recommend using PointPerfect with SW Maps, Lefebure, Field Genius, SurvPC, Survey Master, etc.","title":"PointPerfect"},{"location":"correction_sources/#other-sources","text":"There are a large number of networks run throughout the world. Be sure to dig a bit to find a local correction source near you. Many US states operate their own CORS (continuously operating reference station) networks for the benefit of the state's Department of Transportation and/or Agriculture. For example, WISCORS covers the state of Wisconsin, free of charge. EUREF Permanent GNSS Network RTK2go offers a list and map (click 'View all' from the list) of stations using their public casting service. While none of these stations have been verified as accurate, it can be a decent starting point to do a 'quick' test of your system.","title":"Other Sources"},{"location":"correction_transport/","text":"Correction Transport Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Once a correction source is chosen, the correction data must be transported from the base to the rover. The RTCM serial data is approximately 530 bytes per second and is transmitted at 57600bps out of the RADIO port on a SparkFun RTK device. There are a variety of ways to move data from a base to a rover. We will cover the most common below. Note: RTK calculations require RTCM data to be delivered approximately once per second. If RTCM data is lost or not received by a rover, RTK Fix can still be maintained for many seconds before the device will enter RTK Float mode. This is beneficial where devices like Serial Radios may drop packets due to RF congestion. Note: The RTK Facet L-Band is capable of receiving RTCM corrections from a terrestrial source but because it has a built-in L-Band receiver, we recommend using the satellite-based corrections. WiFi Any SparkFun RTK device can be set up as an NTRIP Server . This means the device will connect to local WiFi and broadcast its correction data to the internet. The data is delivered to something called an NTRIP Caster. Any number of rovers can then access this data using something called an NTRIP Client. Nearly every GIS application has an NTRIP Client built into it so this makes it very handy. WiFi broadcasting is the most common transport method of getting RTCM correction data to the internet and to rovers via NTRIP Clients. Similarly, any SparkFun RTK device can be set up as an NTRIP Client . The RTK device will connect to the local WiFi and begin downloading the RTCM data from the given NTRIP Caster and RTK Fix will be achieved. This is useful only if the Rover remains in RF range of the WiFi access point. Because of the limited range, we recommend using a cellphone rather than WiFi for NTRIP Clients. Cellular Using a cellphone is the most common way of transporting correction data from the internet to a rover. This method uses the cell phone's built-in internet connection to obtain data from an NTRIP Caster and then pass those corrections over Bluetooth to the RTK device. Shown above are SW Map's NTRIP Client Settings. Nearly all GIS applications have an NTRIP Client built in so we recommend leveraging the device you already own to save money. Additionally, a cell phone gives your rover incredible range: a rover can obtain RTCM corrections anywhere there is cellular coverage. Cellular can even be used in Base mode. We have seen some very inventive users use an old cell phone as a WiFi access point. The base unit is configured as an NTRIP Server with the cellphone's WiFi AP credentials. The base performs a survey-in, connects to the WiFi, and the RTCM data is pushed over WiFi, over cellular, to an NTRIP Caster. L-Band What if you are in the field, far away from WiFi, cellular, radio, or any other data connection? Look to the sky! A variety of companies provide GNSS RTK corrections broadcast from satellites over a spectrum called L-Band. L-Band is any frequency from 1 to 2 GHz. These frequencies have the ability to penetrate clouds, fog, and other natural weather phenomena making them particularly useful for location applications. These corrections are not as accurate as a fixed base station, and the corrections can require a monthly subscription fee, but you cannot beat the ease of use! L-Band reception requires specialized RF receivers capable of demodulating the satellite transmissions. Currently, the RTK Facet L-Band is the only product that supports L-Band correction reception. Serial Radios Serial radios, sometimes called telemetry radios, provide what is essentially a serial cable between the base and rover devices. Transmission distance, frequency, maximum data rate, configurability, and price vary widely, but all behave functionally the same. SparkFun recommends the HolyBro 100mW and the SparkFun LoRaSerial 1W radios for RTK use. All SparkFun RTK products include a 4-pin to 6-pin cable that will allow you to connect the HolyBro branded radio or the SparkFun LoRaSerial radios to a base and rover RTK device. These radios attach nicely to the back or bottom of an RTK device. The benefit of a serial telemetry radio link is that you do not need to configure anything; simply plug two radios onto two RTK devices and turn them on. The downside to serial telemetry radios is that they generally have a much shorter range (often slightly more than a 1-kilometer functional range) than a cellular link can provide.","title":"Correction Transport"},{"location":"correction_transport/#correction-transport","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Once a correction source is chosen, the correction data must be transported from the base to the rover. The RTCM serial data is approximately 530 bytes per second and is transmitted at 57600bps out of the RADIO port on a SparkFun RTK device. There are a variety of ways to move data from a base to a rover. We will cover the most common below. Note: RTK calculations require RTCM data to be delivered approximately once per second. If RTCM data is lost or not received by a rover, RTK Fix can still be maintained for many seconds before the device will enter RTK Float mode. This is beneficial where devices like Serial Radios may drop packets due to RF congestion. Note: The RTK Facet L-Band is capable of receiving RTCM corrections from a terrestrial source but because it has a built-in L-Band receiver, we recommend using the satellite-based corrections.","title":"Correction Transport"},{"location":"correction_transport/#wifi","text":"Any SparkFun RTK device can be set up as an NTRIP Server . This means the device will connect to local WiFi and broadcast its correction data to the internet. The data is delivered to something called an NTRIP Caster. Any number of rovers can then access this data using something called an NTRIP Client. Nearly every GIS application has an NTRIP Client built into it so this makes it very handy. WiFi broadcasting is the most common transport method of getting RTCM correction data to the internet and to rovers via NTRIP Clients. Similarly, any SparkFun RTK device can be set up as an NTRIP Client . The RTK device will connect to the local WiFi and begin downloading the RTCM data from the given NTRIP Caster and RTK Fix will be achieved. This is useful only if the Rover remains in RF range of the WiFi access point. Because of the limited range, we recommend using a cellphone rather than WiFi for NTRIP Clients.","title":"WiFi"},{"location":"correction_transport/#cellular","text":"Using a cellphone is the most common way of transporting correction data from the internet to a rover. This method uses the cell phone's built-in internet connection to obtain data from an NTRIP Caster and then pass those corrections over Bluetooth to the RTK device. Shown above are SW Map's NTRIP Client Settings. Nearly all GIS applications have an NTRIP Client built in so we recommend leveraging the device you already own to save money. Additionally, a cell phone gives your rover incredible range: a rover can obtain RTCM corrections anywhere there is cellular coverage. Cellular can even be used in Base mode. We have seen some very inventive users use an old cell phone as a WiFi access point. The base unit is configured as an NTRIP Server with the cellphone's WiFi AP credentials. The base performs a survey-in, connects to the WiFi, and the RTCM data is pushed over WiFi, over cellular, to an NTRIP Caster.","title":"Cellular"},{"location":"correction_transport/#l-band","text":"What if you are in the field, far away from WiFi, cellular, radio, or any other data connection? Look to the sky! A variety of companies provide GNSS RTK corrections broadcast from satellites over a spectrum called L-Band. L-Band is any frequency from 1 to 2 GHz. These frequencies have the ability to penetrate clouds, fog, and other natural weather phenomena making them particularly useful for location applications. These corrections are not as accurate as a fixed base station, and the corrections can require a monthly subscription fee, but you cannot beat the ease of use! L-Band reception requires specialized RF receivers capable of demodulating the satellite transmissions. Currently, the RTK Facet L-Band is the only product that supports L-Band correction reception.","title":"L-Band"},{"location":"correction_transport/#serial-radios","text":"Serial radios, sometimes called telemetry radios, provide what is essentially a serial cable between the base and rover devices. Transmission distance, frequency, maximum data rate, configurability, and price vary widely, but all behave functionally the same. SparkFun recommends the HolyBro 100mW and the SparkFun LoRaSerial 1W radios for RTK use. All SparkFun RTK products include a 4-pin to 6-pin cable that will allow you to connect the HolyBro branded radio or the SparkFun LoRaSerial radios to a base and rover RTK device. These radios attach nicely to the back or bottom of an RTK device. The benefit of a serial telemetry radio link is that you do not need to configure anything; simply plug two radios onto two RTK devices and turn them on. The downside to serial telemetry radios is that they generally have a much shorter range (often slightly more than a 1-kilometer functional range) than a cellular link can provide.","title":"Serial Radios"},{"location":"displays/","text":"Displays Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The RTK Facet, Facet L-Band, Express, and Express Plus utilize a 0.96\" high-contrast OLED display. While small, it packs various situational data that can be helpful in the field. We will walk you through each display. Power On/Off RTK Facet Startup and Shutdown Screens Press and hold the power button until the display illuminates to turn on the device. Similarly, press and hold the power button to turn off the device. The device's firmware version is shown during the Power On display. Rover Fix Rover with location fix Upon power up the device will enter either Rover mode or Base mode. Above, the Rover mode is displayed. MAC: The MAC address of the internal Bluetooth module. This is helpful knowledge when attempting to connect to the device from your phone. This will change to a Bluetooth symbol once connected. HPA: Horizontal positional accuracy is an estimate of how accurate the current positional readings are. This number will decrease rapidly after the first power-up and settle around 0.3m depending on your antenna and view of the sky. When RTK fix is achieved this icon will change to a double circle and the HPA number will decrease even further to as low as 0.014m. SIV: Satellites in view is the number of satellites used for the fix calculation. This symbol will blink before a location fix is generated and become solid when the device has a good location fix. SIV is a good indicator of how good of a view the antenna has. This number will vary but anything above 10 is adequate. We've seen as high as 31. Model: This icon will change depending on the selected dynamic model: Portable (default) Pedestrian, Sea, Bike, Stationary, etc. Log: This icon will remain animated while the log file is increasing. This is a good visual indication that you have an SD card inserted and RTK Facet can successfully record to it. Rover RTK Fix Rover with RTK Fix and Bluetooth connected Once NTRIP is enabled on your phone or RTCM data is being streamed into the Radio port the device will gain an RTK Fix. You should see the HPA drop to 14mm with a double circle bulls-eye as shown above. Base Survey-In RTK device in Survey-In Mode Pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained. Base Transmitting RTK Facet in Fixed Transmit Mode Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second. The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base. Base Transmitting NTRIP If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. RTK Facet in Transmit Mode with NTRIP Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second. Note: During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to the USB port to view detailed location and ZED-F9P configuration information. L-Band L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. Display showing 14 days until L-Band Keys Expire The unit will display various messages to aid the user in obtaining keys as needed. Three-pronged satellite dish indicating L-Band reception Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution. Adding a Display to the RTK Surveyor While the RTK Surveyor works very well using only LEDs, it is possible to add an external display. The SparkFun Micro OLED Breakout (Qwiic) can be attached to the Qwiic connector on the end of the Surveyor. At power on, the display will be automatically detected and used.","title":"Displays"},{"location":"displays/#displays","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The RTK Facet, Facet L-Band, Express, and Express Plus utilize a 0.96\" high-contrast OLED display. While small, it packs various situational data that can be helpful in the field. We will walk you through each display.","title":"Displays"},{"location":"displays/#power-onoff","text":"RTK Facet Startup and Shutdown Screens Press and hold the power button until the display illuminates to turn on the device. Similarly, press and hold the power button to turn off the device. The device's firmware version is shown during the Power On display.","title":"Power On/Off"},{"location":"displays/#rover-fix","text":"Rover with location fix Upon power up the device will enter either Rover mode or Base mode. Above, the Rover mode is displayed. MAC: The MAC address of the internal Bluetooth module. This is helpful knowledge when attempting to connect to the device from your phone. This will change to a Bluetooth symbol once connected. HPA: Horizontal positional accuracy is an estimate of how accurate the current positional readings are. This number will decrease rapidly after the first power-up and settle around 0.3m depending on your antenna and view of the sky. When RTK fix is achieved this icon will change to a double circle and the HPA number will decrease even further to as low as 0.014m. SIV: Satellites in view is the number of satellites used for the fix calculation. This symbol will blink before a location fix is generated and become solid when the device has a good location fix. SIV is a good indicator of how good of a view the antenna has. This number will vary but anything above 10 is adequate. We've seen as high as 31. Model: This icon will change depending on the selected dynamic model: Portable (default) Pedestrian, Sea, Bike, Stationary, etc. Log: This icon will remain animated while the log file is increasing. This is a good visual indication that you have an SD card inserted and RTK Facet can successfully record to it.","title":"Rover Fix"},{"location":"displays/#rover-rtk-fix","text":"Rover with RTK Fix and Bluetooth connected Once NTRIP is enabled on your phone or RTCM data is being streamed into the Radio port the device will gain an RTK Fix. You should see the HPA drop to 14mm with a double circle bulls-eye as shown above.","title":"Rover RTK Fix"},{"location":"displays/#base-survey-in","text":"RTK device in Survey-In Mode Pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained.","title":"Base Survey-In"},{"location":"displays/#base-transmitting","text":"RTK Facet in Fixed Transmit Mode Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second. The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base.","title":"Base Transmitting"},{"location":"displays/#base-transmitting-ntrip","text":"If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. RTK Facet in Transmit Mode with NTRIP Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second. Note: During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to the USB port to view detailed location and ZED-F9P configuration information.","title":"Base Transmitting NTRIP"},{"location":"displays/#l-band","text":"L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. Display showing 14 days until L-Band Keys Expire The unit will display various messages to aid the user in obtaining keys as needed. Three-pronged satellite dish indicating L-Band reception Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution.","title":"L-Band"},{"location":"displays/#adding-a-display-to-the-rtk-surveyor","text":"While the RTK Surveyor works very well using only LEDs, it is possible to add an external display. The SparkFun Micro OLED Breakout (Qwiic) can be attached to the Qwiic connector on the end of the Surveyor. At power on, the display will be automatically detected and used.","title":"Adding a Display to the RTK Surveyor"},{"location":"embeddedsystem_connection/","text":"Output to an Embedded System Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Many applications using the RTK products will use a 3rd party GIS application or mobile app like SW Maps and receive the data over Bluetooth. Alternatively, for embedded applications, a user can obtain the NMEA data over serial directly. For this example, we will connect the output from the Data port to a USB to Serial adapter so that we can view the serial data over a terminal connection. The Data port on the RTK Facet, Express, and Express Plus can be configured to output a variety of different signals including NMEA Serial data. Be sure to check out the Ports Menu section to be sure your device is configured to output NMEA. Connect the included 4-pin JST to breadboard cable to the Data port. The cable has the following pinout: Red - 3.3V Green - TX (output from the RTK device) Orange - RX (input into the RTK device) Black - GND Click any image for a closer view Open a terminal at 115200bps and you should see NMEA sentences: The Data connector on all RTK products is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source, so if your embedded device has its own power do not connect the red wire. Warning! All data in and out of RTK products is 3.3V . Exposing these pins to 5V or higher voltage logic will damage the device. The parsing of NMEA sentences is straightforward and left to the reader. There are ample NMEA parsing libraries available in C++, Arduino, Python, and many more languages.","title":"Output to an Embedded System"},{"location":"embeddedsystem_connection/#output-to-an-embedded-system","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Many applications using the RTK products will use a 3rd party GIS application or mobile app like SW Maps and receive the data over Bluetooth. Alternatively, for embedded applications, a user can obtain the NMEA data over serial directly. For this example, we will connect the output from the Data port to a USB to Serial adapter so that we can view the serial data over a terminal connection. The Data port on the RTK Facet, Express, and Express Plus can be configured to output a variety of different signals including NMEA Serial data. Be sure to check out the Ports Menu section to be sure your device is configured to output NMEA. Connect the included 4-pin JST to breadboard cable to the Data port. The cable has the following pinout: Red - 3.3V Green - TX (output from the RTK device) Orange - RX (input into the RTK device) Black - GND Click any image for a closer view Open a terminal at 115200bps and you should see NMEA sentences: The Data connector on all RTK products is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source, so if your embedded device has its own power do not connect the red wire. Warning! All data in and out of RTK products is 3.3V . Exposing these pins to 5V or higher voltage logic will damage the device. The parsing of NMEA sentences is straightforward and left to the reader. There are ample NMEA parsing libraries available in C++, Arduino, Python, and many more languages.","title":"Output to an Embedded System"},{"location":"firmware_update/","text":"Updating RTK Firmware Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The device has two primary firmwares: Firmware on the ESP32 microcontroller. Keep reading. Firmware on the u-blox ZED-F9P, ZED-F9P, or NEO-D9S Receiver. See below . Main Menu showing RTK Firmware v1.8-Oct 7 2021 You can check your firmware by opening the main menu by pressing a key at any time. From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded by loading the appropriate binary file located on the releases page or from the binaries folder . Once the firmware is downloaded, loading the firmware onto an RTK product can be achieved by using one of the following methods: SD Method : Load the firmware on an SD card, then use a serial terminal with the Firmware Upgrade menu WiFi Method : Load the firmware over WiFi when the device is in WiFi AP Config Mode GUI Method : Use the Windows GUI and a USB cable. (This method is python based which can also be used on Linux, Mac OS, and Raspberry Pi) CLI Method : Use the command line batch_program.bat (see below) The SD method is generally recommended. For more information see here . Remember, all SparkFun RTK devices are open source hardware meaning you have total access to the firmware and hardware . Be sure to check out each repo for the latest firmware and hardware information. Updating Firmware From the SD Card Firmware update taking place From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded by loading the appropriate firmware file from the binaries repo folder onto the SD card and bringing up the firmware menu as shown above. The firmware upgrade menu will only display files that have the \"RTK_Surveyor_Firmware*.bin\" file name format so don't change the file names once loaded onto the SD card. Select the firmware you'd like to load and the system will proceed to load the new firmware, then reboot. Note: The firmware is called RTK_Surveyor_Firmware_vXX.bin even though there are various RTK products (Facet, Express, Surveyor, etc). We united the different platforms into one. The RTK Firmware runs on all our RTK products. Force Firmware Loading In the rare event that a unit is not staying on long enough for new firmware to be loaded into a COM port, the RTK Firmware (as of version 1.2) has an override function. If a file named RTK_Surveyor_Firmware_Force.bin is detected on the SD card at boot that file will be used to overwrite the current firmware, and then be deleted. This update path is generally not recommended. Use the GUI or WiFi OTA methods as the first resort. Updating Firmware From WiFi Note: Firmware versions 1.1 to 1.9 have an issue that severely limits firmware upload over WiFi and is not recommended; use the 'Updating Firmware From the SD Card' method instead. Firmware versions v1.10 and beyond support direct firmware update via WiFi and is the preferred method for updating the firmware on a unit. Advanced system settings Alternatively, firmware may be uploaded via the WiFi AP interface. Versions 1.1 to 1.9: For firmware versions 1.1 to 1.9, the upload process is limited in speed resulting in upload times of nearly 2 minutes. Because of this, we recommend using the 'Updating Firmware From the SD Card' method instead. If you do upload firmware over WiFi, once it has been uploaded it will be viewable on the 'Available Firmware' on the page. To prevent accidental loading the Enable Firmware Update checkbox must first be checked before the button is enabled. Versions 1.10 and Greater: Firmware may be uploaded to the unit by clicking on 'Choose File', selecting the binary such as 'RTK_Surveyor_Firmware_v1_xx.bin' and pressing upload. The unit will automatically reset once the firmware upload is complete. Updating Firmware Using Windows GUI RTK Firmware GUI Download the GUI here . In general, the SD firmware update method is recommended, but for some firmware updates (for example from version v1.x to v2.x) a serial connection via USB is required. This GUI makes it easy to point and click your way through a firmware update. To Use Attach the RTK device to your computer using a USB cable. Turn the RTK device on. Open Windows Device Manager to confirm which COM port the device is operating on. Device Manager showing 'USB-Serial CH340' port on COM27 Get the latest binary firmware file from the Binaries folder. Run RTK_Firmware_Uploader_GUI.exe (it takes a few seconds to start) Click Browse and select the binary file to upload Select the COM port previously seen in the Device Manager Click Upload Firmware Once complete, the device will reset and power down. Updating Firmware From CLI The command-line interface is also available. You\u2019ll need to download the repo and navigate to the /Binaries/ folder. This contains the binaries but also various supporting tools including esptool.exe and the three binaries required along with the firmware (bootloader, partitions, and app0). Windows Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at. The easiest way to do this is to open the Device Manager: CH340 is on COM6 as shown in Device Manager If the COM port is not showing be sure the unit is turned On . If an unknown device is appearing, you\u2019ll need to install drivers for the CH340 . Once you know the COM port, open a command prompt (Windows button + r then type \u2018cmd\u2019). batch_program.bat running esptool Once the correct COM is identified, run 'batch_program.bat' along with the binary file name and COM port. For example batch_program.bat RTK_Surveyor_Firmware_v2_0.bin COM6 . COM6 should be replaced by the COM port you identified earlier. The batch file runs the following commands: esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor.ino.partitions.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin Where COM6 is replaced with the COM port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load. Upon completion, your RTK device will reset and power down. macOS / Linux Get esptool.py . Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at. If the COM port is not showing be sure the unit is turned On . If an unknown device is appearing, you\u2019ll need to install drivers for the CH340 . Once you know the COM port, run the following command: py esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor.ino.partitions.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin Where /dev/ttyUSB0 is replaced with the port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load. Upon completion, your RTK device will reset and power down. Updating 4MB Surveyors RTK Surveyors sold before September 2021 may have an ESP32 WROOM module with 4MB flash instead of 16MB flash. These units still support all the functionality of other RTK products with the following limitations: There is not enough flash space for OTA. Upgrading the firmware must be done via CLI or GUI . WiFi or SD update paths are not possible. The GUI (as of v1.3) will autodetect the ESP32's flash size and load the appropriate partition file. No user interaction is required. Determining Size of Flash To determine if the device has a 4MB module: Use the esptool via CLI. Please see the flash_id command for usage. Use the GUI and attempt a firmware update. The output will auto-detect and show the flash size, as shown below: Updating u-blox Firmware The following products contain the following u-blox receivers: RTK Surveyor: ZED-F9P RTK Express: ZED-F9P RTK Express Plus: ZED-F9R RTK Facet: ZED-F9P RTK Facet L-Band: ZED-F9P and NEO-D9S The firmware loaded onto the ZED-F9P, ZED-F9R, and NEO-D9S receivers is written by u-blox and can vary depending on the manufacture date. The RTK Firmware (that runs on the ESP32) is designed to flexibly work with any u-blox firmware. Upgrading the ZED-F9x/NEO-D9S is a good thing to consider but is not crucial to the use of RTK products. Not sure what firmware is loaded onto your RTK product? Open the System Status Menu to display the module's current firmware version. The firmware on u-blox devices can be updated using a Windows-based GUI or u-center . A CLI method is also possible using the ubxfwupdate.exe tool provided with u-center. Additionally, u-blox offers the source for the ubxfwupdate tool that is written in C. It is currently released only under an NDA so contact your local u-blox Field Applications Engineer if you need a different method. Updating Using Windows GUI SparkFun RTK u-blox Firmware Update Tool The SparkFun RTK u-blox Firmware Update Tool is a simple Windows GUI and python script that runs the ubxfwupdate.exe tool. This allows users to directly update module firmware without the need for u-center. Additionally, this tool queries the module to verify that the firmware type matches the module. Because the RTK Facet L-Band contains two u-blox modules that both appear as identical serial ports, it can be difficult and perilous to know which port to load firmware. This tool prevents ZED-F9P firmware from being accidentally loaded onto a NEO-D9S receiver and vice versa. The SparkFun RTK u-blox Firmware Update Tool will only run on Windows as it relies upon u-blox's ubxfwupdate.exe. The full, integrated executable for Windows is available here . Attach the RTK device's USB port to your computer using a USB cable Turn the RTK device on Open Device Manager to confirm which COM port the device is operating on Device Manager showing USB Serial port on COM14 Get the latest binary firmware file from the ZED Firmware , NEO Firmware folder, or the u-blox website Run RTK_u-blox_Update_GUI.exe (it takes a few seconds to start) Click the Firmware File Browse and select the binary file for the update Select the COM port previously seen in the Device Manager Click Update Firmware Once complete, the u-blox module will restart. Updating Using u-center If you're familiar with u-center a tutorial with step-by-step instructions for locating the firmware version as well as changing the firmware can be found in How to Upgrade Firmware of a u-blox Receiver . ZED-F9P Firmware Changes This module is used in the Surveyor, Express, and Facet. It is capable of both Rover and base modes. Most of these binaries can be found in the ZED Firmware/ZED-F9P folder. All field testing and device-specific performance parameters were obtained with ZED-F9P v1.30. v1.12 has the benefit of working with SBAS and an operational RTK status signal (the LED illuminates correctly). See release notes . v1.13 has a few RTK and receiver performance improvements but introduces a bug that causes the RTK Status LED to fail when SBAS is enabled. See release notes . v1.30 has a few RTK and receiver performance improvements, I 2 C communication improvements, and most importantly support for SPARTN PMP packets. See release notes . v1.32 has a few SPARTN protocol-specific improvements. See release notes . This firmware is required for use with the NEO-D9S and the decryption of PMP messages. ZED-F9R Firmware Changes This module is used in the Express Plus. It contains an internal IMU and additional algorithms to support high-precision location fixes using dead reckoning. The ZED-F9R is not capable of operating in base mode. Most of these binaries can be found in the ZED Firmware/ZED-F9R folder. v1.00 Initial release. v1.21 SPARTN support as well as adding E-scooter and robotic lawnmower dynamic models. See release notes . NEO-D9S Firmware Changes This module is used in the Facet L-Band to receive encrypted PMP messages over ~1.55GHz broadcast via a geosynchronous Inmarsat. This binary file can be found in the NEO Firmware folder. v1.04 Initial release. As of writing, no additional releases of the NEO-D9S firmware have been made. Compiling Source Windows The SparkFun RTK firmware is compiled using Arduino (currently v1.8.15). To compile: Install Arduino . Install ESP32 for Arduino. Here are some good instructions for installing it via the Arduino Boards Manager. Note : Use v2.0.2 of the core. Note: We use the 'ESP32 Dev Module' for pin numbering. Select the correct board under Tools->Board->ESP32 Arduino->ESP32 Dev Module. Change the Partition table. Replace 'C:\\Users\\[user name]\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\2.0.2\\tools\\partitions\\min_spiffs.csv' with the min_spiff.csv file found in this folder. This will increase the program partition from a maximum of 1.9MB to 3MB. Set the core settings: The 'Partition Scheme' must be set to 'Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS). This will use the 'min_spiffs.csv' updated partition table. Set the 'Flash Size' to 16MB (128mbit) Obtain all the required libraries. Note: You should click on the link next to each of the #includes at the top of RTK_Surveyor.ino within the Arduino IDE to open the library manager and download them. Getting them directly from Github also works but may not be 'official' releases: ESP32Time ESPAsyncWebServer (not available via library manager) AsyncTCP (not available via library manager) JC_Button SdFat SparkFun u-blox GNSS Arduino Library SparkFun MAX1704x Fuel Gauge Arduino Library SparkFun Micro OLED Arduino Library - Note the Arduino Library manager lists this as 'SparkFun Micro OLED Breakout' SparkFun LIS2DH12 Accelerometer Arduino Library Once compiled, firmware can be uploaded directly to a unit when the RTK unit is on and the correct COM port is selected under the Arduino IDE Tools->Port menu. Note: The COMPILE_WIFI and COMPILE_BT defines at the top of RTK_Surveyor.ino can be commented out to remove them from compilation. This will greatly reduce the firmware size and allow for faster development of functions that do not rely on WiFi or Bluetooth (serial menus, system configuration, logging, etc). Ubuntu 20.04 Virtual Machine - Ubuntu 20.04 Execute the following commands to create the Linux virtual machine: Using a browser, download the Ubuntu 20.04 Desktop image virtualbox Click on the new button Specify the machine Name, e.g.: Sparkfun_RTK_20.04 Select Type: Linux Select Version: Ubuntu (64-bit) Click the Next> button Select the memory size: 7168 Click the Next> button Click on Create a virtual hard disk now Click the Create button Select VDI (VirtualBox Disk Image) Click the Next> button Select Dynamically allocated Click the Next> button Select the disk size: 128 GB Click the Create button Click on Storage Click the empty CD icon On the right-hand side, click the CD icon Click on Choose a disk file... Choose the ubuntu-20.04... iso file Click the Open button Click on Network Under 'Attached to:' select Bridged Adapter Click the OK button Click the Start button Install Ubuntu 20.04 Log into Ubuntu Click on Activities Type terminal into the search box Optionally install the SSH server In the terminal window sudo apt install -y net-tools openssh-server ifconfig Write down the IP address On the PC ssh-keygen -t rsa -f ~/.ssh/Sparkfun_RTK_20.04 ssh-copy-id -o IdentitiesOnly=yes -i ~/.ssh/Sparkfun_RTK_20.04 <username>@<IP address> ssh -Y <username>@<IP address> Build Environment Execute the following commands to create the build environment for the SparkFun RTK Firmware: sudo adduser $USER dialout sudo shutdown -r 0 Reboot to ensure that the dialout privilege is available to the user sudo apt update sudo apt install -y git gitk git-cola minicom python3-pip sudo pip3 install pyserial mkdir ~/SparkFun mkdir ~/SparkFun/esptool cd ~/SparkFun/esptool git clone https://github.com/espressif/esptool . cd ~/SparkFun nano serial-port.sh Insert the following text into the file: #!/bin/bash # serial-port.sh # # Shell script to read the serial data from the RTK Express ESP32 port # # Parameters: # 1: ttyUSBn # sudo minicom -b 115200 -8 -D /dev/$1 < /dev/tty chmod +x serial-port.sh nano new-firmware.sh Insert the following text into the file: #!/bin/bash # new-firmware.sh # # Shell script to load firmware into the RTK Express via the ESP32 port # # Parameters: # 1: ttyUSBn # 2: Firmware file # sudo python3 ~/.arduino15/packages/esp32/tools/esptool_py/*/esptool.py --chip esp32 --port /dev/$1 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect \\ 0x1000 ~/SparkFun/RTK/Binaries/bin/RTK_Surveyor.ino.bootloader.bin \\ 0x8000 ~/SparkFun/RTK/Binaries/bin/RTK_Surveyor.ino.partitions.bin \\ 0xe000 ~/SparkFun/RTK/Binaries/bin/boot_app0.bin \\ 0x10000 $2 chmod +x new-firmware.sh Get the SparkFun RTK Firmware sources mkdir ~/SparkFun/RTK cd ~/SparkFun/RTK git clone https://github.com/sparkfun/SparkFun_RTK_Firmware . Install the Arduino IDE mkdir ~/SparkFun/arduino cd ~/SparkFun/arduino wget https://downloads.arduino.cc/arduino-1.8.15-linux64.tar.xz tar -xvf ./arduino-1.8.15-linux64.tar.xz cd arduino-1.8.15/ sudo ./install.sh Add the ESP32 support Arduino Click on File in the menu bar Click on Preferences Go down to the Additional Boards Manager URLs text box Only if the textbox already has a value, go to the end of the value or values and add a comma Add the link: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json Note the value in Sketchbook location Click the OK button Click on File in the menu bar Click on Quit Get the required external libraries, then add to the Sketchbook location from above cd ~/Arduino/libraries mkdir AsyncTCP cd AsyncTCP/ git clone https://github.com/me-no-dev/AsyncTCP.git . cd .. mkdir ESPAsyncWebServer cd ESPAsyncWebServer git clone https://github.com/me-no-dev/ESPAsyncWebServer . Connect the Config ESP32 port of the RTK to a USB port on the computer ls /dev/ttyUSB* Enable the libraries in the Arduino IDE Arduino From the menu, click on File Click on Open... Select the ~/SparkFun/RTK/Firmware/RTK_Surveyor/RTK_Surveyor.ino file Click on the Open button Select the ESP32 development module From the menu, click on Tools Click on Board Click on Board Manager\u2026 Click on esp32 Click on the Install button in the lower right Close the Board Manager... From the menu, click on Tools Click on Board Click on ESP32 Arduino Click on ESP32 Dev Module Load the required libraries From the menu, click on Tools Click on Manage Libraries\u2026 For each of the following libraries: Locate the library Click on the library Click on the Install button in the lower right Library List: ArduinoJson ESP32Time JC_Button MAX17048 - Used for \u201cTest Sketch/Batt_Monitor\u201d PubSubClient SdFat SparkFun LIS2DH12 Accelerometer Arduino Library SparkFun MAX1704x Fuel Gauge Arduino Library SparkFun Qwiic OLED Graphics Library SparkFun u-blox GNSS Arduino Library Click on the Close button Select the terminal port From the menu, click on Tools Click on Port, Select the port that was displayed in step 38 above Select /dev/ttyUSB0 Setup the partitions for the 16 MB flash From the menu, click on Tools Click on Flash Size Select 16MB From the menu, click on Tools Click on Partition Scheme Click on 16M Flash (3MB APP/9MB FATFS) From the menu click on File Click on Quit cd ~/SparkFun/RTK/ cp Firmware/app3M_fat9M_16MB.csv ~/.arduino15/packages/esp32/hardware/esp32/2.0.3/tools/partitions/app3M_fat9M_16MB.csv","title":"Updating RTK Firmware"},{"location":"firmware_update/#updating-rtk-firmware","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: The device has two primary firmwares: Firmware on the ESP32 microcontroller. Keep reading. Firmware on the u-blox ZED-F9P, ZED-F9P, or NEO-D9S Receiver. See below . Main Menu showing RTK Firmware v1.8-Oct 7 2021 You can check your firmware by opening the main menu by pressing a key at any time. From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded by loading the appropriate binary file located on the releases page or from the binaries folder . Once the firmware is downloaded, loading the firmware onto an RTK product can be achieved by using one of the following methods: SD Method : Load the firmware on an SD card, then use a serial terminal with the Firmware Upgrade menu WiFi Method : Load the firmware over WiFi when the device is in WiFi AP Config Mode GUI Method : Use the Windows GUI and a USB cable. (This method is python based which can also be used on Linux, Mac OS, and Raspberry Pi) CLI Method : Use the command line batch_program.bat (see below) The SD method is generally recommended. For more information see here . Remember, all SparkFun RTK devices are open source hardware meaning you have total access to the firmware and hardware . Be sure to check out each repo for the latest firmware and hardware information.","title":"Updating RTK Firmware"},{"location":"firmware_update/#updating-firmware-from-the-sd-card","text":"Firmware update taking place From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded by loading the appropriate firmware file from the binaries repo folder onto the SD card and bringing up the firmware menu as shown above. The firmware upgrade menu will only display files that have the \"RTK_Surveyor_Firmware*.bin\" file name format so don't change the file names once loaded onto the SD card. Select the firmware you'd like to load and the system will proceed to load the new firmware, then reboot. Note: The firmware is called RTK_Surveyor_Firmware_vXX.bin even though there are various RTK products (Facet, Express, Surveyor, etc). We united the different platforms into one. The RTK Firmware runs on all our RTK products.","title":"Updating Firmware From the SD Card"},{"location":"firmware_update/#force-firmware-loading","text":"In the rare event that a unit is not staying on long enough for new firmware to be loaded into a COM port, the RTK Firmware (as of version 1.2) has an override function. If a file named RTK_Surveyor_Firmware_Force.bin is detected on the SD card at boot that file will be used to overwrite the current firmware, and then be deleted. This update path is generally not recommended. Use the GUI or WiFi OTA methods as the first resort.","title":"Force Firmware Loading"},{"location":"firmware_update/#updating-firmware-from-wifi","text":"Note: Firmware versions 1.1 to 1.9 have an issue that severely limits firmware upload over WiFi and is not recommended; use the 'Updating Firmware From the SD Card' method instead. Firmware versions v1.10 and beyond support direct firmware update via WiFi and is the preferred method for updating the firmware on a unit. Advanced system settings Alternatively, firmware may be uploaded via the WiFi AP interface. Versions 1.1 to 1.9: For firmware versions 1.1 to 1.9, the upload process is limited in speed resulting in upload times of nearly 2 minutes. Because of this, we recommend using the 'Updating Firmware From the SD Card' method instead. If you do upload firmware over WiFi, once it has been uploaded it will be viewable on the 'Available Firmware' on the page. To prevent accidental loading the Enable Firmware Update checkbox must first be checked before the button is enabled. Versions 1.10 and Greater: Firmware may be uploaded to the unit by clicking on 'Choose File', selecting the binary such as 'RTK_Surveyor_Firmware_v1_xx.bin' and pressing upload. The unit will automatically reset once the firmware upload is complete.","title":"Updating Firmware From WiFi"},{"location":"firmware_update/#updating-firmware-using-windows-gui","text":"RTK Firmware GUI Download the GUI here . In general, the SD firmware update method is recommended, but for some firmware updates (for example from version v1.x to v2.x) a serial connection via USB is required. This GUI makes it easy to point and click your way through a firmware update. To Use Attach the RTK device to your computer using a USB cable. Turn the RTK device on. Open Windows Device Manager to confirm which COM port the device is operating on. Device Manager showing 'USB-Serial CH340' port on COM27 Get the latest binary firmware file from the Binaries folder. Run RTK_Firmware_Uploader_GUI.exe (it takes a few seconds to start) Click Browse and select the binary file to upload Select the COM port previously seen in the Device Manager Click Upload Firmware Once complete, the device will reset and power down.","title":"Updating Firmware Using Windows GUI"},{"location":"firmware_update/#updating-firmware-from-cli","text":"The command-line interface is also available. You\u2019ll need to download the repo and navigate to the /Binaries/ folder. This contains the binaries but also various supporting tools including esptool.exe and the three binaries required along with the firmware (bootloader, partitions, and app0).","title":"Updating Firmware From CLI"},{"location":"firmware_update/#windows","text":"Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at. The easiest way to do this is to open the Device Manager: CH340 is on COM6 as shown in Device Manager If the COM port is not showing be sure the unit is turned On . If an unknown device is appearing, you\u2019ll need to install drivers for the CH340 . Once you know the COM port, open a command prompt (Windows button + r then type \u2018cmd\u2019). batch_program.bat running esptool Once the correct COM is identified, run 'batch_program.bat' along with the binary file name and COM port. For example batch_program.bat RTK_Surveyor_Firmware_v2_0.bin COM6 . COM6 should be replaced by the COM port you identified earlier. The batch file runs the following commands: esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor.ino.partitions.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin Where COM6 is replaced with the COM port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load. Upon completion, your RTK device will reset and power down.","title":"Windows"},{"location":"firmware_update/#macos-linux","text":"Get esptool.py . Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at. If the COM port is not showing be sure the unit is turned On . If an unknown device is appearing, you\u2019ll need to install drivers for the CH340 . Once you know the COM port, run the following command: py esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor.ino.partitions.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin Where /dev/ttyUSB0 is replaced with the port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load. Upon completion, your RTK device will reset and power down.","title":"macOS / Linux"},{"location":"firmware_update/#updating-4mb-surveyors","text":"RTK Surveyors sold before September 2021 may have an ESP32 WROOM module with 4MB flash instead of 16MB flash. These units still support all the functionality of other RTK products with the following limitations: There is not enough flash space for OTA. Upgrading the firmware must be done via CLI or GUI . WiFi or SD update paths are not possible. The GUI (as of v1.3) will autodetect the ESP32's flash size and load the appropriate partition file. No user interaction is required.","title":"Updating 4MB Surveyors"},{"location":"firmware_update/#determining-size-of-flash","text":"To determine if the device has a 4MB module: Use the esptool via CLI. Please see the flash_id command for usage. Use the GUI and attempt a firmware update. The output will auto-detect and show the flash size, as shown below:","title":"Determining Size of Flash"},{"location":"firmware_update/#updating-u-blox-firmware","text":"The following products contain the following u-blox receivers: RTK Surveyor: ZED-F9P RTK Express: ZED-F9P RTK Express Plus: ZED-F9R RTK Facet: ZED-F9P RTK Facet L-Band: ZED-F9P and NEO-D9S The firmware loaded onto the ZED-F9P, ZED-F9R, and NEO-D9S receivers is written by u-blox and can vary depending on the manufacture date. The RTK Firmware (that runs on the ESP32) is designed to flexibly work with any u-blox firmware. Upgrading the ZED-F9x/NEO-D9S is a good thing to consider but is not crucial to the use of RTK products. Not sure what firmware is loaded onto your RTK product? Open the System Status Menu to display the module's current firmware version. The firmware on u-blox devices can be updated using a Windows-based GUI or u-center . A CLI method is also possible using the ubxfwupdate.exe tool provided with u-center. Additionally, u-blox offers the source for the ubxfwupdate tool that is written in C. It is currently released only under an NDA so contact your local u-blox Field Applications Engineer if you need a different method.","title":"Updating u-blox Firmware"},{"location":"firmware_update/#updating-using-windows-gui","text":"SparkFun RTK u-blox Firmware Update Tool The SparkFun RTK u-blox Firmware Update Tool is a simple Windows GUI and python script that runs the ubxfwupdate.exe tool. This allows users to directly update module firmware without the need for u-center. Additionally, this tool queries the module to verify that the firmware type matches the module. Because the RTK Facet L-Band contains two u-blox modules that both appear as identical serial ports, it can be difficult and perilous to know which port to load firmware. This tool prevents ZED-F9P firmware from being accidentally loaded onto a NEO-D9S receiver and vice versa. The SparkFun RTK u-blox Firmware Update Tool will only run on Windows as it relies upon u-blox's ubxfwupdate.exe. The full, integrated executable for Windows is available here . Attach the RTK device's USB port to your computer using a USB cable Turn the RTK device on Open Device Manager to confirm which COM port the device is operating on Device Manager showing USB Serial port on COM14 Get the latest binary firmware file from the ZED Firmware , NEO Firmware folder, or the u-blox website Run RTK_u-blox_Update_GUI.exe (it takes a few seconds to start) Click the Firmware File Browse and select the binary file for the update Select the COM port previously seen in the Device Manager Click Update Firmware Once complete, the u-blox module will restart.","title":"Updating Using Windows GUI"},{"location":"firmware_update/#updating-using-u-center","text":"If you're familiar with u-center a tutorial with step-by-step instructions for locating the firmware version as well as changing the firmware can be found in How to Upgrade Firmware of a u-blox Receiver .","title":"Updating Using u-center"},{"location":"firmware_update/#zed-f9p-firmware-changes","text":"This module is used in the Surveyor, Express, and Facet. It is capable of both Rover and base modes. Most of these binaries can be found in the ZED Firmware/ZED-F9P folder. All field testing and device-specific performance parameters were obtained with ZED-F9P v1.30. v1.12 has the benefit of working with SBAS and an operational RTK status signal (the LED illuminates correctly). See release notes . v1.13 has a few RTK and receiver performance improvements but introduces a bug that causes the RTK Status LED to fail when SBAS is enabled. See release notes . v1.30 has a few RTK and receiver performance improvements, I 2 C communication improvements, and most importantly support for SPARTN PMP packets. See release notes . v1.32 has a few SPARTN protocol-specific improvements. See release notes . This firmware is required for use with the NEO-D9S and the decryption of PMP messages.","title":"ZED-F9P Firmware Changes"},{"location":"firmware_update/#zed-f9r-firmware-changes","text":"This module is used in the Express Plus. It contains an internal IMU and additional algorithms to support high-precision location fixes using dead reckoning. The ZED-F9R is not capable of operating in base mode. Most of these binaries can be found in the ZED Firmware/ZED-F9R folder. v1.00 Initial release. v1.21 SPARTN support as well as adding E-scooter and robotic lawnmower dynamic models. See release notes .","title":"ZED-F9R Firmware Changes"},{"location":"firmware_update/#neo-d9s-firmware-changes","text":"This module is used in the Facet L-Band to receive encrypted PMP messages over ~1.55GHz broadcast via a geosynchronous Inmarsat. This binary file can be found in the NEO Firmware folder. v1.04 Initial release. As of writing, no additional releases of the NEO-D9S firmware have been made.","title":"NEO-D9S Firmware Changes"},{"location":"firmware_update/#compiling-source","text":"","title":"Compiling Source"},{"location":"firmware_update/#windows_1","text":"The SparkFun RTK firmware is compiled using Arduino (currently v1.8.15). To compile: Install Arduino . Install ESP32 for Arduino. Here are some good instructions for installing it via the Arduino Boards Manager. Note : Use v2.0.2 of the core. Note: We use the 'ESP32 Dev Module' for pin numbering. Select the correct board under Tools->Board->ESP32 Arduino->ESP32 Dev Module. Change the Partition table. Replace 'C:\\Users\\[user name]\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\2.0.2\\tools\\partitions\\min_spiffs.csv' with the min_spiff.csv file found in this folder. This will increase the program partition from a maximum of 1.9MB to 3MB. Set the core settings: The 'Partition Scheme' must be set to 'Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS). This will use the 'min_spiffs.csv' updated partition table. Set the 'Flash Size' to 16MB (128mbit) Obtain all the required libraries. Note: You should click on the link next to each of the #includes at the top of RTK_Surveyor.ino within the Arduino IDE to open the library manager and download them. Getting them directly from Github also works but may not be 'official' releases: ESP32Time ESPAsyncWebServer (not available via library manager) AsyncTCP (not available via library manager) JC_Button SdFat SparkFun u-blox GNSS Arduino Library SparkFun MAX1704x Fuel Gauge Arduino Library SparkFun Micro OLED Arduino Library - Note the Arduino Library manager lists this as 'SparkFun Micro OLED Breakout' SparkFun LIS2DH12 Accelerometer Arduino Library Once compiled, firmware can be uploaded directly to a unit when the RTK unit is on and the correct COM port is selected under the Arduino IDE Tools->Port menu. Note: The COMPILE_WIFI and COMPILE_BT defines at the top of RTK_Surveyor.ino can be commented out to remove them from compilation. This will greatly reduce the firmware size and allow for faster development of functions that do not rely on WiFi or Bluetooth (serial menus, system configuration, logging, etc).","title":"Windows"},{"location":"firmware_update/#ubuntu-2004","text":"","title":"Ubuntu 20.04"},{"location":"firmware_update/#virtual-machine-ubuntu-2004","text":"Execute the following commands to create the Linux virtual machine: Using a browser, download the Ubuntu 20.04 Desktop image virtualbox Click on the new button Specify the machine Name, e.g.: Sparkfun_RTK_20.04 Select Type: Linux Select Version: Ubuntu (64-bit) Click the Next> button Select the memory size: 7168 Click the Next> button Click on Create a virtual hard disk now Click the Create button Select VDI (VirtualBox Disk Image) Click the Next> button Select Dynamically allocated Click the Next> button Select the disk size: 128 GB Click the Create button Click on Storage Click the empty CD icon On the right-hand side, click the CD icon Click on Choose a disk file... Choose the ubuntu-20.04... iso file Click the Open button Click on Network Under 'Attached to:' select Bridged Adapter Click the OK button Click the Start button Install Ubuntu 20.04 Log into Ubuntu Click on Activities Type terminal into the search box Optionally install the SSH server In the terminal window sudo apt install -y net-tools openssh-server ifconfig Write down the IP address On the PC ssh-keygen -t rsa -f ~/.ssh/Sparkfun_RTK_20.04 ssh-copy-id -o IdentitiesOnly=yes -i ~/.ssh/Sparkfun_RTK_20.04 <username>@<IP address> ssh -Y <username>@<IP address>","title":"Virtual Machine - Ubuntu 20.04"},{"location":"firmware_update/#build-environment","text":"Execute the following commands to create the build environment for the SparkFun RTK Firmware: sudo adduser $USER dialout sudo shutdown -r 0 Reboot to ensure that the dialout privilege is available to the user sudo apt update sudo apt install -y git gitk git-cola minicom python3-pip sudo pip3 install pyserial mkdir ~/SparkFun mkdir ~/SparkFun/esptool cd ~/SparkFun/esptool git clone https://github.com/espressif/esptool . cd ~/SparkFun nano serial-port.sh Insert the following text into the file: #!/bin/bash # serial-port.sh # # Shell script to read the serial data from the RTK Express ESP32 port # # Parameters: # 1: ttyUSBn # sudo minicom -b 115200 -8 -D /dev/$1 < /dev/tty chmod +x serial-port.sh nano new-firmware.sh Insert the following text into the file: #!/bin/bash # new-firmware.sh # # Shell script to load firmware into the RTK Express via the ESP32 port # # Parameters: # 1: ttyUSBn # 2: Firmware file # sudo python3 ~/.arduino15/packages/esp32/tools/esptool_py/*/esptool.py --chip esp32 --port /dev/$1 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect \\ 0x1000 ~/SparkFun/RTK/Binaries/bin/RTK_Surveyor.ino.bootloader.bin \\ 0x8000 ~/SparkFun/RTK/Binaries/bin/RTK_Surveyor.ino.partitions.bin \\ 0xe000 ~/SparkFun/RTK/Binaries/bin/boot_app0.bin \\ 0x10000 $2 chmod +x new-firmware.sh Get the SparkFun RTK Firmware sources mkdir ~/SparkFun/RTK cd ~/SparkFun/RTK git clone https://github.com/sparkfun/SparkFun_RTK_Firmware . Install the Arduino IDE mkdir ~/SparkFun/arduino cd ~/SparkFun/arduino wget https://downloads.arduino.cc/arduino-1.8.15-linux64.tar.xz tar -xvf ./arduino-1.8.15-linux64.tar.xz cd arduino-1.8.15/ sudo ./install.sh Add the ESP32 support Arduino Click on File in the menu bar Click on Preferences Go down to the Additional Boards Manager URLs text box Only if the textbox already has a value, go to the end of the value or values and add a comma Add the link: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json Note the value in Sketchbook location Click the OK button Click on File in the menu bar Click on Quit Get the required external libraries, then add to the Sketchbook location from above cd ~/Arduino/libraries mkdir AsyncTCP cd AsyncTCP/ git clone https://github.com/me-no-dev/AsyncTCP.git . cd .. mkdir ESPAsyncWebServer cd ESPAsyncWebServer git clone https://github.com/me-no-dev/ESPAsyncWebServer . Connect the Config ESP32 port of the RTK to a USB port on the computer ls /dev/ttyUSB* Enable the libraries in the Arduino IDE Arduino From the menu, click on File Click on Open... Select the ~/SparkFun/RTK/Firmware/RTK_Surveyor/RTK_Surveyor.ino file Click on the Open button Select the ESP32 development module From the menu, click on Tools Click on Board Click on Board Manager\u2026 Click on esp32 Click on the Install button in the lower right Close the Board Manager... From the menu, click on Tools Click on Board Click on ESP32 Arduino Click on ESP32 Dev Module Load the required libraries From the menu, click on Tools Click on Manage Libraries\u2026 For each of the following libraries: Locate the library Click on the library Click on the Install button in the lower right Library List: ArduinoJson ESP32Time JC_Button MAX17048 - Used for \u201cTest Sketch/Batt_Monitor\u201d PubSubClient SdFat SparkFun LIS2DH12 Accelerometer Arduino Library SparkFun MAX1704x Fuel Gauge Arduino Library SparkFun Qwiic OLED Graphics Library SparkFun u-blox GNSS Arduino Library Click on the Close button Select the terminal port From the menu, click on Tools Click on Port, Select the port that was displayed in step 38 above Select /dev/ttyUSB0 Setup the partitions for the 16 MB flash From the menu, click on Tools Click on Flash Size Select 16MB From the menu, click on Tools Click on Partition Scheme Click on 16M Flash (3MB APP/9MB FATFS) From the menu click on File Click on Quit cd ~/SparkFun/RTK/ cp Firmware/app3M_fat9M_16MB.csv ~/.arduino15/packages/esp32/hardware/esp32/2.0.3/tools/partitions/app3M_fat9M_16MB.csv","title":"Build Environment"},{"location":"gis_software/","text":"GIS Software Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: While we recommend SW Maps for Android, there are a variety of 3rd party apps available for GIS and surveying. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data over Bluetooth into the software of your choice. SW Maps The best mobile app that we\u2019ve found is the powerful, free, and easy-to-use SW Maps ](https://play.google.com/store/apps/details?id=np.com.softwel.swmaps)* by Softwel. You\u2019ll need an Android phone or tablet with Bluetooth. What makes SW Maps truly powerful is its built-in NTRIP client. This is a fancy way of saying that we\u2019ll be showing you how to get RTCM correction data over the cellular network. Be sure your device is paired over Bluetooth . List of available Bluetooth devices From SW Map's main menu, select Bluetooth GNSS . This will display a list of available Bluetooth devices. Select the Rover or Base you just paired with. If you are taking height measurements (altitude) in addition to position (lat/long) be sure to enter the height of your antenna off the ground including any ARP offsets of your antenna (this should be printed on the side). Click on 'CONNECT' to open a Bluetooth connection. Assuming this process takes a few seconds, you should immediately have a location fix. SW Maps with RTK Fix You can open the GNSS Status sub-menu to view the current data. NTRIP Client If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part. We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. This is the amazing power of the SparkFun RTK products and SW Maps. Your phone can be the radio link! From the main SW Maps menu select NTRIP Client. Not there? Be sure the 'SparkFun RTK' instrument was automatically selected connecting. Disconnect and change the instrument to 'SparkFun RTK' to enable the NTRIP Connection option. NTRIP Connection - Not there? Be sure to select 'SparkFun RTK' was selected as the instrument Connecting to an NTRIP Caster Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK Express. Within a few seconds, the RTK Express will go from ~300mm accuracy to 14mm. Pretty nifty, no? What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express. Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base . If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster. Once you have a full RTK fix you'll notice the location bubble in SW Maps turns green. Just for fun, rock your rover monopole back and forth on a fixed point. You'll see your location accurately reflected in SW Maps. Millimeter location precision is a truly staggering thing. Field Genius Field Genius for Android is another good solution, albeit a lot more expensive than free. Be sure your device is paired over Bluetooth . From the Main Menu open Select Instrument . Click the 'Add Profile' button. Click GNSS Rover and select NMEA as the Make. Set your Profile Name to something memorable like 'RTK-Express' then click the 'Create' button. Click on 'SET UP COMMUNICATION'. From the Bluetooth communication page, click the 'Search' button. You will be shown a list of paired devices. Select the RTK device you'd like to connect to then click 'Connect'. The RTK device will connect and the MAC address shown on the RTK device OLED will change to the Bluetooth icon indicating a link is open. NTRIP Client If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part. We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. Your phone can be the radio link! Click on 'SET UP CORRECTIONS'. Click on 'RTK via Internet' then 'SET UP INTERNET', then 'Done'. Click on 'SET UP DATA SOURCE'. Click 'Add New Source'. Enter your NTRIP Caster credentials and click 'DONE'. What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express. Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base . If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster. Click 'My NTRIP1' then 'Done' and 'Connect'. You will then be presented with a list of Mount Points. Select the mount point you'd like to use then click 'Select' then 'Confirm'. Select 'Done' then from the main menu select 'Survey' to begin using the device. Now you can begin using the SparkFun RTK device with Field Genius. SurvPC Note: The company behind SurvPC, Carlson Software, is not always welcoming to competitors of their $18,000 devices, so be warned. Be sure your device is paired over Bluetooth . Equip Sub Menu Select the Equip sub menu then GPS Rover Select NMEA GPS Receiver From the drop down, select NMEA GPS Receiver . Select Model: DGPS Select DGPS if you'd like to connect to an NTRIP Caster. If you are using the RTK Facet L-Band, or do not need RTK fix type precision, leave the model as Generic. Bluetooth Settings Button From the Comms submenu, click the Blueooth settings button. SurvPC Bluetooth Devices Click Find Device . List of Paired Bluetooth Devices You will be shown a list of devices that have been paired. Select the RTK device you want to connect to. Connect to Device Click the Connect Bluetooth button, shown in red in the top right corner. The software will begin a connection to the RTK device. You'll see the MAC address on the RTK device changes to the Bluetooth icon indicating it's connected. If SurvPC detects NMEA, it will report a successful connection. Receiver Submenu You are welcome to enter the ARP (antenna reference point) and surveying stick length for your particular setup. NTRIP Client Note: If you are using a radio to connect Base to Rover, or if you are using the RTK Facet L-Band you do not need to set up NTRIP; the device will achieve RTK fixes and output extremely accurate location data by itself. But if L-Band corrections are not available, or you are not using a radio link, the NTRIP Client can provide corrections to this Rover. RTK Submenu If you selected 'DGPS' as the Model type, the RTK submenu will be shown. This is where you give the details about your NTRIP Caster such as your mount point, user name/pw, etc. For more information about creating your own NTRIP mount point please see Creating a Permanent Base Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK Express. Within a few seconds, the RTK Express will go from ~300mm accuracy to 14mm. Pretty nifty, no? What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express. Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base . If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster. Once everything is connected up, click the Green check in the top right corner. Storing Points Now that we have a connection, you can use the device, as usual, storing points and calculating distances. SurvPC Skyplot Opening the Skyplot will allow you to see your GNSS details in real-time. If you are a big fan of SurvPC please contact your sales rep and ask them to include SparkFun products in their Manufacturer drop-down list. Survey Master Survey Master by ComNam / SinoGNSS is an Android-based option. The download location can vary so google 'Survey Master ComNav Download' if the link above fails. Download the zip file, send the APK file to a phone and install the program. By default, a wizard will guide you through the setup. The Project step will ask you for the name of the project, the datum, etc. Next select your connection. For the Device Model select 'NMEA Device'. If you are just getting started, use one of the default antenna types. If you are attempting to get sub-centimeter accuracy, enter the parameters of your antenna and add it. Above are the NGS-certified parameters for the TOP106 antenna . Click the 'Target Device' option to get a list of available Bluetooth devices. Make sure your RTK product is on and you should see the device. In this example 'Express Rover-B022' was chosen. To finish, click 'Connect'. You should see the Bluetooth MAC address on your RTK product change to the Bluetooth icon indicating a connection is established. Next is configuring the 'Work mode' of the device. The step is where we set up our NTRIP correction source. Click 'Add' to create a new work mode. Shown above, we configure the NTRIP Client. Survey Master calls this the 'SinoGNSS' Protocol. Click on the three bars to the right of 'Server' to enter a new NTRIP connection. Here you can add different NTRIP Caster providers. If you're using RTK2Go be sure to enter your contact email into the user name. Return to the 'Datalink type' window and select the Server you just entered. Re-enter the server address and port for your NTRIP Caster. Once complete, click on the down-pointing arrow. This will ping the Caster and obtain the mount point table. Select your mount point. Select the newly created work mode and press the 'Apply' button. Survey Master will attempt to connect to your specified RTK corrections source (NTRIP Caster). Upon success, you will be located on the Project menu. Survey Master expects many more NMEA sentences than most GIS software. We must enable some additional messages on the RTK device to correctly communicate with Survey Master. Note above: There are 9 enabled messages and GSV is set to '1'. Connect to the RTK device either over WiFi AP config or via Serial . Above is shown the serial method. Open a terminal at 115200bps and press a key to open the serial configuration menu. Press '2' for GNSS Messages, press '1' for NMEA messages, now be sure to enable 9 messages to a rate of 1: GGA GLL GRS GSA GST GSV RMC VTG ZDA Once complete, press x until you exit the serial menus. Now we may return to Survey Master. Click on the 'Survey' menu and then 'Topo Survey'. Above we can see a device with RTK float, and 117mm horizontal positional accuracy. Known Issues: Survey Master parses the GxGSV sentence improperly and will only indicate GPS satellites even though the fix solution is using all satellites. To verify the NMEA sentences are being delivered correctly, Survey Master has a built-in tool. Select the Device->Rover->More->'H-Terminal'. Other Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.","title":"GIS Software"},{"location":"gis_software/#gis-software","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: While we recommend SW Maps for Android, there are a variety of 3rd party apps available for GIS and surveying. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data over Bluetooth into the software of your choice.","title":"GIS Software"},{"location":"gis_software/#sw-maps","text":"The best mobile app that we\u2019ve found is the powerful, free, and easy-to-use SW Maps ](https://play.google.com/store/apps/details?id=np.com.softwel.swmaps)* by Softwel. You\u2019ll need an Android phone or tablet with Bluetooth. What makes SW Maps truly powerful is its built-in NTRIP client. This is a fancy way of saying that we\u2019ll be showing you how to get RTCM correction data over the cellular network. Be sure your device is paired over Bluetooth . List of available Bluetooth devices From SW Map's main menu, select Bluetooth GNSS . This will display a list of available Bluetooth devices. Select the Rover or Base you just paired with. If you are taking height measurements (altitude) in addition to position (lat/long) be sure to enter the height of your antenna off the ground including any ARP offsets of your antenna (this should be printed on the side). Click on 'CONNECT' to open a Bluetooth connection. Assuming this process takes a few seconds, you should immediately have a location fix. SW Maps with RTK Fix You can open the GNSS Status sub-menu to view the current data. NTRIP Client If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part. We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. This is the amazing power of the SparkFun RTK products and SW Maps. Your phone can be the radio link! From the main SW Maps menu select NTRIP Client. Not there? Be sure the 'SparkFun RTK' instrument was automatically selected connecting. Disconnect and change the instrument to 'SparkFun RTK' to enable the NTRIP Connection option. NTRIP Connection - Not there? Be sure to select 'SparkFun RTK' was selected as the instrument Connecting to an NTRIP Caster Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK Express. Within a few seconds, the RTK Express will go from ~300mm accuracy to 14mm. Pretty nifty, no? What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express. Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base . If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster. Once you have a full RTK fix you'll notice the location bubble in SW Maps turns green. Just for fun, rock your rover monopole back and forth on a fixed point. You'll see your location accurately reflected in SW Maps. Millimeter location precision is a truly staggering thing.","title":"SW Maps"},{"location":"gis_software/#field-genius","text":"Field Genius for Android is another good solution, albeit a lot more expensive than free. Be sure your device is paired over Bluetooth . From the Main Menu open Select Instrument . Click the 'Add Profile' button. Click GNSS Rover and select NMEA as the Make. Set your Profile Name to something memorable like 'RTK-Express' then click the 'Create' button. Click on 'SET UP COMMUNICATION'. From the Bluetooth communication page, click the 'Search' button. You will be shown a list of paired devices. Select the RTK device you'd like to connect to then click 'Connect'. The RTK device will connect and the MAC address shown on the RTK device OLED will change to the Bluetooth icon indicating a link is open. NTRIP Client If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part. We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. Your phone can be the radio link! Click on 'SET UP CORRECTIONS'. Click on 'RTK via Internet' then 'SET UP INTERNET', then 'Done'. Click on 'SET UP DATA SOURCE'. Click 'Add New Source'. Enter your NTRIP Caster credentials and click 'DONE'. What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express. Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base . If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster. Click 'My NTRIP1' then 'Done' and 'Connect'. You will then be presented with a list of Mount Points. Select the mount point you'd like to use then click 'Select' then 'Confirm'. Select 'Done' then from the main menu select 'Survey' to begin using the device. Now you can begin using the SparkFun RTK device with Field Genius.","title":"Field Genius"},{"location":"gis_software/#survpc","text":"Note: The company behind SurvPC, Carlson Software, is not always welcoming to competitors of their $18,000 devices, so be warned. Be sure your device is paired over Bluetooth . Equip Sub Menu Select the Equip sub menu then GPS Rover Select NMEA GPS Receiver From the drop down, select NMEA GPS Receiver . Select Model: DGPS Select DGPS if you'd like to connect to an NTRIP Caster. If you are using the RTK Facet L-Band, or do not need RTK fix type precision, leave the model as Generic. Bluetooth Settings Button From the Comms submenu, click the Blueooth settings button. SurvPC Bluetooth Devices Click Find Device . List of Paired Bluetooth Devices You will be shown a list of devices that have been paired. Select the RTK device you want to connect to. Connect to Device Click the Connect Bluetooth button, shown in red in the top right corner. The software will begin a connection to the RTK device. You'll see the MAC address on the RTK device changes to the Bluetooth icon indicating it's connected. If SurvPC detects NMEA, it will report a successful connection. Receiver Submenu You are welcome to enter the ARP (antenna reference point) and surveying stick length for your particular setup. NTRIP Client Note: If you are using a radio to connect Base to Rover, or if you are using the RTK Facet L-Band you do not need to set up NTRIP; the device will achieve RTK fixes and output extremely accurate location data by itself. But if L-Band corrections are not available, or you are not using a radio link, the NTRIP Client can provide corrections to this Rover. RTK Submenu If you selected 'DGPS' as the Model type, the RTK submenu will be shown. This is where you give the details about your NTRIP Caster such as your mount point, user name/pw, etc. For more information about creating your own NTRIP mount point please see Creating a Permanent Base Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK Express. Within a few seconds, the RTK Express will go from ~300mm accuracy to 14mm. Pretty nifty, no? What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express. Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base . If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster. Once everything is connected up, click the Green check in the top right corner. Storing Points Now that we have a connection, you can use the device, as usual, storing points and calculating distances. SurvPC Skyplot Opening the Skyplot will allow you to see your GNSS details in real-time. If you are a big fan of SurvPC please contact your sales rep and ask them to include SparkFun products in their Manufacturer drop-down list.","title":"SurvPC"},{"location":"gis_software/#survey-master","text":"Survey Master by ComNam / SinoGNSS is an Android-based option. The download location can vary so google 'Survey Master ComNav Download' if the link above fails. Download the zip file, send the APK file to a phone and install the program. By default, a wizard will guide you through the setup. The Project step will ask you for the name of the project, the datum, etc. Next select your connection. For the Device Model select 'NMEA Device'. If you are just getting started, use one of the default antenna types. If you are attempting to get sub-centimeter accuracy, enter the parameters of your antenna and add it. Above are the NGS-certified parameters for the TOP106 antenna . Click the 'Target Device' option to get a list of available Bluetooth devices. Make sure your RTK product is on and you should see the device. In this example 'Express Rover-B022' was chosen. To finish, click 'Connect'. You should see the Bluetooth MAC address on your RTK product change to the Bluetooth icon indicating a connection is established. Next is configuring the 'Work mode' of the device. The step is where we set up our NTRIP correction source. Click 'Add' to create a new work mode. Shown above, we configure the NTRIP Client. Survey Master calls this the 'SinoGNSS' Protocol. Click on the three bars to the right of 'Server' to enter a new NTRIP connection. Here you can add different NTRIP Caster providers. If you're using RTK2Go be sure to enter your contact email into the user name. Return to the 'Datalink type' window and select the Server you just entered. Re-enter the server address and port for your NTRIP Caster. Once complete, click on the down-pointing arrow. This will ping the Caster and obtain the mount point table. Select your mount point. Select the newly created work mode and press the 'Apply' button. Survey Master will attempt to connect to your specified RTK corrections source (NTRIP Caster). Upon success, you will be located on the Project menu. Survey Master expects many more NMEA sentences than most GIS software. We must enable some additional messages on the RTK device to correctly communicate with Survey Master. Note above: There are 9 enabled messages and GSV is set to '1'. Connect to the RTK device either over WiFi AP config or via Serial . Above is shown the serial method. Open a terminal at 115200bps and press a key to open the serial configuration menu. Press '2' for GNSS Messages, press '1' for NMEA messages, now be sure to enable 9 messages to a rate of 1: GGA GLL GRS GSA GST GSV RMC VTG ZDA Once complete, press x until you exit the serial menus. Now we may return to Survey Master. Click on the 'Survey' menu and then 'Topo Survey'. Above we can see a device with RTK float, and 117mm horizontal positional accuracy. Known Issues: Survey Master parses the GxGSV sentence improperly and will only indicate GPS satellites even though the fix solution is using all satellites. To verify the NMEA sentences are being delivered correctly, Survey Master has a built-in tool. Select the Device->Rover->More->'H-Terminal'.","title":"Survey Master"},{"location":"gis_software/#other","text":"Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.","title":"Other"},{"location":"hardware_rtk_express/","text":"RTK Express The RTK Express is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics. Buttons The RTK Express uses two buttons, Power and Setup for in-field configuration. Setup This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At power on the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the SETUP button is pressed the RTK Express will toggle between Rover and Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Express will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Express will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Express will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Express setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Express will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Express will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Express (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup. Power RTK Express startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Express showing the battery level The RTK Express has a built-in 1300mAh lithium polymer battery that will enable over 5 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours. Charge LED The Charge LED is located above the Power button. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 1.5 hours from a 1A wall supply or 3 hours from a standard USB port. The RTK Express can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported. Connectors The SparkFun RTK Express has a variety of connectors Antenna: This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Express. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Express (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna . Configure u-blox: This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Configure ESP32: This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Radio: This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured ( pin labels are shown on the board itself ). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Express then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source. Data: This 4-pin JST connector is used to output and input a variety of data to the RTK Express. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured ( pin labels are shown on the board itself ), which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. microSD: This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: NMEA-DTM NMEA-GBS NMEA-GGA NMEA-GLL NMEA-GNS NMEA-GRS NMEA-GSA NMEA-GST NMEA-GSV NMEA-RMC NMEA-VLW NMEA-VTG NMEA-ZDA NAV-CLOCK NAV-DOP NAV-EOE NAV-GEOFENCE NAV-HPPOSECEF NAV-HPPOSLLH NAV-ODO NAV-ORB NAV-POSECEF NAV-POSLLH NAV-PVT NAV-RELPOSNED NAV-SAT NAV-SIG NAV-STATUS NAV-SVIN NAV-TIMEBDS NAV-TIMEGAL NAV-TIMEGLO NAV-TIMEGPS NAV-TIMELS NAV-TIMEUTC NAV-VELECEF NAV-VELNED RXM-MEASX RXM-RAWX RXM-RLM RXM-RTCM RXM-SFRBX MON-COMMS MON-HW2 MON-HW3 MON-HW MON-IO MON-MSGPP MON-RF MON-RXBUF MON-RXR MON-TXBUF TIM-TM2 TIM-TP TIM-VRFY RTCM3x-1005 RTCM3x-1074 RTCM3x-1077 RTCM3x-1084 RTCM3x-1087 RTCM3x-1094 RTCM3x-1097 RTCM3x-1124 RTCM3x-1127 RTCM3x-1230 RTCM3x-4072-0 RTCM3x-4072-1 Qwiic: This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Express but support may be added in the future. Power The RTK Express has a built in 1300mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for around 5.5 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Express. The RTK Express can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain RTK Express Display showing three battery bars Advanced Features The RTK Express is a hacker\u2019s delight. Under the hood of the RTK Express is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. -> Click on the image to get a closer look at the Schematic! <- ZED-F9P GNSS Receiver The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD. ESP32 The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Measurement Jumpers To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM. These can then be closed with a 2-pin jumper . LiPo and Charging The RTK Express houses a standard 1300mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over one hour. USB C on the RTK Express is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions. Fuel Gauge and Accelerometer The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Express also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field. Qwiic Two Qwiic connectors are included in the unit. The internal Qwiic connector connects to the OLED display attached to the upper lid. The lower Qwiic connector is exposed on the end of the unit. These allow connection to the I 2 C bus on the ESP32. Currently the stock RTK Express does not support any additional Qwiic sensors or display but users may add support for their own application. microSD A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Express supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial . Data Port and Digital Mux The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"RTK Express"},{"location":"hardware_rtk_express/#rtk-express","text":"The RTK Express is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics.","title":"RTK Express"},{"location":"hardware_rtk_express/#buttons","text":"The RTK Express uses two buttons, Power and Setup for in-field configuration.","title":"Buttons"},{"location":"hardware_rtk_express/#setup","text":"This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At power on the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the SETUP button is pressed the RTK Express will toggle between Rover and Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Express will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Express will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Express will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Express setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Express will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Express will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Express (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup.","title":"Setup"},{"location":"hardware_rtk_express/#power","text":"RTK Express startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Express showing the battery level The RTK Express has a built-in 1300mAh lithium polymer battery that will enable over 5 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours.","title":"Power"},{"location":"hardware_rtk_express/#charge-led","text":"The Charge LED is located above the Power button. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 1.5 hours from a 1A wall supply or 3 hours from a standard USB port. The RTK Express can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported.","title":"Charge LED"},{"location":"hardware_rtk_express/#connectors","text":"The SparkFun RTK Express has a variety of connectors","title":"Connectors"},{"location":"hardware_rtk_express/#antenna","text":"This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Express. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Express (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna .","title":"Antenna:"},{"location":"hardware_rtk_express/#configure-u-blox","text":"This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"Configure u-blox:"},{"location":"hardware_rtk_express/#configure-esp32","text":"This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings.","title":"Configure ESP32:"},{"location":"hardware_rtk_express/#radio","text":"This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured ( pin labels are shown on the board itself ). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Express then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source.","title":"Radio:"},{"location":"hardware_rtk_express/#data","text":"This 4-pin JST connector is used to output and input a variety of data to the RTK Express. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured ( pin labels are shown on the board itself ), which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data:"},{"location":"hardware_rtk_express/#microsd","text":"This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: NMEA-DTM NMEA-GBS NMEA-GGA NMEA-GLL NMEA-GNS NMEA-GRS NMEA-GSA NMEA-GST NMEA-GSV NMEA-RMC NMEA-VLW NMEA-VTG NMEA-ZDA NAV-CLOCK NAV-DOP NAV-EOE NAV-GEOFENCE NAV-HPPOSECEF NAV-HPPOSLLH NAV-ODO NAV-ORB NAV-POSECEF NAV-POSLLH NAV-PVT NAV-RELPOSNED NAV-SAT NAV-SIG NAV-STATUS NAV-SVIN NAV-TIMEBDS NAV-TIMEGAL NAV-TIMEGLO NAV-TIMEGPS NAV-TIMELS NAV-TIMEUTC NAV-VELECEF NAV-VELNED RXM-MEASX RXM-RAWX RXM-RLM RXM-RTCM RXM-SFRBX MON-COMMS MON-HW2 MON-HW3 MON-HW MON-IO MON-MSGPP MON-RF MON-RXBUF MON-RXR MON-TXBUF TIM-TM2 TIM-TP TIM-VRFY RTCM3x-1005 RTCM3x-1074 RTCM3x-1077 RTCM3x-1084 RTCM3x-1087 RTCM3x-1094 RTCM3x-1097 RTCM3x-1124 RTCM3x-1127 RTCM3x-1230 RTCM3x-4072-0 RTCM3x-4072-1","title":"microSD:"},{"location":"hardware_rtk_express/#qwiic","text":"This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Express but support may be added in the future.","title":"Qwiic:"},{"location":"hardware_rtk_express/#power_1","text":"The RTK Express has a built in 1300mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for around 5.5 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Express. The RTK Express can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain RTK Express Display showing three battery bars","title":"Power"},{"location":"hardware_rtk_express/#advanced-features","text":"The RTK Express is a hacker\u2019s delight. Under the hood of the RTK Express is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. -> Click on the image to get a closer look at the Schematic! <-","title":"Advanced Features"},{"location":"hardware_rtk_express/#zed-f9p-gnss-receiver","text":"The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD.","title":"ZED-F9P GNSS Receiver"},{"location":"hardware_rtk_express/#esp32","text":"The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.","title":"ESP32"},{"location":"hardware_rtk_express/#measurement-jumpers","text":"To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM. These can then be closed with a 2-pin jumper .","title":"Measurement Jumpers"},{"location":"hardware_rtk_express/#lipo-and-charging","text":"The RTK Express houses a standard 1300mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over one hour. USB C on the RTK Express is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions.","title":"LiPo and Charging"},{"location":"hardware_rtk_express/#fuel-gauge-and-accelerometer","text":"The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Express also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field.","title":"Fuel Gauge and Accelerometer"},{"location":"hardware_rtk_express/#qwiic_1","text":"Two Qwiic connectors are included in the unit. The internal Qwiic connector connects to the OLED display attached to the upper lid. The lower Qwiic connector is exposed on the end of the unit. These allow connection to the I 2 C bus on the ESP32. Currently the stock RTK Express does not support any additional Qwiic sensors or display but users may add support for their own application.","title":"Qwiic"},{"location":"hardware_rtk_express/#microsd_1","text":"A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Express supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"microSD"},{"location":"hardware_rtk_express/#data-port-and-digital-mux","text":"The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"Data Port and Digital Mux"},{"location":"hardware_rtk_express_plus/","text":"RTK Express Plus","title":"RTK Express Plus"},{"location":"hardware_rtk_express_plus/#rtk-express-plus","text":"","title":"RTK Express Plus"},{"location":"hardware_rtk_facet/","text":"Facet Hardware Hardware Overview The RTK Facet is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics. Power/Setup Button The RTK Facet has one button used for both Power and Setup for in-field configuration changes. Pressing and holding the Power button will cause it to power on or off. Short pressing the button will cause the RTK Facet to change modes. This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At Power On the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the POWER/SETUP button is pressed momentarily, a menu is presented to change the RTK Facet to Rover or Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Facet will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Facet will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent over Bluetooth or into the radio port, the device will automatically enter Positioning with RTK mode. In this mode RTK Facet will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a second) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data is most easily obtained over the internet using a free app on your phone (see SW Maps or Lefebure NTRIP) and sent over Bluetooth to the RTK Facet but RTCM can also be delivered over an external cellular or radio link to a 2nd RTK Facet setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Facet will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Facet will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Facet (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup. Power RTK Facet startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Facet showing the battery level The RTK Facet has a large, built-in 6000mAh lithium polymer battery that will enable over 25 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to any amount needed. Charge LED The Charge LED is located on the front face. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 6 hours from a 1A wall supply or 12 hours from a standard USB port. The RTK Facet can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported. Connectors The SparkFun RTK Facet connectors shown with the dust cover removed There are a variety of connectors protected by a dust flap. USB: This USB C connector is used for three purposes: Charging the device Configuring the RTK Facet, and reprogramming the ESP32 Directly configuring and inspecting the ZED-F9P GNSS receiver There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate as two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK Facet can be done over the USB-Serial CH340 COM port via serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P can be configured over the USB Serial Device port using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Radio: This port is used when an external cellular or radio link is needed. This port is not used if you transfer RTCM from your phone to the RTK Facet over Bluetooth. This 4-pin JST connector can be used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured. 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Facet then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). This port is capable of sourcing up to 600mA and is protected by a PTC (resettable fuse). This port should not be connected to a power source. Data: This port is used when an external system is connected such as a rover, car, timing equipment, camera triggers, etc. This port is not used if you transfer NMEA positional data to your phone from the RTK Facet over Bluetooth. This 4-pin JST connector is used to output and input a variety of data to the RTK Facet. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured, which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. microSD: This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RMC \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NAV-CLOCK \u2022 NAV-DOP \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SIG \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-TXBUF \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1 Qwiic: This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I 2 C devices to the RTK Facet but support may be added in the future. Antenna: It's built in! Housed under the dome of the RTK Facet is a surveyor grade L1/L2 antenna. It is the same element found within our GNSS Multi-Band L1/L2 Surveying Antenna . Its datasheet is available here . SparkFun RTK Facet Antenna Reference Points The built in antenna has an ARP of 61.4mm from the base to the measuring point of the L1 antenna and an ARP of 57.4mm to the measuring point of the L2 antenna. Power RTK Facet Display showing three battery bars The RTK Facet has a built in 6000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active and GNSS fully tracking. This will allow for around 25 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 56 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Facet. The RTK Facet can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain Advanced Features The boards that make up the RTK Facet The RTK Facet is a hacker\u2019s delight. Under the hood of the RTK Facet is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic! The Facet with three sub boards, the battery, and antenna ZED-F9P GNSS Receiver The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD. ESP32 The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. LiPo and Charging The RTK Facet houses a standard 6000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over six hours. USB C on the RTK Facet is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions. Fuel Gauge and Accelerometer The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Facet also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field. Qwiic An internal Qwiic connector is included in the unit for future expansion. Currently the stock RTK Facet does not support any additional Qwiic sensors or display but users may add support for their own application. microSD A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Facet supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 24 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial . Data Port and Digital Mux The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"Facet Hardware"},{"location":"hardware_rtk_facet/#facet-hardware","text":"","title":"Facet Hardware"},{"location":"hardware_rtk_facet/#hardware-overview","text":"The RTK Facet is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics.","title":"Hardware Overview"},{"location":"hardware_rtk_facet/#powersetup-button","text":"The RTK Facet has one button used for both Power and Setup for in-field configuration changes. Pressing and holding the Power button will cause it to power on or off. Short pressing the button will cause the RTK Facet to change modes. This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At Power On the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the POWER/SETUP button is pressed momentarily, a menu is presented to change the RTK Facet to Rover or Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Facet will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Facet will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent over Bluetooth or into the radio port, the device will automatically enter Positioning with RTK mode. In this mode RTK Facet will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a second) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data is most easily obtained over the internet using a free app on your phone (see SW Maps or Lefebure NTRIP) and sent over Bluetooth to the RTK Facet but RTCM can also be delivered over an external cellular or radio link to a 2nd RTK Facet setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Facet will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Facet will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Facet (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup.","title":"Power/Setup Button"},{"location":"hardware_rtk_facet/#power","text":"RTK Facet startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Facet showing the battery level The RTK Facet has a large, built-in 6000mAh lithium polymer battery that will enable over 25 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to any amount needed.","title":"Power"},{"location":"hardware_rtk_facet/#charge-led","text":"The Charge LED is located on the front face. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 6 hours from a 1A wall supply or 12 hours from a standard USB port. The RTK Facet can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported.","title":"Charge LED"},{"location":"hardware_rtk_facet/#connectors","text":"The SparkFun RTK Facet connectors shown with the dust cover removed There are a variety of connectors protected by a dust flap.","title":"Connectors"},{"location":"hardware_rtk_facet/#usb","text":"This USB C connector is used for three purposes: Charging the device Configuring the RTK Facet, and reprogramming the ESP32 Directly configuring and inspecting the ZED-F9P GNSS receiver There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate as two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK Facet can be done over the USB-Serial CH340 COM port via serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P can be configured over the USB Serial Device port using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"USB:"},{"location":"hardware_rtk_facet/#radio","text":"This port is used when an external cellular or radio link is needed. This port is not used if you transfer RTCM from your phone to the RTK Facet over Bluetooth. This 4-pin JST connector can be used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured. 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Facet then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). This port is capable of sourcing up to 600mA and is protected by a PTC (resettable fuse). This port should not be connected to a power source.","title":"Radio:"},{"location":"hardware_rtk_facet/#data","text":"This port is used when an external system is connected such as a rover, car, timing equipment, camera triggers, etc. This port is not used if you transfer NMEA positional data to your phone from the RTK Facet over Bluetooth. This 4-pin JST connector is used to output and input a variety of data to the RTK Facet. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured, which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data:"},{"location":"hardware_rtk_facet/#microsd","text":"This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RMC \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NAV-CLOCK \u2022 NAV-DOP \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SIG \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-TXBUF \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1","title":"microSD:"},{"location":"hardware_rtk_facet/#qwiic","text":"This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I 2 C devices to the RTK Facet but support may be added in the future.","title":"Qwiic:"},{"location":"hardware_rtk_facet/#antenna","text":"It's built in! Housed under the dome of the RTK Facet is a surveyor grade L1/L2 antenna. It is the same element found within our GNSS Multi-Band L1/L2 Surveying Antenna . Its datasheet is available here . SparkFun RTK Facet Antenna Reference Points The built in antenna has an ARP of 61.4mm from the base to the measuring point of the L1 antenna and an ARP of 57.4mm to the measuring point of the L2 antenna.","title":"Antenna:"},{"location":"hardware_rtk_facet/#power_1","text":"RTK Facet Display showing three battery bars The RTK Facet has a built in 6000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active and GNSS fully tracking. This will allow for around 25 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 56 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Facet. The RTK Facet can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain","title":"Power"},{"location":"hardware_rtk_facet/#advanced-features","text":"The boards that make up the RTK Facet The RTK Facet is a hacker\u2019s delight. Under the hood of the RTK Facet is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic! The Facet with three sub boards, the battery, and antenna","title":"Advanced Features"},{"location":"hardware_rtk_facet/#zed-f9p-gnss-receiver","text":"The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD.","title":"ZED-F9P GNSS Receiver"},{"location":"hardware_rtk_facet/#esp32","text":"The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.","title":"ESP32"},{"location":"hardware_rtk_facet/#lipo-and-charging","text":"The RTK Facet houses a standard 6000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over six hours. USB C on the RTK Facet is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions.","title":"LiPo and Charging"},{"location":"hardware_rtk_facet/#fuel-gauge-and-accelerometer","text":"The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Facet also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field.","title":"Fuel Gauge and Accelerometer"},{"location":"hardware_rtk_facet/#qwiic_1","text":"An internal Qwiic connector is included in the unit for future expansion. Currently the stock RTK Facet does not support any additional Qwiic sensors or display but users may add support for their own application.","title":"Qwiic"},{"location":"hardware_rtk_facet/#microsd_1","text":"A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Facet supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 24 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"microSD"},{"location":"hardware_rtk_facet/#data-port-and-digital-mux","text":"The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"Data Port and Digital Mux"},{"location":"hardware_rtk_surveyor/","text":"RTK Surveyor The RTK Surveyor is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics. Switches Setup This device can be used in three modes: GNSS Positioning (~30cm accuracy) GNSS Positioning with RTK (1.4cm accuracy) GNSS Base Station When the SETUP switch is set to Rover the device will enter Position mode. RTK Surveyor will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Surveyor will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device at 115200bps. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the SETUP switch is set to Rover and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Surveyor will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Surveyor setup as a base station. When the SETUP switch is set to Base the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Surveyor will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Surveyor will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second unit set to 'Rover' to obtain the 14mm accuracy. Said differently, if you\u2019ve got a radio attached to the base and the rover, you\u2019ll create an RTK system without any other setup and the Rover will output super accurate readings. Power The Power switch is self explanatory. When turned on the LED will turn Green, Yellow, or Red indicating battery level. The RTK Surveyor has a built-in 1000mAh lithium polymer battery that will enable up to 4 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours. LEDs There are a variety of LEDs: Power - Blue when attached to power and charging / off when fully charged. Green/Yellow/Red when the Power switch is turned on indicating the state of charge of the internal battery. RTK - This white LED will be off when no RTCM correction data is received. Blinking indicates RTK Float is achieved. Solid when RTK Fix is achieved. PPS - Pulse per second. This yellow LED will blink at 1Hz when GNSS fix is achieved. You\u2019ll see this LED begin blinking anytime the receiver detects enough satellites to obtain a rough location. PAIR - Blinks blue when waiting to be paired with over Bluetooth. Solid when a connection is active. Horizontal Accuracy 100cm/10cm/1cm - These green LEDs illuminate as the horizontal positional accuracy increases. 100cm will often be achieved in normal positioning mode with a good L1/L2 antenna. 10cm will often be achieved as the first few seconds of RTCM correction data is received, and 1cm will be achieved when a full RTK fix is calculated. BASE - This LED will blink red when the SETUP switch is set to Base and a survey is being conducted. It will turn solid red once the survey is complete and the unit begins broadcasting RTCM correction data. Connectors The SparkFun RTK Surveyor has a variety of connectors Antenna This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Surveyor. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Surveyor (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna . Configure u-blox This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. USB Configure ESP32 This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Radio This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Surveyor then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source. Data This 4-pin JST connector is used to output NMEA sentences over 115200bps serial. Most applications will send the NMEA position data over Bluetooth. Alternatively, this port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. microSD This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging NMEA and RAWX data at up to 4Hz is supported for all constellations. Qwiic This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Surveyor but support may be added in the future. Power The RTK Surveyor has a built in 1000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for 4 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Surveyor. The RTK Surveyor can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. A green LED indicates > 50% charge remaining. A yellow LED indicates > 10% charge remaining. A red LED indicates less than 10% charge remaining. Advanced Features The RTK Surveyor is a hacker\u2019s delight. Under the hood of the RTK Surveyor is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic ZED-F9P GNSS Receiver The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). Two internal slide switches control the flow of NMEA and RTCM traffic between the external connectors and the internal BT UART used on the ESP32. Ostensibly the Bluetooth Broadcast switch can be set to pipe RTCM data to the ESP32\u2019s UART (instead of NMEA) so that correction data can be transmitted over Bluetooth. Point to point Bluetooth radio support is not supported because the useful range of Bluetooth is too short for most RTK applications but may be helpful in some advanced applications. ESP32 The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Measurement Jumpers To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM. LiPo and Charging The RTK Surveyor houses a standard 1000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take roughly one hour. USB C on the RTK Surveyor is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. MAX17048 Fuel Gauge The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to control the color of the power LED. Qwiic A Qwiic connector is exposed on the end of the unit. This allows connection to the I 2 C bus on the ESP32. Currently the stock RTK Surveyor does not support any additional Qwiic sensors or display but users may add support for their own application. microSD A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Surveyor supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"RTK Surveyor"},{"location":"hardware_rtk_surveyor/#rtk-surveyor","text":"The RTK Surveyor is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics.","title":"RTK Surveyor"},{"location":"hardware_rtk_surveyor/#switches","text":"","title":"Switches"},{"location":"hardware_rtk_surveyor/#setup","text":"This device can be used in three modes: GNSS Positioning (~30cm accuracy) GNSS Positioning with RTK (1.4cm accuracy) GNSS Base Station When the SETUP switch is set to Rover the device will enter Position mode. RTK Surveyor will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Surveyor will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device at 115200bps. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the SETUP switch is set to Rover and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Surveyor will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Surveyor setup as a base station. When the SETUP switch is set to Base the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Surveyor will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Surveyor will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second unit set to 'Rover' to obtain the 14mm accuracy. Said differently, if you\u2019ve got a radio attached to the base and the rover, you\u2019ll create an RTK system without any other setup and the Rover will output super accurate readings.","title":"Setup"},{"location":"hardware_rtk_surveyor/#power","text":"The Power switch is self explanatory. When turned on the LED will turn Green, Yellow, or Red indicating battery level. The RTK Surveyor has a built-in 1000mAh lithium polymer battery that will enable up to 4 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours.","title":"Power"},{"location":"hardware_rtk_surveyor/#leds","text":"There are a variety of LEDs: Power - Blue when attached to power and charging / off when fully charged. Green/Yellow/Red when the Power switch is turned on indicating the state of charge of the internal battery. RTK - This white LED will be off when no RTCM correction data is received. Blinking indicates RTK Float is achieved. Solid when RTK Fix is achieved. PPS - Pulse per second. This yellow LED will blink at 1Hz when GNSS fix is achieved. You\u2019ll see this LED begin blinking anytime the receiver detects enough satellites to obtain a rough location. PAIR - Blinks blue when waiting to be paired with over Bluetooth. Solid when a connection is active. Horizontal Accuracy 100cm/10cm/1cm - These green LEDs illuminate as the horizontal positional accuracy increases. 100cm will often be achieved in normal positioning mode with a good L1/L2 antenna. 10cm will often be achieved as the first few seconds of RTCM correction data is received, and 1cm will be achieved when a full RTK fix is calculated. BASE - This LED will blink red when the SETUP switch is set to Base and a survey is being conducted. It will turn solid red once the survey is complete and the unit begins broadcasting RTCM correction data.","title":"LEDs"},{"location":"hardware_rtk_surveyor/#connectors","text":"The SparkFun RTK Surveyor has a variety of connectors","title":"Connectors"},{"location":"hardware_rtk_surveyor/#antenna","text":"This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Surveyor. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Surveyor (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna .","title":"Antenna"},{"location":"hardware_rtk_surveyor/#configure-u-blox","text":"This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"Configure u-blox"},{"location":"hardware_rtk_surveyor/#usb-configure-esp32","text":"This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings.","title":"USB Configure ESP32"},{"location":"hardware_rtk_surveyor/#radio","text":"This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Surveyor then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source.","title":"Radio"},{"location":"hardware_rtk_surveyor/#data","text":"This 4-pin JST connector is used to output NMEA sentences over 115200bps serial. Most applications will send the NMEA position data over Bluetooth. Alternatively, this port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data"},{"location":"hardware_rtk_surveyor/#microsd","text":"This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging NMEA and RAWX data at up to 4Hz is supported for all constellations.","title":"microSD"},{"location":"hardware_rtk_surveyor/#qwiic","text":"This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Surveyor but support may be added in the future.","title":"Qwiic"},{"location":"hardware_rtk_surveyor/#power_1","text":"The RTK Surveyor has a built in 1000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for 4 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Surveyor. The RTK Surveyor can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. A green LED indicates > 50% charge remaining. A yellow LED indicates > 10% charge remaining. A red LED indicates less than 10% charge remaining.","title":"Power"},{"location":"hardware_rtk_surveyor/#advanced-features","text":"The RTK Surveyor is a hacker\u2019s delight. Under the hood of the RTK Surveyor is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic","title":"Advanced Features"},{"location":"hardware_rtk_surveyor/#zed-f9p-gnss-receiver","text":"The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). Two internal slide switches control the flow of NMEA and RTCM traffic between the external connectors and the internal BT UART used on the ESP32. Ostensibly the Bluetooth Broadcast switch can be set to pipe RTCM data to the ESP32\u2019s UART (instead of NMEA) so that correction data can be transmitted over Bluetooth. Point to point Bluetooth radio support is not supported because the useful range of Bluetooth is too short for most RTK applications but may be helpful in some advanced applications.","title":"ZED-F9P GNSS Receiver"},{"location":"hardware_rtk_surveyor/#esp32","text":"The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.","title":"ESP32"},{"location":"hardware_rtk_surveyor/#measurement-jumpers","text":"To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM.","title":"Measurement Jumpers"},{"location":"hardware_rtk_surveyor/#lipo-and-charging","text":"The RTK Surveyor houses a standard 1000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take roughly one hour. USB C on the RTK Surveyor is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA.","title":"LiPo and Charging"},{"location":"hardware_rtk_surveyor/#max17048-fuel-gauge","text":"The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to control the color of the power LED.","title":"MAX17048 Fuel Gauge"},{"location":"hardware_rtk_surveyor/#qwiic_1","text":"A Qwiic connector is exposed on the end of the unit. This allows connection to the I 2 C bus on the ESP32. Currently the stock RTK Surveyor does not support any additional Qwiic sensors or display but users may add support for their own application.","title":"Qwiic"},{"location":"hardware_rtk_surveyor/#microsd_1","text":"A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Surveyor supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"microSD"},{"location":"intro/","text":"Introduction Out of the box, the SparkFun RTK products are exceptional GNSS receivers out-of-box and can be used with little or no configuration. This RTK Product Manual provides detailed descriptions of all the available features of the RTK products. The line of RTK products offered by SparkFun all run identical firmware. The RTK firmware and this guide cover the following products: SparkFun RTK Facet L-Band (GPS-20000) SparkFun RTK Facet (GPS-19029) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Express (GPS-18442) SparkFun RTK Surveyor (GPS-18443) Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hookup Guide Hookup Guide Hookup Guide Hookup Guide Hookup Guide Depending on the hardware platform different features may or may not be supported. We will denote each product in each section so that you know what is supported. Configuring the RTK device may be done using WiFi , serial or modifying a setup file . If you have an issue, feature request, bug report, or a general question about the RTK firmware specifically we encourage you to post your comments on the firmware's repository . If you feel like bragging or showing off what you did with your RTK product, we'd be thrilled to hear about it on the issues list as well! Things like how to attach an antenna or other hardware-specific topics are best read on the Hookup Guides for the individual products.","title":"Introduction"},{"location":"intro/#introduction","text":"Out of the box, the SparkFun RTK products are exceptional GNSS receivers out-of-box and can be used with little or no configuration. This RTK Product Manual provides detailed descriptions of all the available features of the RTK products. The line of RTK products offered by SparkFun all run identical firmware. The RTK firmware and this guide cover the following products: SparkFun RTK Facet L-Band (GPS-20000) SparkFun RTK Facet (GPS-19029) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Express (GPS-18442) SparkFun RTK Surveyor (GPS-18443) Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hardware Overview Hookup Guide Hookup Guide Hookup Guide Hookup Guide Hookup Guide Depending on the hardware platform different features may or may not be supported. We will denote each product in each section so that you know what is supported. Configuring the RTK device may be done using WiFi , serial or modifying a setup file . If you have an issue, feature request, bug report, or a general question about the RTK firmware specifically we encourage you to post your comments on the firmware's repository . If you feel like bragging or showing off what you did with your RTK product, we'd be thrilled to hear about it on the issues list as well! Things like how to attach an antenna or other hardware-specific topics are best read on the Hookup Guides for the individual products.","title":"Introduction"},{"location":"menu_system_status/","text":"System Status Menu Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Showing various attributes of the system The System Status menu will show a large number of system parameters including a full system check to verify what is and what is not online. For example, if an SD card is detected it will be shown as online. Not all systems have all hardware. For example, the RTK Surveyor does not have an accelerometer so it will always be shown offline. This menu is helpful when reporting technical issues or requesting support as it displays helpful information about the current ZED-F9x firmware version, and which parts of the unit are online. Pressing 'r' will allow a user to reset all settings to default including a factory reset of the ZED-F9x receiver. This can be helpful if the unit has been configured into an unknown or problematic state. Pressing 'd' will enter a debug menu that is for advanced users.","title":"System Status Menu"},{"location":"menu_system_status/#system-status-menu","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Showing various attributes of the system The System Status menu will show a large number of system parameters including a full system check to verify what is and what is not online. For example, if an SD card is detected it will be shown as online. Not all systems have all hardware. For example, the RTK Surveyor does not have an accelerometer so it will always be shown offline. This menu is helpful when reporting technical issues or requesting support as it displays helpful information about the current ZED-F9x firmware version, and which parts of the unit are online. Pressing 'r' will allow a user to reset all settings to default including a factory reset of the ZED-F9x receiver. This can be helpful if the unit has been configured into an unknown or problematic state. Pressing 'd' will enter a debug menu that is for advanced users.","title":"System Status Menu"},{"location":"permanent_base/","text":"Creating a Permanent Base Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: This section goes into depth on how to gather the data using an RTK product to create a permanent fixed base. Note: The RTK Facet and RTK Facet L-Band are rated IP53 - Protected from limited dust ingress and water spray. As such it is not recommended for permanent outdoor deployment. Use the RTK Surveyor or Express with a fully sealed TOP106 antenna . Note: The RTK Express Plus does not support Base mode. Temporary vs. Fixed Base There are two types of bases: Surveyed and Fixed . A surveyed base is often a temporary base set up in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. In a separate tutorial, we described how to create a temporary base station with the 1 to 10-minute survey-in method. The temporary base method is flexible, but it is not as accurate and can vary dramatically in the time required. The ZED-F9P has a much faster way to provide base corrections: if you know the location of your antenna, you can set the coordinates of the receiver and it will immediately start providing RTCM corrections. The problem is \u2018what is the location of the antenna?\u2019. It\u2019s as if you need a soldering iron to assemble your soldering iron kit . Where do we start? Why don\u2019t I just survey-in my fixed antenna to get its location? While a survey-in is easy to set up and fine for an in-the-field way to establish the location of a base, it\u2019s not recommended for getting the fixed location of a static base station as it is less accurate. Instead, PPP or Precise Point Positioning is far more accurate and is recommended for obtaining your antenna\u2019s position. It\u2019s a similar process but involves bouncing frick\u2019n lasers off of satellites! A major problem is that the predicted orbits are often off by one meter or more. Ground stations bounce lasers off the individual satellites as they pass overhead and use this new data to compute the actual orbits of the satellites. Using this new ephemeris data, when it becomes available, combined with the receiver\u2019s raw data, better fixes can be computed. This is the basis of PPP. From Gary Miller\u2019s PPP HOWTO L1/L2 antenna semi-fixed to a flat roof The PPP process works like this: Install an antenna in a fixed location Gather 24 hours' worth of raw GNSS data from that antenna Pass the raw data to a processing center for PPP Obtain a highly accurate position of the antenna we use to set a \u2018Fixed Mode\u2019 on a receiver There are some great articles written about PPP. We\u2019ll scrape the surface but for more information check out: Gary Miller\u2019s great PPP HOWTO Emlid\u2019s PPP Suelynn Choy, GNSS PPP Affix Your Antenna You don\u2019t want your antenna moving once you\u2019ve determined its position. Consider investing in a premium antenna but we\u2019ve used the classic u-blox L1/L2 antenna with good success. Mount the antenna to a proper ground plane on a fixed surface that has a very clear view of the sky. No nearby anything. The u-blox antenna attached to SparkFun\u2019s parapet We mounted the u-blox antenna to the ferrous flashing around the top of the SparkFun building. While not completely permanent, the magnets on the u-blox antenna are tested to survive automobile strength winds so it should be fine in the 100+ MPH winds experienced in the front range of Colorado. The u-blox ANN-MB-00 antenna has a 5m cable attached but this was not long enough to get from the SparkFun roof to the receiver so we attached a 10m SMA extension. It\u2019s true that most L1/L2 antennas have a built-in amplifier but every meter of extension and every connector will slightly degrade the GNSS signal. Limit the use of connector converters and use an extension as short as possible to get where you need. If you want to use a higher-grade antenna that doesn\u2019t have a magnetic base we\u2019ve come up with a great way to create a stable fix point without the need for poking holes in your roof! Yes, that\u2019s a cinder block. Don\u2019t laugh. It works! Most surveying grade antennas have a \u215d\u201d 11-TPI (threads per inch) thread on the bottom of the antenna. Luckily, \u215d\u201d 11-TPI is the thread found on wedge anchors in hardware stores in the US. Wedge anchors are designed to hold walls to foundations but luckily for us, we can use the same hardware to anchor an antenna. (We\u2019ve also heard of concrete anchors that use epoxy so be sure to shop around.) I needed to mount an antenna to my roof. Luckily, I had two, leftover cinder blocks from a weather station that, based on the Electric Imp , had long since been retired. Step one is drilling the \u215d\u201d hole into the cinder block. The masonry bit cost me $20 but cheaper, less fancy ones can be had for less than $10 . The blue tape shows me the depth I\u2019m trying to hit. The cinder block is 3.5\u201d thick so I settled on ~2.5\u201d deep. Once the hole is drilled, tip the block upside down to get most of the cement dust out. Then pound the anchor into place. Oops! Don\u2019t get greedy! I pounded the anchor so far that it split the block. Luckily, I had a second block! Once the anchor is ~2 inches into the hole tighten the bolt. This will draw the anchor back up compressing the collar into place. Note: I finger tightened the bolt and added a \u00bd turn with a wrench. If you really go after the bolt and tighten it too much you risk pushing the collar out further and breaking the cinder block in half (see Ooops! picture above). We are not anchoring a wall here, just a 400g antenna . I used a 2nd bolt, tightened against the antenna base, to lock it into place and prevent rotation in either direction. Astute readers will notice my TNC to SMA adapter in the picture above. It\u2019s the wrong gender. Originally, I used an SMA extension to connect my GPS-RTK-SMA to my u-blox L1/L2 antenna on my roof. The GPS-RTK-SMA expects a regular SMA connection so the end of the extension would not connect to this adapter. So before you get out the ladder, test connect everything! Luckily I have a set of adapters and found the right TNC to SMA converter to suit my needs. It\u2019s a bit of work getting 35lbs of concrete onto a roof but the view is pretty spectacular! I wrapped the SMA extension once around the base. In case anything pulls on the SMA cable the tension will be transferred to the bolt rather than the TNC connection to the antenna. Lightning Warning: My antenna profile is lower than the parapet so lightning strikes are unlikely. Your antenna may be the highest point around so consider lightning protection. Gather Raw GNSS Data Once you\u2019ve got the antenna into a location where it will not move or be moved we need to establish its location. Power on your RTK unit and verify that you can get a lock and see 25+ satellites. Assuming you\u2019ve got good reception, we now need to set the receiver to output raw data from the satellites. You will need a microSD card that is 1GB up to 32GB formatted for FAT16 or FAT32. The microSD slot on the bottom of the RTK Facet Enable RAWX and SFRBX Power on the unit and using the serial or WiFi method , connect to the device. Config via WiFi Expand the Message Rates sub-menu under the GNSS Config menu. Pressing the NMEAx5 + RXMx2 message button will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). Press the 'Save and Exit' button. Upon reset, the unit should begin displaying a gradually increasing logging icon indicating successful logging. Config via Serial Press 2 and then 8 to enable the PPP logging defaults After enabling the NMEA and RXM messages, exit from the serial menu by pressing x repeatedly. The system will save and apply the settings. Deploy Unit Once the RTK product is configured, power it up with microSD inserted, and leave the unit in Rover mode. This will record all the data (NMEA, UBX, and RAWX) from the receiver to a .ubx file. We do not yet know the location of the antenna so we stay in Rover mode to allow it to compile a large amount of satellite data. Only after we have confirmed its location should you enter **Base* mode. The logging icon will remain animated while the log file is increasing Confirm Recording Before leaving the unit for 6 to 24 hours, it is recommended that you capture a few minutes of RAWX log data, with the antenna located with a clear view of the sky, and then inspect the log to confirm everything is working correctly. Getting UBX file from SD card Remove the microSD from the RTK unit and open it on a computer. The latest log file is shown above. Note the file shown above is 492kB because it logged only ~60 seconds. Log files with RAWX and SFRBX and NMEA will grow in size to over 1GB across 24 hours. The quickest method to verify RAWX logging is to open the UBX file with a text editor. NMEA and UBX binary data viewed in Visual Studio Code Your editor may render the binary UBX RAWX data in unknown ways. If you see NMEA ASCII sentences combined with large chunks of binary data, the RTK product is correctly logging RAWX data. If you have u-center installed, you can more easily inspect for successful logging. Double click on a UBX file to open them in u-center. Viewing a RAWX log in u-center Press the play button (shown above) and you should see satellites quickly come in and out of view as u-center 'plays' back the log file. RAWX packet within the Packet Console Open the Packet Console and verify the UBX RXM-RAWX and SFRBX packets are logged. You are now ready to do a long survey of the antenna's position. Allow this to run for 24 hours. Don\u2019t worry if you go long but do realize that a 24-hour file will be ~1GB so don\u2019t let it run for a month. From Suelynn Choy's \u2018 GNSS Precision Point Positioning \u2019 presentation 2018 Capturing 6 hours is good, 24 is slightly better (note the logarithmic scale for position error in the graph above). Most PPP analysis services will accept more than 24 hours of data but they may truncate it to 24 hours. If you capture 30 hours of RAWX data, that\u2019s ok, we will show you how to trim a file that is too long. Converting UBX to RINEX Once the 24-hour log file is obtained, the 1GB UBX file will need to be converted to RINEX (Receiver Independent Exchange Format). The popular RTKLIB is here to help. We recommend the rtklibexplorer\u2019s modified version of RTKLIB (available for download here ) but you can obtain the original RTKLIB here . Open RTKCONV. Select your UBX file and hit \u2018Convert\u2019. Our 300MB file took ~30 seconds to convert. You should see a *.obs file once complete. An OBS file with 14 hours of data If your data file is 25 hours or a little more, that\u2019s fine. If you need to cut your RINEX file down because it\u2019s too large (or 40 hours long) you can trim the time window. Convert the entire file then click on the notepad icon to open the OBS file. You\u2019ll see the GPS start time and stop time for this capture. Using these times, you can limit the time window to whatever you need and re-convert the file. Why don\u2019t we crank up the fix rate? Moar is better!\u2122 The RTK products can log fix rates up to 20Hz. Why not get RAWX data at greater than 1Hz? Because nature doesn\u2019t move that fast. Most PPP analysis services will ignore anything greater than 1Hz. OPUS goes so far as to \u201cdecimate all recording rates to 30 seconds\u201d. And, your OBS files will be monstrously large. If 24 hours is 1GB at 1Hz, it follows that 24 hours at 30Hz will be ~30 gigs. So no, keep it at 1Hz. We now need to pass the raw GNSS satellite data in RINEX format ( *.obs ) through a post-processing center to try to get the actual location of the antenna. There are a handful of services but we\u2019ve had great luck using the Canadian CSRS-PPP service . The US National Geodetic Service provides a service called OPUS but we found it to be frustratingly limited by file size and format issues. Your mileage may vary. Zip your obs file then create an account with CSRS . Select ITRF then upload your file. Twiddle your thumbs for a few hours and you should receive an email that looks like this: Click the 'Summary' link to open a summary of results. This summary contains the coordinates of your antenna in Geodetic, UTM, and Cartesian formats. The SparkFun antenna with +/-2mm of accuracy! :O The email will also include a fancy PDF report of your antenna\u2019s location but does not include the Cartesian coordinates we will need later. If all goes well you should have a very precise location for your antenna. For SparkFun RTK products we are most interested in ECEF coordinates. ECEF is fascinating . Rather than lat and long, ECEF is the number of meters from the internationally agreed-upon reference frame of the center of mass of the Earth. Basically, your ECEF coordinates are the distance you are from the center of the Earth . Neat. Configuring Fixed Location Now that you\u2019ve got the ECEF position of your antenna, let\u2019s tell the RTK product where its antenna is located with a few millimeters of accuracy. Config via WiFi Enter the WiFi AP config page or connect over Serial. Setting ECEF coordinates over WiFi Select Fixed and ECEF Coordinates then enter the coordinates obtained from the CSRS-PPP email. Configuring NTRIP Server settings via WiFi Config AP If your RTK product has access to a WiFi network, consider enabling the NTRIP Server. This will allow the RTK device to automatically begin transmitting its RTCM data to an NTRIP Caster once it has entered Fixed Base mode. See Creating NTRIP Caster for more information. Save the settings to the RTK unit and exit. Config via Serial Base Menu Options To configure over serial, press 3 to open the Base menu, then 1 to toggle the Base Mode to Fixed/Static Position, then enter the three ECEF coordinates. Settings for the NTRIP Server If your RTK product has access to a WiFi network, consider enabling the NTRIP Server. This will allow the RTK device to automatically begin transmitting its RTCM data to an NTRIP Caster once it has entered Fixed Base mode. See Creating NTRIP Caster for more information. Press x multiple times to exit the serial menu. Beginning Base Mode Power cycle the unit to load the Fixed ECEF coordinates. After boot, use the Setup button to enter Base mode. RTK Facet in Fixed Transmit Mode Almost immediately after entering Base mode, the unit will begin outputting RTCM messages. These RTCM messages are sent to the RADIO port on the device. This is helpful for transmitting corrections via serial radio to any Rover units within a 10km baseline. RTK Facet in Transmit Mode with NTRIP Server Enabled If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second. Creating NTRIP Caster Your RTK device can both serve RTCM correction data (aka Server) to an NTRIP Caster and get RTCM correction data (aka Client) from an NTRIP Caster. But how does one get an NTRIP Caster? There are a variety of Windows applications out there that claim to be an NTRIP caster. We found them to be generally terrible. The easiest solutions we've found are RTK2GO or Emlid Caster . Both are free and available to the public. RTK2Go RTK2Go seems to be a pet project of SNIP. We recommend creating a mount point and a password through RTK2GO.com. Yes, the RTK2go website looks spammy but the service works well and is used widely. Please see RTK2Go for details about creating an account. It's free and takes only a few minutes. Once activated you will be provided with your Mount Point name and Mount Point PW. These two credentials are used in an NTRIP Server setup: NTRIP Server: WiFi SSID/PW - These are your local WiFi credentials Caster Host: rtk2go.com Caster Port: 2101 Caster User Name: Not needed Caster User PW: Not needed Mount Point: Provided by RTK2Go Mount Point PW: Required and provided by RTK2Go NTRIP Client: WiFi SSID/PW - These are your local WiFi credentials Caster Host: rtk2go.com Caster Port: 2101 Caster User Name: Your Valid Email Address Caster User PW: Not needed Mount Point: Provided by RTK2Go Mount Point PW: Not Needed The differences between Server and Client are small. The Server needs to know the mount point PW as it needs to be authorized to push data there. The Client needs to know which mount point but does not need a mount point password. Note: You must provide a valid email address to RTK2Go. From RTK2Go: It is now REQUIRED that all data consumers (Rover devices) provide a valid email address in the NTRIP Client user account name field when accessing the Caster. The SparkFun Mount Point 'bldr_SparkFun1' To verify that your RTK product is correctly broadcasting RTCM data, you can access RTK2Go from a browser on Port 2101. This link RTK2Go.com:2101 will show a list of all current NTRIP Servers that are pushing data to the RTK2Go caster, and are available to be accessed, free of charge, by any NTRIP Client in the world. Emlid Caster Emlid Caster is also very easy to set up and has a bit more user-friendly-looking website. Creating an account is very straightforward. Emlid Mount Points with PWs removed Once your account is created, you'll be presented with Mount Points and Rovers. NTRIP Server: WiFi SSID/PW - These are your local WiFi credentials Caster Host: caster.emlid.com Caster Port: 2101 Caster User Name: Not needed Caster User PW: Not needed Mount Point: Required. MP1979 for example. Shown in your mount point dashboard. Mount Point PW: Required. Shown in your mount point dashboard. NTRIP Client: WiFi SSID/PW - These are your local WiFi credentials Caster Host: caster.emlid.com Caster Port: 2101 Caster User Name: Required. Shown in your rover dashboard. Caster User PW: Required. Shown in your rover dashboard. Mount Point: Required. Shown in your rover dashboard. Mount Point PW: Not Needed 'Online' Badge Illuminated To verify that your RTK product is correctly broadcasting RTCM data open the Emlid Caster dashboard. Once a device is successfully connected as a mount point or rover, the Emlid dashboard will turn green.","title":"Creating a Permanent Base"},{"location":"permanent_base/#creating-a-permanent-base","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: This section goes into depth on how to gather the data using an RTK product to create a permanent fixed base. Note: The RTK Facet and RTK Facet L-Band are rated IP53 - Protected from limited dust ingress and water spray. As such it is not recommended for permanent outdoor deployment. Use the RTK Surveyor or Express with a fully sealed TOP106 antenna . Note: The RTK Express Plus does not support Base mode.","title":"Creating a Permanent Base"},{"location":"permanent_base/#temporary-vs-fixed-base","text":"There are two types of bases: Surveyed and Fixed . A surveyed base is often a temporary base set up in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. In a separate tutorial, we described how to create a temporary base station with the 1 to 10-minute survey-in method. The temporary base method is flexible, but it is not as accurate and can vary dramatically in the time required. The ZED-F9P has a much faster way to provide base corrections: if you know the location of your antenna, you can set the coordinates of the receiver and it will immediately start providing RTCM corrections. The problem is \u2018what is the location of the antenna?\u2019. It\u2019s as if you need a soldering iron to assemble your soldering iron kit . Where do we start? Why don\u2019t I just survey-in my fixed antenna to get its location? While a survey-in is easy to set up and fine for an in-the-field way to establish the location of a base, it\u2019s not recommended for getting the fixed location of a static base station as it is less accurate. Instead, PPP or Precise Point Positioning is far more accurate and is recommended for obtaining your antenna\u2019s position. It\u2019s a similar process but involves bouncing frick\u2019n lasers off of satellites! A major problem is that the predicted orbits are often off by one meter or more. Ground stations bounce lasers off the individual satellites as they pass overhead and use this new data to compute the actual orbits of the satellites. Using this new ephemeris data, when it becomes available, combined with the receiver\u2019s raw data, better fixes can be computed. This is the basis of PPP. From Gary Miller\u2019s PPP HOWTO L1/L2 antenna semi-fixed to a flat roof The PPP process works like this: Install an antenna in a fixed location Gather 24 hours' worth of raw GNSS data from that antenna Pass the raw data to a processing center for PPP Obtain a highly accurate position of the antenna we use to set a \u2018Fixed Mode\u2019 on a receiver There are some great articles written about PPP. We\u2019ll scrape the surface but for more information check out: Gary Miller\u2019s great PPP HOWTO Emlid\u2019s PPP Suelynn Choy, GNSS PPP","title":"Temporary vs. Fixed Base"},{"location":"permanent_base/#affix-your-antenna","text":"You don\u2019t want your antenna moving once you\u2019ve determined its position. Consider investing in a premium antenna but we\u2019ve used the classic u-blox L1/L2 antenna with good success. Mount the antenna to a proper ground plane on a fixed surface that has a very clear view of the sky. No nearby anything. The u-blox antenna attached to SparkFun\u2019s parapet We mounted the u-blox antenna to the ferrous flashing around the top of the SparkFun building. While not completely permanent, the magnets on the u-blox antenna are tested to survive automobile strength winds so it should be fine in the 100+ MPH winds experienced in the front range of Colorado. The u-blox ANN-MB-00 antenna has a 5m cable attached but this was not long enough to get from the SparkFun roof to the receiver so we attached a 10m SMA extension. It\u2019s true that most L1/L2 antennas have a built-in amplifier but every meter of extension and every connector will slightly degrade the GNSS signal. Limit the use of connector converters and use an extension as short as possible to get where you need. If you want to use a higher-grade antenna that doesn\u2019t have a magnetic base we\u2019ve come up with a great way to create a stable fix point without the need for poking holes in your roof! Yes, that\u2019s a cinder block. Don\u2019t laugh. It works! Most surveying grade antennas have a \u215d\u201d 11-TPI (threads per inch) thread on the bottom of the antenna. Luckily, \u215d\u201d 11-TPI is the thread found on wedge anchors in hardware stores in the US. Wedge anchors are designed to hold walls to foundations but luckily for us, we can use the same hardware to anchor an antenna. (We\u2019ve also heard of concrete anchors that use epoxy so be sure to shop around.) I needed to mount an antenna to my roof. Luckily, I had two, leftover cinder blocks from a weather station that, based on the Electric Imp , had long since been retired. Step one is drilling the \u215d\u201d hole into the cinder block. The masonry bit cost me $20 but cheaper, less fancy ones can be had for less than $10 . The blue tape shows me the depth I\u2019m trying to hit. The cinder block is 3.5\u201d thick so I settled on ~2.5\u201d deep. Once the hole is drilled, tip the block upside down to get most of the cement dust out. Then pound the anchor into place. Oops! Don\u2019t get greedy! I pounded the anchor so far that it split the block. Luckily, I had a second block! Once the anchor is ~2 inches into the hole tighten the bolt. This will draw the anchor back up compressing the collar into place. Note: I finger tightened the bolt and added a \u00bd turn with a wrench. If you really go after the bolt and tighten it too much you risk pushing the collar out further and breaking the cinder block in half (see Ooops! picture above). We are not anchoring a wall here, just a 400g antenna . I used a 2nd bolt, tightened against the antenna base, to lock it into place and prevent rotation in either direction. Astute readers will notice my TNC to SMA adapter in the picture above. It\u2019s the wrong gender. Originally, I used an SMA extension to connect my GPS-RTK-SMA to my u-blox L1/L2 antenna on my roof. The GPS-RTK-SMA expects a regular SMA connection so the end of the extension would not connect to this adapter. So before you get out the ladder, test connect everything! Luckily I have a set of adapters and found the right TNC to SMA converter to suit my needs. It\u2019s a bit of work getting 35lbs of concrete onto a roof but the view is pretty spectacular! I wrapped the SMA extension once around the base. In case anything pulls on the SMA cable the tension will be transferred to the bolt rather than the TNC connection to the antenna. Lightning Warning: My antenna profile is lower than the parapet so lightning strikes are unlikely. Your antenna may be the highest point around so consider lightning protection.","title":"Affix Your Antenna"},{"location":"permanent_base/#gather-raw-gnss-data","text":"Once you\u2019ve got the antenna into a location where it will not move or be moved we need to establish its location. Power on your RTK unit and verify that you can get a lock and see 25+ satellites. Assuming you\u2019ve got good reception, we now need to set the receiver to output raw data from the satellites. You will need a microSD card that is 1GB up to 32GB formatted for FAT16 or FAT32. The microSD slot on the bottom of the RTK Facet","title":"Gather Raw GNSS Data"},{"location":"permanent_base/#enable-rawx-and-sfrbx","text":"Power on the unit and using the serial or WiFi method , connect to the device.","title":"Enable RAWX and SFRBX"},{"location":"permanent_base/#config-via-wifi","text":"Expand the Message Rates sub-menu under the GNSS Config menu. Pressing the NMEAx5 + RXMx2 message button will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). Press the 'Save and Exit' button. Upon reset, the unit should begin displaying a gradually increasing logging icon indicating successful logging.","title":"Config via WiFi"},{"location":"permanent_base/#config-via-serial","text":"Press 2 and then 8 to enable the PPP logging defaults After enabling the NMEA and RXM messages, exit from the serial menu by pressing x repeatedly. The system will save and apply the settings.","title":"Config via Serial"},{"location":"permanent_base/#deploy-unit","text":"Once the RTK product is configured, power it up with microSD inserted, and leave the unit in Rover mode. This will record all the data (NMEA, UBX, and RAWX) from the receiver to a .ubx file. We do not yet know the location of the antenna so we stay in Rover mode to allow it to compile a large amount of satellite data. Only after we have confirmed its location should you enter **Base* mode. The logging icon will remain animated while the log file is increasing","title":"Deploy Unit"},{"location":"permanent_base/#confirm-recording","text":"Before leaving the unit for 6 to 24 hours, it is recommended that you capture a few minutes of RAWX log data, with the antenna located with a clear view of the sky, and then inspect the log to confirm everything is working correctly. Getting UBX file from SD card Remove the microSD from the RTK unit and open it on a computer. The latest log file is shown above. Note the file shown above is 492kB because it logged only ~60 seconds. Log files with RAWX and SFRBX and NMEA will grow in size to over 1GB across 24 hours. The quickest method to verify RAWX logging is to open the UBX file with a text editor. NMEA and UBX binary data viewed in Visual Studio Code Your editor may render the binary UBX RAWX data in unknown ways. If you see NMEA ASCII sentences combined with large chunks of binary data, the RTK product is correctly logging RAWX data. If you have u-center installed, you can more easily inspect for successful logging. Double click on a UBX file to open them in u-center. Viewing a RAWX log in u-center Press the play button (shown above) and you should see satellites quickly come in and out of view as u-center 'plays' back the log file. RAWX packet within the Packet Console Open the Packet Console and verify the UBX RXM-RAWX and SFRBX packets are logged. You are now ready to do a long survey of the antenna's position. Allow this to run for 24 hours. Don\u2019t worry if you go long but do realize that a 24-hour file will be ~1GB so don\u2019t let it run for a month. From Suelynn Choy's \u2018 GNSS Precision Point Positioning \u2019 presentation 2018 Capturing 6 hours is good, 24 is slightly better (note the logarithmic scale for position error in the graph above). Most PPP analysis services will accept more than 24 hours of data but they may truncate it to 24 hours. If you capture 30 hours of RAWX data, that\u2019s ok, we will show you how to trim a file that is too long.","title":"Confirm Recording"},{"location":"permanent_base/#converting-ubx-to-rinex","text":"Once the 24-hour log file is obtained, the 1GB UBX file will need to be converted to RINEX (Receiver Independent Exchange Format). The popular RTKLIB is here to help. We recommend the rtklibexplorer\u2019s modified version of RTKLIB (available for download here ) but you can obtain the original RTKLIB here . Open RTKCONV. Select your UBX file and hit \u2018Convert\u2019. Our 300MB file took ~30 seconds to convert. You should see a *.obs file once complete. An OBS file with 14 hours of data If your data file is 25 hours or a little more, that\u2019s fine. If you need to cut your RINEX file down because it\u2019s too large (or 40 hours long) you can trim the time window. Convert the entire file then click on the notepad icon to open the OBS file. You\u2019ll see the GPS start time and stop time for this capture. Using these times, you can limit the time window to whatever you need and re-convert the file. Why don\u2019t we crank up the fix rate? Moar is better!\u2122 The RTK products can log fix rates up to 20Hz. Why not get RAWX data at greater than 1Hz? Because nature doesn\u2019t move that fast. Most PPP analysis services will ignore anything greater than 1Hz. OPUS goes so far as to \u201cdecimate all recording rates to 30 seconds\u201d. And, your OBS files will be monstrously large. If 24 hours is 1GB at 1Hz, it follows that 24 hours at 30Hz will be ~30 gigs. So no, keep it at 1Hz. We now need to pass the raw GNSS satellite data in RINEX format ( *.obs ) through a post-processing center to try to get the actual location of the antenna. There are a handful of services but we\u2019ve had great luck using the Canadian CSRS-PPP service . The US National Geodetic Service provides a service called OPUS but we found it to be frustratingly limited by file size and format issues. Your mileage may vary. Zip your obs file then create an account with CSRS . Select ITRF then upload your file. Twiddle your thumbs for a few hours and you should receive an email that looks like this: Click the 'Summary' link to open a summary of results. This summary contains the coordinates of your antenna in Geodetic, UTM, and Cartesian formats. The SparkFun antenna with +/-2mm of accuracy! :O The email will also include a fancy PDF report of your antenna\u2019s location but does not include the Cartesian coordinates we will need later. If all goes well you should have a very precise location for your antenna. For SparkFun RTK products we are most interested in ECEF coordinates. ECEF is fascinating . Rather than lat and long, ECEF is the number of meters from the internationally agreed-upon reference frame of the center of mass of the Earth. Basically, your ECEF coordinates are the distance you are from the center of the Earth . Neat.","title":"Converting UBX to RINEX"},{"location":"permanent_base/#configuring-fixed-location","text":"Now that you\u2019ve got the ECEF position of your antenna, let\u2019s tell the RTK product where its antenna is located with a few millimeters of accuracy.","title":"Configuring Fixed Location"},{"location":"permanent_base/#config-via-wifi_1","text":"Enter the WiFi AP config page or connect over Serial. Setting ECEF coordinates over WiFi Select Fixed and ECEF Coordinates then enter the coordinates obtained from the CSRS-PPP email. Configuring NTRIP Server settings via WiFi Config AP If your RTK product has access to a WiFi network, consider enabling the NTRIP Server. This will allow the RTK device to automatically begin transmitting its RTCM data to an NTRIP Caster once it has entered Fixed Base mode. See Creating NTRIP Caster for more information. Save the settings to the RTK unit and exit.","title":"Config via WiFi"},{"location":"permanent_base/#config-via-serial_1","text":"Base Menu Options To configure over serial, press 3 to open the Base menu, then 1 to toggle the Base Mode to Fixed/Static Position, then enter the three ECEF coordinates. Settings for the NTRIP Server If your RTK product has access to a WiFi network, consider enabling the NTRIP Server. This will allow the RTK device to automatically begin transmitting its RTCM data to an NTRIP Caster once it has entered Fixed Base mode. See Creating NTRIP Caster for more information. Press x multiple times to exit the serial menu.","title":"Config via Serial"},{"location":"permanent_base/#beginning-base-mode","text":"Power cycle the unit to load the Fixed ECEF coordinates. After boot, use the Setup button to enter Base mode. RTK Facet in Fixed Transmit Mode Almost immediately after entering Base mode, the unit will begin outputting RTCM messages. These RTCM messages are sent to the RADIO port on the device. This is helpful for transmitting corrections via serial radio to any Rover units within a 10km baseline. RTK Facet in Transmit Mode with NTRIP Server Enabled If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second.","title":"Beginning Base Mode"},{"location":"permanent_base/#creating-ntrip-caster","text":"Your RTK device can both serve RTCM correction data (aka Server) to an NTRIP Caster and get RTCM correction data (aka Client) from an NTRIP Caster. But how does one get an NTRIP Caster? There are a variety of Windows applications out there that claim to be an NTRIP caster. We found them to be generally terrible. The easiest solutions we've found are RTK2GO or Emlid Caster . Both are free and available to the public.","title":"Creating NTRIP Caster"},{"location":"permanent_base/#rtk2go","text":"RTK2Go seems to be a pet project of SNIP. We recommend creating a mount point and a password through RTK2GO.com. Yes, the RTK2go website looks spammy but the service works well and is used widely. Please see RTK2Go for details about creating an account. It's free and takes only a few minutes. Once activated you will be provided with your Mount Point name and Mount Point PW. These two credentials are used in an NTRIP Server setup: NTRIP Server: WiFi SSID/PW - These are your local WiFi credentials Caster Host: rtk2go.com Caster Port: 2101 Caster User Name: Not needed Caster User PW: Not needed Mount Point: Provided by RTK2Go Mount Point PW: Required and provided by RTK2Go NTRIP Client: WiFi SSID/PW - These are your local WiFi credentials Caster Host: rtk2go.com Caster Port: 2101 Caster User Name: Your Valid Email Address Caster User PW: Not needed Mount Point: Provided by RTK2Go Mount Point PW: Not Needed The differences between Server and Client are small. The Server needs to know the mount point PW as it needs to be authorized to push data there. The Client needs to know which mount point but does not need a mount point password. Note: You must provide a valid email address to RTK2Go. From RTK2Go: It is now REQUIRED that all data consumers (Rover devices) provide a valid email address in the NTRIP Client user account name field when accessing the Caster. The SparkFun Mount Point 'bldr_SparkFun1' To verify that your RTK product is correctly broadcasting RTCM data, you can access RTK2Go from a browser on Port 2101. This link RTK2Go.com:2101 will show a list of all current NTRIP Servers that are pushing data to the RTK2Go caster, and are available to be accessed, free of charge, by any NTRIP Client in the world.","title":"RTK2Go"},{"location":"permanent_base/#emlid-caster","text":"Emlid Caster is also very easy to set up and has a bit more user-friendly-looking website. Creating an account is very straightforward. Emlid Mount Points with PWs removed Once your account is created, you'll be presented with Mount Points and Rovers. NTRIP Server: WiFi SSID/PW - These are your local WiFi credentials Caster Host: caster.emlid.com Caster Port: 2101 Caster User Name: Not needed Caster User PW: Not needed Mount Point: Required. MP1979 for example. Shown in your mount point dashboard. Mount Point PW: Required. Shown in your mount point dashboard. NTRIP Client: WiFi SSID/PW - These are your local WiFi credentials Caster Host: caster.emlid.com Caster Port: 2101 Caster User Name: Required. Shown in your rover dashboard. Caster User PW: Required. Shown in your rover dashboard. Mount Point: Required. Shown in your rover dashboard. Mount Point PW: Not Needed 'Online' Badge Illuminated To verify that your RTK product is correctly broadcasting RTCM data open the Emlid Caster dashboard. Once a device is successfully connected as a mount point or rover, the Emlid dashboard will turn green.","title":"Emlid Caster"},{"location":"readme/","text":"This folder contains the markdown files for the RTK Product Manual that are rendered by mkdocs .","title":"Readme"},{"location":"system_configuration/","text":"System Configuration Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: All device settings are stored both in internal memory and an SD card if one is detected. The device will load the latest settings at each power on. If there is a discrepancy between the internal settings and a settings file then the settings file will be used. This allows a collection of RTK products to be identically configured using one 'golden' settings file loaded onto an SD card. There are three ways to configure an RTK product: WiFi - Good for in-field changes Serial Terminal - Requires a computer but allows for all configuration settings Settings File - Error-Prone; for very advanced users only. The serial terminal method is recommended for most advanced configurations. Most, but not all settings are also available over WiFi but can be tricky to input via mobile phone. Firmware configuration options include: Base GNSS Messages GNSS Receiver Logging Point Perfect Ports Profiles Hardware configuration: * Bluetooth Connection * Embedded System Connection Software configuration options include: * GIS Software * u-center","title":"System Configuration"},{"location":"system_configuration/#system-configuration","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: All device settings are stored both in internal memory and an SD card if one is detected. The device will load the latest settings at each power on. If there is a discrepancy between the internal settings and a settings file then the settings file will be used. This allows a collection of RTK products to be identically configured using one 'golden' settings file loaded onto an SD card. There are three ways to configure an RTK product: WiFi - Good for in-field changes Serial Terminal - Requires a computer but allows for all configuration settings Settings File - Error-Prone; for very advanced users only. The serial terminal method is recommended for most advanced configurations. Most, but not all settings are also available over WiFi but can be tricky to input via mobile phone. Firmware configuration options include: Base GNSS Messages GNSS Receiver Logging Point Perfect Ports Profiles Hardware configuration: * Bluetooth Connection * Embedded System Connection Software configuration options include: * GIS Software * u-center","title":"System Configuration"},{"location":"system_status_report/","text":"System Report Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Sending the ~ character to the device over the serial port will trigger a system status report. This is a custom NMEA-style sentence, complete with CRC. Terminal showing System Status Below is an example system status report sentence: $GNTXT,01,01,05,202447.00,270522,0.380,29,40.090355193,-105.184764700,1560.56,3,0,86*71 $GNTXT : Start of custom NMEA sentence 01 : Number of sentences 01 : Sentence number 05 : Sentence type ID (5 is for System Status messages) 202447.00 : Current hour, minute, second, milliseconds 270522 : Current day, month, year 0.380 : Current horizontal positional accuracy (m) 29 : Satellites in view 40.090355193 : Latitude -105.184764700 : Longitude 1560.56 : Altitude 3 : Fix type (0 = no fix, 2 = 2D fix, 3 = 3D fix, 4 = 3D + Dead Reackoning, 5 = Time) 0 : Carrier solution (0 = No RTK, 1 = RTK Float, 2 = RTK Fix) 86 : Battery level (% remaining) *71 : The completion of the sentence and a CRC Note: This is a custom NMEA sentence, can vary in length, and may exceed the maximum permitted sentence length of 61 characters.","title":"System Report"},{"location":"system_status_report/#system-report","text":"Surveyor: / Express: / Express Plus: / Facet: / Facet L-Band: Sending the ~ character to the device over the serial port will trigger a system status report. This is a custom NMEA-style sentence, complete with CRC. Terminal showing System Status Below is an example system status report sentence: $GNTXT,01,01,05,202447.00,270522,0.380,29,40.090355193,-105.184764700,1560.56,3,0,86*71 $GNTXT : Start of custom NMEA sentence 01 : Number of sentences 01 : Sentence number 05 : Sentence type ID (5 is for System Status messages) 202447.00 : Current hour, minute, second, milliseconds 270522 : Current day, month, year 0.380 : Current horizontal positional accuracy (m) 29 : Satellites in view 40.090355193 : Latitude -105.184764700 : Longitude 1560.56 : Altitude 3 : Fix type (0 = no fix, 2 = 2D fix, 3 = 3D fix, 4 = 3D + Dead Reackoning, 5 = Time) 0 : Carrier solution (0 = No RTK, 1 = RTK Float, 2 = RTK Fix) 86 : Battery level (% remaining) *71 : The completion of the sentence and a CRC Note: This is a custom NMEA sentence, can vary in length, and may exceed the maximum permitted sentence length of 61 characters.","title":"System Report"}]}